name: Copy jmalcloud:test to jmalcloud:latest

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  SOURCE_IMAGE_DOCKERHUB: jmal/jmalcloud:test

jobs:
  copy-tags:
    runs-on: ubuntu-latest

    steps:
      - name: Set PROJECT_VERSION from release tag (strip leading v)
        if: github.event_name == 'release'
        run: |
          ver="${{ github.event.release.tag_name }}"
          ver="${ver#v}"
          echo "PROJECT_VERSION=$ver" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_IO_TOKEN }}

      - name: Copy Docker Hub tag jmalcloud:test -> latest (+version if present)
        run: |
          # latest
          docker buildx imagetools create \
            -t jmal/jmalcloud:latest \
            "${SOURCE_IMAGE_DOCKERHUB}"

          # version tag (only if PROJECT_VERSION is set)
          if [ -n "${PROJECT_VERSION}" ]; then
            docker buildx imagetools create \
              -t "jmal/jmalcloud:${PROJECT_VERSION}" \
              "${SOURCE_IMAGE_DOCKERHUB}"
          fi

      - name: Copy GHCR tag jmalcloud:test -> latest (+version if present)
        run: |
          # latest
          docker buildx imagetools create \
            -t "ghcr.io/${{ github.actor }}/jmalcloud:latest" \
            "${SOURCE_IMAGE_DOCKERHUB}"

          # version tag (only if PROJECT_VERSION is set)
          if [ -n "${PROJECT_VERSION}" ]; then
            docker buildx imagetools create \
              -t "ghcr.io/${{ github.actor }}/jmalcloud:${PROJECT_VERSION}" \
              "${SOURCE_IMAGE_DOCKERHUB}"
          fi
