name: Copy jmalcloud:test to Aliyun (single-arch, no build)

on:
  workflow_dispatch:
  release:
    types: [ published ]

env:
  SOURCE_IMAGE: jmal/jmalcloud:test
  SOURCE_IMAGE_SQL: jmal/jmalcloud-sql:test

jobs:
  copy_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ amd64, arm64 ]

    steps:
      - name: Set PROJECT_VERSION from release tag (strip leading v)
        if: github.event_name == 'release'
        run: |
          ver="${{ github.event.release.tag_name }}"
          ver="${ver#v}"
          echo "PROJECT_VERSION=$ver" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Aliyun Container Registry (Guangzhou)
        uses: docker/login-action@v3
        with:
          registry: registry.cn-guangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}

      - name: Log in to Aliyun Container Registry (Beijing)
        uses: docker/login-action@v3
        with:
          registry: registry.cn-beijing.aliyuncs.com
          username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}

      - name: Set tags for amd64
        if: matrix.arch == 'amd64'
        run: |
          echo "TAG_LATEST_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud:latest" >> $GITHUB_ENV
          echo "TAG_VERSION_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud:${PROJECT_VERSION}" >> $GITHUB_ENV
          echo "TAG_LATEST_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud:latest" >> $GITHUB_ENV
          echo "TAG_VERSION_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud:${PROJECT_VERSION}" >> $GITHUB_ENV
          echo "TAG_LATEST_SQL_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud-sql:latest" >> $GITHUB_ENV
          echo "TAG_VERSION_SQL_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud-sql:${PROJECT_VERSION}" >> $GITHUB_ENV
          echo "TAG_LATEST_SQL_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud-sql:latest" >> $GITHUB_ENV
          echo "TAG_VERSION_SQL_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud-sql:${PROJECT_VERSION}" >> $GITHUB_ENV

      - name: Set tags for non-amd64
        if: matrix.arch != 'amd64'
        run: |
          echo "TAG_LATEST_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud:latest-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "TAG_VERSION_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud:${PROJECT_VERSION}-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "TAG_LATEST_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud:latest-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "TAG_VERSION_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud:${PROJECT_VERSION}-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "TAG_LATEST_SQL_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud-sql:latest-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "TAG_VERSION_SQL_0=registry.cn-guangzhou.aliyuncs.com/jmalcloud/jmalcloud-sql:${PROJECT_VERSION}-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "TAG_LATEST_SQL_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud-sql:latest-${{ matrix.arch }}" >> $GITHUB_ENV
          echo "TAG_VERSION_SQL_1=registry.cn-beijing.aliyuncs.com/jmalcloud/jmalcloud-sql:${PROJECT_VERSION}-${{ matrix.arch }}" >> $GITHUB_ENV

      # MongoDB 版本
      - name: Copy to Aliyun (Guangzhou) from ${{ env.SOURCE_IMAGE }} for linux/${{ matrix.arch }}
        run: |
          docker buildx imagetools create \
            --filter=platform=linux/${{ matrix.arch }} \
            -t "${{ env.TAG_LATEST_0 }}" \
            -t "${{ env.TAG_VERSION_0 }}" \
            "${{ env.SOURCE_IMAGE }}"

      - name: Copy to Aliyun (Beijing) from ${{ env.SOURCE_IMAGE }} for linux/${{ matrix.arch }}
        run: |
          docker buildx imagetools create \
            --filter=platform=linux/${{ matrix.arch }} \
            -t "${{ env.TAG_LATEST_1 }}" \
            -t "${{ env.TAG_VERSION_1 }}" \
            "${{ env.SOURCE_IMAGE }}"

      # SQL 版本
      - name: Copy to Aliyun (Guangzhou) from ${{ env.SOURCE_IMAGE_SQL }} for linux/${{ matrix.arch }}
        run: |
          docker buildx imagetools create \
            --filter=platform=linux/${{ matrix.arch }} \
            -t "${{ env.TAG_LATEST_SQL_0 }}" \
            -t "${{ env.TAG_VERSION_SQL_0 }}" \
            "${{ env.SOURCE_IMAGE_SQL }}"

      - name: Copy to Aliyun (Beijing) from ${{ env.SOURCE_IMAGE_SQL }} for linux/${{ matrix.arch }}
        run: |
          docker buildx imagetools create \
            --filter=platform=linux/${{ matrix.arch }} \
            -t "${{ env.TAG_LATEST_SQL_1 }}" \
            -t "${{ env.TAG_VERSION_SQL_1 }}" \
            "${{ env.SOURCE_IMAGE_SQL }}"
