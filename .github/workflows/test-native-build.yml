name: Build test native (Multi-Arch)

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build-per-arch:
    strategy:
      matrix:
        include:
          - arch: amd64
            os: ubuntu-latest
            march_arg: x86-64-v3
          - arch: arm64
            os: ubuntu-22.04-arm
            march_arg: armv8-a

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract project version from pom.xml
        id: project_version
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up GraalVM for Native Image
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Build Native Image with Maven
        run: mvn clean package -Pnative -DskipTests -Dmy.native.build.args="--gc=G1 -march=${{ matrix.march_arg }} -H:+UnlockExperimentalVMOptions -H:+AddAllCharsets -H:+AllowIncompleteClasspath"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_IO_USERNAME }}
          password: ${{ secrets.GHCR_IO_TOKEN }}

      - name: Build and push arch-specific image
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          file: ./Dockerfile.native
          push: true
          tags: |
            jmal/jmalcloud_native:test-${{ matrix.arch }}
            ghcr.io/${{ secrets.GHCR_IO_USERNAME }}/jmalcloud_native:test-${{ matrix.arch }}
          platforms: linux/${{ matrix.arch }}
          build-args: |
            VERSION=${{ env.PROJECT_VERSION }}

      - name: Inspect the pushed image RIGHT AFTER push
        if: always()
        run: |
          echo "--- Inspecting Docker Hub image ---"
          docker manifest inspect jmal/jmalcloud_native:test-${{ matrix.arch }}
          
          echo "--- Inspecting GHCR image ---"
          docker manifest inspect ghcr.io/${{ secrets.GHCR_IO_USERNAME }}/jmalcloud_native:test-${{ matrix.arch }}

  merge-manifests:
    needs: build-per-arch
    runs-on: ubuntu-latest

    steps:
      - name: Wait for registry to become consistent
        run: |
          echo "Waiting for 30 seconds to allow registry caches to update..."
          sleep 30

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_IO_USERNAME }}
          password: ${{ secrets.GHCR_IO_TOKEN }}

      - name: Create and push Docker Hub manifest
        run: |
          docker manifest create jmal/jmalcloud_native:test \
            --amend jmal/jmalcloud_native:test-amd64 \
            --amend jmal/jmalcloud_native:test-arm64
          docker manifest push jmal/jmalcloud_native:test

      - name: Create and push GHCR manifest
        run: |
          docker manifest create ghcr.io/${{ secrets.GHCR_IO_USERNAME }}/jmalcloud_native:test \
            --amend ghcr.io/${{ secrets.GHCR_IO_USERNAME }}/jmalcloud_native:test-amd64 \
            --amend ghcr.io/${{ secrets.GHCR_IO_USERNAME }}/jmalcloud_native:test-arm64
          docker manifest push ghcr.io/${{ secrets.GHCR_IO_USERNAME }}/jmalcloud_native:test
