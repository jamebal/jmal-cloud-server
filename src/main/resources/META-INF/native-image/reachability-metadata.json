{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.ContentBrandingReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.ContentDescriptionReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.EncodingChunkReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.EncryptionChunkReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.FileHeaderReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.LanguageListReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.MetadataReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.StreamBitratePropertiesReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.audio.asf.io.StreamChunkReader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.datatype.ByteArraySizeTerminated",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.datatype.ByteArraySizeTerminated"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.datatype.NumberHashMap",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.datatype.NumberHashMap"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.datatype.PartOfSet",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.datatype.PartOfSet"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.datatype.StringHashMap",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.datatype.StringHashMap"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.datatype.StringNullTerminated",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.datatype.StringNullTerminated"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.datatype.TextEncodedStringNullTerminated"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.datatype.TextEncodedStringSizeTerminated"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyAPIC"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyCOMM"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyTALB",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyTALB"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyTIT2"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyTPE1"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyTPOS"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyTRCK"
          ]
        }
      ]
    },
    {
      "type": "org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.ByteBuffer",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jaudiotagger.tag.id3.framebody.FrameBodyTSSE"
          ]
        }
      ]
    },
    {
      "type": "[C"
    },
    {
      "type": "[I"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Ljava.lang.reflect.Field;"
    },
    {
      "type": "[Ljava.lang.reflect.Method;"
    },
    {
      "type": "[Ljava.nio.charset.Charset;"
    },
    {
      "type": "[Ljava.util.HashMap$Node;"
    },
    {
      "type": "[Lkotlin.annotation.AnnotationTarget;"
    },
    {
      "type": "[Lorg.apache.lucene.index.TermStates$PendingTermLookup;"
    },
    {
      "type": "[Lorg.apache.lucene.search.DisiWrapper;"
    },
    {
      "type": "[Lorg.apache.lucene.util.fst.FSTCompiler$Arc;"
    },
    {
      "type": "[Lorg.apache.lucene.util.fst.FSTCompiler$UnCompiledNode;"
    },
    {
      "type": "[Lorg.apache.lucene.util.packed.PackedInts$Reader;"
    },
    {
      "type": "[Lorg.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps;"
    },
    {
      "type": "[Lorg.openxmlformats.schemas.drawingml.x2006.picture.CTPicture;"
    },
    {
      "type": "[Lorg.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
    },
    {
      "type": "[Lorg.springframework.data.mongodb.core.index.CompoundIndex;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
      "type": "[Lorg.springframework.web.multipart.MultipartFile;"
    },
    {
      "type": "[Z"
    },
    {
      "type": "[[B"
    },
    {
      "type": "apple.security.AppleProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "boolean"
    },
    {
      "type": "ch.qos.logback.classic.Level",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.filter.LevelFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setLevel",
          "parameterTypes": [
            "ch.qos.logback.classic.Level"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.filter.ThresholdFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setLevel",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.FileAppender"
    },
    {
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.UnsynchronizedAppenderBase",
      "methods": [
        {
          "name": "addFilter",
          "parameterTypes": [
            "ch.qos.logback.core.filter.Filter"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.encoder.Encoder"
    },
    {
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setCharset",
          "parameterTypes": [
            "java.nio.charset.Charset"
          ]
        },
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.spi.ContextAware"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.filter.AbstractMatcherFilter",
      "methods": [
        {
          "name": "setOnMatch",
          "parameterTypes": [
            "ch.qos.logback.core.spi.FilterReply"
          ]
        },
        {
          "name": "setOnMismatch",
          "parameterTypes": [
            "ch.qos.logback.core.spi.FilterReply"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.filter.Filter"
    },
    {
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingFileAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setFile",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRollingPolicy",
          "parameterTypes": [
            "ch.qos.logback.core.rolling.RollingPolicy"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingPolicy"
    },
    {
      "type": "ch.qos.logback.core.rolling.RollingPolicyBase",
      "methods": [
        {
          "name": "setFileNamePattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.FileAppender"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMaxFileSize",
          "parameterTypes": [
            "ch.qos.logback.core.util.FileSize"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
      "methods": [
        {
          "name": "setMaxHistory",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "ch.qos.logback.core.spi.ContextAware"
    },
    {
      "type": "ch.qos.logback.core.spi.FilterReply"
    },
    {
      "type": "ch.qos.logback.core.util.FileSize",
      "methods": [
        {
          "name": "valueOf",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "cn.hutool.extra.ftp.SimpleFtpServer"
    },
    {
      "type": "cn.hutool.extra.spring.SpringUtil",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.alibaba.fastjson.JSONArray"
    },
    {
      "type": "com.alibaba.fastjson.JSONObject",
      "fields": [
        {
          "name": "map"
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson.annotation.JSONField"
    },
    {
      "type": "com.alibaba.fastjson2.JSONFactory$CacheItem",
      "fields": [
        {
          "name": "bytes"
        },
        {
          "name": "chars"
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.JSONObject"
    },
    {
      "type": "com.alibaba.fastjson2.util.TypeUtils$Cache",
      "fields": [
        {
          "name": "chars"
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.writer.FieldWriter",
      "fields": [
        {
          "name": "initObjectWriter"
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.writer.FieldWriterObject",
      "fields": [
        {
          "name": "initValueClass"
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.writer.OWG_1_5_ResponseResult",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.String",
            "java.lang.String",
            "long",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.writer.OWG_2_5_ResponseResult",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.String",
            "java.lang.String",
            "long",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.writer.OWG_3_5_ResponseResult",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.String",
            "java.lang.String",
            "long",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.writer.OWG_4_5_ResponseResult",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.String",
            "java.lang.String",
            "long",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.alibaba.fastjson2.writer.OWG_5_5_ResponseResult",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.String",
            "java.lang.String",
            "long",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.ctc.wstx.stax.WstxInputFactory"
    },
    {
      "type": "com.ctc.wstx.stax.WstxOutputFactory"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.drew.metadata.exif.ExifIFD0Directory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.drew.metadata.exif.ExifSubIFDDirectory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.annotation.JacksonAnnotation"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonFormat"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonFormat$Shape"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonIgnore"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Include"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonSetter$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonTypeInfo$As"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonView"
    },
    {
      "type": "com.fasterxml.jackson.annotation.PropertyAccessor"
    },
    {
      "type": "com.fasterxml.jackson.core.Base64Variant"
    },
    {
      "type": "com.fasterxml.jackson.core.FormatSchema"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonEncoding"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonProcessingException"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonToken"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.PrettyPrinter"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamReadFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamWriteFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeNode"
    },
    {
      "type": "com.fasterxml.jackson.core.Version"
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamReadException"
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamWriteException"
    },
    {
      "type": "com.fasterxml.jackson.core.io.CharacterEscapes"
    },
    {
      "type": "com.fasterxml.jackson.core.type.ResolvedType"
    },
    {
      "type": "com.fasterxml.jackson.core.type.TypeReference"
    },
    {
      "type": "com.fasterxml.jackson.databind.AnnotationIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.BeanDescription",
      "methods": [
        {
          "name": "findJsonValueAccessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.DatabindException"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.EnumNamingStrategy"
    },
    {
      "type": "com.fasterxml.jackson.databind.InjectableValues"
    },
    {
      "type": "com.fasterxml.jackson.databind.JavaType"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonMappingException"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonSerializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.KeyDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.MapperFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.MappingIterator"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.Module$SetupContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectReader"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectWriter"
    },
    {
      "type": "com.fasterxml.jackson.databind.PropertyNamingStrategy"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.CacheProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ConstructorDetector"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ContextAttributes"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.DatatypeFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.ValueInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.VisibilityChecker"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonschema.JsonSchema"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.NamedType"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleSerializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ArrayNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.JsonNodeFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ObjectNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.FilterProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.SerializerFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.LogicalType"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.TypeFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule$Builder"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.AsyncCache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.AsyncCacheLoader"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef",
      "fields": [
        {
          "name": "writeCounter"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BBHeader$ReadCounterRef",
      "fields": [
        {
          "name": "readCounter"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
      "fields": [
        {
          "name": "drainStatus"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BoundedLocalCache",
      "fields": [
        {
          "name": "refreshes"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Cache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.CacheLoader"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.CaffeineSpec"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PS",
      "fields": [
        {
          "name": "key"
        },
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PSA",
      "fields": [
        {
          "name": "accessTime"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PSAMS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PSW",
      "fields": [
        {
          "name": "writeTime"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PSWMS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.SSMSA",
      "fields": [
        {
          "name": "FACTORY"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.SSMSW",
      "fields": [
        {
          "name": "FACTORY"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.SSW",
      "fields": [
        {
          "name": "FACTORY"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.StripedBuffer",
      "fields": [
        {
          "name": "tableBusy"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.UnboundedLocalCache",
      "fields": [
        {
          "name": "refreshes"
        }
      ]
    },
    {
      "type": "com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect"
    },
    {
      "type": "com.github.therapi.runtimejavadoc.CommentFormatter"
    },
    {
      "type": "com.google.common.base.Optional"
    },
    {
      "type": "com.google.gson.ExclusionStrategy"
    },
    {
      "type": "com.google.gson.FieldNamingPolicy"
    },
    {
      "type": "com.google.gson.FieldNamingStrategy"
    },
    {
      "type": "com.google.gson.FormattingStyle"
    },
    {
      "type": "com.google.gson.Gson",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.GsonBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.JsonElement"
    },
    {
      "type": "com.google.gson.JsonIOException"
    },
    {
      "type": "com.google.gson.JsonSyntaxException"
    },
    {
      "type": "com.google.gson.LongSerializationPolicy"
    },
    {
      "type": "com.google.gson.ReflectionAccessFilter"
    },
    {
      "type": "com.google.gson.Strictness"
    },
    {
      "type": "com.google.gson.ToNumberStrategy"
    },
    {
      "type": "com.google.gson.TypeAdapter"
    },
    {
      "type": "com.google.gson.TypeAdapterFactory"
    },
    {
      "type": "com.google.gson.internal.Excluder"
    },
    {
      "type": "com.google.gson.reflect.TypeToken"
    },
    {
      "type": "com.google.gson.stream.JsonReader"
    },
    {
      "type": "com.google.gson.stream.JsonWriter"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.jayway.jsonpath.DocumentContext"
    },
    {
      "type": "com.jmal.clouddisk.JmalCloudApplication",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.acpect.LogOperatingAspect",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.impl.LogService"
          ]
        },
        {
          "name": "interceptor",
          "parameterTypes": [
            "org.aspectj.lang.ProceedingJoinPoint"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.acpect.PermissionAspect",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "before",
          "parameterTypes": [
            "org.aspectj.lang.ProceedingJoinPoint"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.annotation.AnnoManageUtil",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.annotation.LogOperatingFun"
    },
    {
      "type": "com.jmal.clouddisk.annotation.Permission"
    },
    {
      "type": "com.jmal.clouddisk.config.EncryptionConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "textEncryptor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.EncryptionConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.EncryptionKeyProvider"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.EncryptionConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.EncryptionConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.EncryptionKeyProvider",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.ErrorConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.FileProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getDocument",
          "parameterTypes": []
        },
        {
          "name": "getSimText",
          "parameterTypes": []
        },
        {
          "name": "setChunkFileDir",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDocument",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setDocumentDir",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDocumentImgDir",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExactSearch",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setFtpServerPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setIp2regionDbPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setJmalcloudTrashDir",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLuceneIndexDir",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMonitor",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setMonitorIgnoreFilePrefix",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setNgramMaxContentLengthMB",
          "parameterTypes": [
            "java.lang.Double"
          ]
        },
        {
          "name": "setNgramMaxSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setNgramMinSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setOcrLiteONNXModelPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRootDir",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSeparator",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSimText",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setTimeInterval",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setVideoTranscodeCache",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setWebDavPrefix",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.GlobalCorsConfig",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.config.GlobalCorsConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.JacksonConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.JacksonConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.JacksonConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.JacksonConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.MongoClientConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "mongoClient",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.MongoClientConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.MongoClientConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.MongoClientConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.MyTomcatServletWebServerFactoryCustomizer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.Reflective",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.config.TotpConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "codeGenerator",
          "parameterTypes": []
        },
        {
          "name": "codeVerifier",
          "parameterTypes": [
            "dev.samstevens.totp.time.TimeProvider",
            "dev.samstevens.totp.code.CodeGenerator"
          ]
        },
        {
          "name": "qrGenerator",
          "parameterTypes": []
        },
        {
          "name": "secretGenerator",
          "parameterTypes": []
        },
        {
          "name": "timeProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.TotpConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.TotpConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.TotpConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.WebConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "localeChangeInterceptor",
          "parameterTypes": []
        },
        {
          "name": "localeResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.WebConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.interceptor.AuthInterceptor",
            "com.jmal.clouddisk.interceptor.FileInterceptor",
            "com.jmal.clouddisk.interceptor.ShareFileInterceptor",
            "com.jmal.clouddisk.interceptor.DirectFileInterceptor",
            "com.jmal.clouddisk.interceptor.PreFileInterceptor"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.WebConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.WebConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.WebFilter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.config.YamlPropertyLoaderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.ArticlesController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.SettingService",
            "com.jmal.clouddisk.service.impl.CategoryService",
            "com.jmal.clouddisk.service.impl.TagService",
            "com.jmal.clouddisk.service.IMarkdownService",
            "com.jmal.clouddisk.service.impl.LogService",
            "com.jmal.clouddisk.service.IUserService"
          ]
        },
        {
          "name": "article",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "java.lang.String",
            "org.springframework.ui.Model"
          ]
        },
        {
          "name": "index",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "org.springframework.ui.Model"
          ]
        },
        {
          "name": "notFind",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "org.springframework.ui.Model"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.ArticlesController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.FileViewController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.FileViewController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.record.LoginResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "mfaRequired",
          "parameterTypes": []
        },
        {
          "name": "mfaToken",
          "parameterTypes": []
        },
        {
          "name": "token",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.record.MfaSetupResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "mfaEnable",
          "parameterTypes": []
        },
        {
          "name": "qrCodeImageUri",
          "parameterTypes": []
        },
        {
          "name": "secret",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.record.MfaVerifyRequest",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.AuthController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "hasUser",
          "parameterTypes": []
        },
        {
          "name": "login",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "jakarta.servlet.http.HttpServletResponse",
            "com.jmal.clouddisk.model.rbac.ConsumerDTO"
          ]
        },
        {
          "name": "logout",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "jakarta.servlet.http.HttpServletResponse"
          ]
        },
        {
          "name": "verifyTotp",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "jakarta.servlet.http.HttpServletResponse",
            "com.jmal.clouddisk.model.rbac.ConsumerDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.AuthController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.CategoryController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "list",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "tree",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.CategoryController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.CloudSettingController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.SettingService",
            "com.jmal.clouddisk.lucene.TaskProgressService",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.service.impl.CommonUserFileService",
            "com.jmal.clouddisk.service.IAuthService",
            "com.jmal.clouddisk.lucene.RebuildIndexTaskService",
            "com.jmal.clouddisk.media.VideoProcessService",
            "com.jmal.clouddisk.ocr.OcrService"
          ]
        },
        {
          "name": "getDisabledWebp",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "getOcrConfig",
          "parameterTypes": []
        },
        {
          "name": "getPreviewConfig",
          "parameterTypes": []
        },
        {
          "name": "getTaskProgress",
          "parameterTypes": []
        },
        {
          "name": "getTranscodeConfig",
          "parameterTypes": []
        },
        {
          "name": "getTranscodeStatus",
          "parameterTypes": []
        },
        {
          "name": "isSync",
          "parameterTypes": []
        },
        {
          "name": "loadLdapConfig",
          "parameterTypes": []
        },
        {
          "name": "sync",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.CloudSettingController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.DirectLinkController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.DirectLinkService"
          ]
        },
        {
          "name": "createDirectLink",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.DirectLinkController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.FileController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.IFileService",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.impl.UserFileService",
            "com.jmal.clouddisk.oss.web.WebOssService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.IUserService"
          ]
        },
        {
          "name": "addFile",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Boolean",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "checkFileExist",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO"
          ]
        },
        {
          "name": "checkUpload",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO"
          ]
        },
        {
          "name": "coverOfMedia",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "delete",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String[]",
            "java.lang.String",
            "java.lang.Boolean"
          ]
        },
        {
          "name": "favorite",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "isAllowDownload",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "list",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO"
          ]
        },
        {
          "name": "listFiles",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.Boolean"
          ]
        },
        {
          "name": "merge",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO"
          ]
        },
        {
          "name": "previewText",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.Boolean"
          ]
        },
        {
          "name": "previewTextStream",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "searchFile",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO",
            "java.lang.String"
          ]
        },
        {
          "name": "setTag",
          "parameterTypes": [
            "com.jmal.clouddisk.model.EditTagDTO"
          ]
        },
        {
          "name": "thumbnail",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Boolean"
          ]
        },
        {
          "name": "unFavorite",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "uploadPost",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.FileController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.FileVersionController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.IFileVersionService"
          ]
        },
        {
          "name": "listByPath",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.FileVersionController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.HealthCheckController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.LogController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.LogService"
          ]
        },
        {
          "name": "list",
          "parameterTypes": [
            "com.jmal.clouddisk.model.LogOperationDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.LogController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.LuceneSearchController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.lucene.SearchFileService"
          ]
        },
        {
          "name": "recentlySearchHistory",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.MarkDownController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.IMarkdownService",
            "com.jmal.clouddisk.oss.web.WebOssService",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.IUserService"
          ]
        },
        {
          "name": "editMarkdown",
          "parameterTypes": [
            "com.jmal.clouddisk.model.ArticleParamDTO"
          ]
        },
        {
          "name": "editTextByPath",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO"
          ]
        },
        {
          "name": "getMarkDownContent",
          "parameterTypes": [
            "com.jmal.clouddisk.model.ArticleDTO",
            "java.lang.Integer",
            "java.lang.Integer"
          ]
        },
        {
          "name": "uploadMarkdownImage",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadImageDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.MarkDownController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.MenuController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "authorities",
          "parameterTypes": []
        },
        {
          "name": "tree",
          "parameterTypes": [
            "java.lang.String",
            "com.jmal.clouddisk.model.query.QueryMenuDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.MenuController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.MfaController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.TotpService",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.util.MessageUtil"
          ]
        },
        {
          "name": "initiateMfaSetup",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.MfaController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.OcrController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.ocr.OcrService",
            "com.jmal.clouddisk.media.ImageMagickProcessor",
            "com.jmal.clouddisk.service.impl.UserLoginHolder"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.RoleController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "list",
          "parameterTypes": [
            "java.lang.String",
            "com.jmal.clouddisk.model.query.QueryRoleDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.RoleController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.ShareController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.IShareService",
            "com.jmal.clouddisk.service.IFileService",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.interceptor.FileInterceptor",
            "com.jmal.clouddisk.oss.web.WebOssService"
          ]
        },
        {
          "name": "cancelShare",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "generateLink",
          "parameterTypes": [
            "com.jmal.clouddisk.model.ShareDO"
          ]
        },
        {
          "name": "hasSubShare",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "publicThumbnail",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Boolean",
            "jakarta.servlet.http.HttpServletRequest"
          ]
        },
        {
          "name": "shareList",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UploadApiParamDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.ShareController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.TagController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "list",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.TagController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.UserController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "consumerInfo",
          "parameterTypes": []
        },
        {
          "name": "consumerList",
          "parameterTypes": [
            "com.jmal.clouddisk.model.query.QueryUserDTO"
          ]
        },
        {
          "name": "update",
          "parameterTypes": [
            "com.jmal.clouddisk.model.rbac.ConsumerDTO",
            "org.springframework.web.multipart.MultipartFile"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.UserController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.UserSettingController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.SettingService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder"
          ]
        },
        {
          "name": "accessTokenList",
          "parameterTypes": []
        },
        {
          "name": "deleteAccessToken",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "generateAccessToken",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.UserSettingController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.VideoController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.IShareService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.WebsiteSettingController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.SettingService"
          ]
        },
        {
          "name": "getWebsiteRecord",
          "parameterTypes": []
        },
        {
          "name": "getWebsiteSetting",
          "parameterTypes": []
        },
        {
          "name": "update",
          "parameterTypes": [
            "com.jmal.clouddisk.model.WebsiteSettingDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.rest.WebsiteSettingController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.sse.Message",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBody",
          "parameterTypes": []
        },
        {
          "name": "getSpace",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.controller.sse.SseController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "events",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "heartbeat",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.exception.CommonException"
    },
    {
      "type": "com.jmal.clouddisk.exception.CommonExceptionHandler",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "handleAsyncRequestTimeoutException",
          "parameterTypes": []
        },
        {
          "name": "handleNoResourceException",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ftp.FTPServerConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.ftp.MyPropertiesUserManager"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ftp.MyPropertiesUserManager",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.interceptor.AuthInterceptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.repository.IAuthDAO",
            "com.jmal.clouddisk.service.impl.UserServiceImpl",
            "com.jmal.clouddisk.service.impl.RoleService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.interceptor.DirectFileInterceptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.DirectLinkService",
            "com.jmal.clouddisk.interceptor.PreFileInterceptor",
            "com.jmal.clouddisk.service.impl.FileServiceImpl",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.service.impl.RoleService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.interceptor.FileInterceptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.IFileService",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.interceptor.AuthInterceptor",
            "com.jmal.clouddisk.interceptor.ShareFileInterceptor",
            "com.jmal.clouddisk.oss.web.WebOssService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.interceptor.HeaderLocaleChangeInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.interceptor.PreFileInterceptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.IUserService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.interceptor.ShareFileInterceptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.IShareService",
            "com.jmal.clouddisk.interceptor.PreFileInterceptor",
            "com.jmal.clouddisk.service.impl.UserLoginHolder"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.listener.FileListener",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.IFileService",
            "com.jmal.clouddisk.lucene.RebuildIndexTaskService"
          ]
        },
        {
          "name": "init",
          "parameterTypes": []
        },
        {
          "name": "shutdown",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.listener.FileMonitor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.IFileService",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.listener.FileListener"
          ]
        },
        {
          "name": "cleanup",
          "parameterTypes": []
        },
        {
          "name": "onApplicationReady",
          "parameterTypes": [
            "org.springframework.context.event.ContextRefreshedEvent"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.CoverFileService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.media.ImageMagickProcessor",
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.EtagService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.CommonUserService"
          ]
        },
        {
          "name": "cleanup",
          "parameterTypes": []
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.IndexStatus"
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "analyzer",
          "parameterTypes": []
        },
        {
          "name": "destroy",
          "parameterTypes": []
        },
        {
          "name": "indexWriter",
          "parameterTypes": [
            "org.apache.lucene.store.Directory",
            "org.apache.lucene.analysis.Analyzer",
            "org.apache.lucene.analysis.Analyzer"
          ]
        },
        {
          "name": "keywordLowercaseAnalyzer",
          "parameterTypes": []
        },
        {
          "name": "luceneDirectory",
          "parameterTypes": []
        },
        {
          "name": "ngramAnalyzer",
          "parameterTypes": []
        },
        {
          "name": "searcherManager",
          "parameterTypes": [
            "org.apache.lucene.index.IndexWriter"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneConfig$1",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneConfig$2",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneIndexQueueEvent"
    },
    {
      "type": "com.jmal.clouddisk.lucene.LuceneService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "org.apache.lucene.index.IndexWriter",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.lucene.ReadContentService",
            "com.jmal.clouddisk.lucene.PopplerPdfReader",
            "com.jmal.clouddisk.lucene.RebuildIndexTaskService",
            "com.jmal.clouddisk.lucene.SearchFileService",
            "com.jmal.clouddisk.lucene.EtagService"
          ]
        },
        {
          "name": "destroy",
          "parameterTypes": []
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.PopplerPdfReader",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.lucene.CoverFileService",
            "com.jmal.clouddisk.ocr.OcrService",
            "com.jmal.clouddisk.media.ImageMagickProcessor",
            "com.jmal.clouddisk.service.impl.PathService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.ReadContentService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.PathService",
            "com.jmal.clouddisk.lucene.CoverFileService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.RebuildIndexTaskService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.PathService",
            "org.apache.lucene.index.IndexWriter",
            "com.jmal.clouddisk.service.impl.MenuService",
            "com.jmal.clouddisk.service.impl.RoleService",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.impl.CommonUserFileService",
            "com.jmal.clouddisk.service.impl.MessageService",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.ocr.OcrService"
          ]
        },
        {
          "name": "destroy",
          "parameterTypes": []
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.SearchFileService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.lucene.analysis.Analyzer",
            "com.jmal.clouddisk.config.FileProperties",
            "org.apache.lucene.search.SearcherManager",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.impl.TagService",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.CommonUserService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.TaskProgress",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getPath",
          "parameterTypes": []
        },
        {
          "name": "getProgress",
          "parameterTypes": []
        },
        {
          "name": "getTaskId",
          "parameterTypes": []
        },
        {
          "name": "getTaskType",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.TaskProgressService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.PathService",
            "com.jmal.clouddisk.service.impl.MessageService",
            "com.jmal.clouddisk.service.impl.CommonUserService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.lucene.TaskType",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "OCR"
        },
        {
          "name": "TRANSCODE_VIDEO"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.media.ImageMagickProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.media.TranscodeConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBitrate",
          "parameterTypes": []
        },
        {
          "name": "getBitrateCond",
          "parameterTypes": []
        },
        {
          "name": "getEnable",
          "parameterTypes": []
        },
        {
          "name": "getFrameRate",
          "parameterTypes": []
        },
        {
          "name": "getFrameRateCond",
          "parameterTypes": []
        },
        {
          "name": "getHeight",
          "parameterTypes": []
        },
        {
          "name": "getHeightCond",
          "parameterTypes": []
        },
        {
          "name": "getIsReTranscode",
          "parameterTypes": []
        },
        {
          "name": "getMaxThreads",
          "parameterTypes": []
        },
        {
          "name": "getVttThumbnailCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.media.TranscodeStatus"
    },
    {
      "type": "com.jmal.clouddisk.media.VideoInfo"
    },
    {
      "type": "com.jmal.clouddisk.media.VideoInfoDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBitrate",
          "parameterTypes": []
        },
        {
          "name": "getBitrateNum",
          "parameterTypes": []
        },
        {
          "name": "getDuration",
          "parameterTypes": []
        },
        {
          "name": "getDurationNum",
          "parameterTypes": []
        },
        {
          "name": "getFormat",
          "parameterTypes": []
        },
        {
          "name": "getFrameRate",
          "parameterTypes": []
        },
        {
          "name": "getHeight",
          "parameterTypes": []
        },
        {
          "name": "getToBitrate",
          "parameterTypes": []
        },
        {
          "name": "getToFrameRate",
          "parameterTypes": []
        },
        {
          "name": "getToHeight",
          "parameterTypes": []
        },
        {
          "name": "getWidth",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.media.VideoInfoDO_Accessor_yppz13",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.media.VideoInfoDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.media.VideoInfoDO_Instantiator_yppz13",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.media.VideoProcessService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.service.impl.PathService",
            "com.jmal.clouddisk.service.impl.MessageService",
            "com.jmal.clouddisk.lucene.TaskProgressService",
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        },
        {
          "name": "destroy",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ArticleDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getIsAlonePage",
          "parameterTypes": []
        },
        {
          "name": "getIsDraft",
          "parameterTypes": []
        },
        {
          "name": "getIsRelease",
          "parameterTypes": []
        },
        {
          "name": "getMark",
          "parameterTypes": []
        },
        {
          "name": "getPageIndex",
          "parameterTypes": []
        },
        {
          "name": "getPageSize",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "setIsAlonePage",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsDraft",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsRelease",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setMark",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPageIndex",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setPageSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ArticleParamDTO"
    },
    {
      "type": "com.jmal.clouddisk.model.ArticleVO"
    },
    {
      "type": "com.jmal.clouddisk.model.CategoryDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setCategoryIds",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "setContentText",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCover",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setFileId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setFilename",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setHtml",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIsAlonePage",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsDraft",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsRelease",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setSlug",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTagNames",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "setUploadDate",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ArticleVO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAlonePage",
          "parameterTypes": []
        },
        {
          "name": "getEditable",
          "parameterTypes": []
        },
        {
          "name": "getHtml",
          "parameterTypes": []
        },
        {
          "name": "setAlonePage",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setContentText",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setHtml",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.CategoryDO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.CategoryDTO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.DirectLink",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.DirectLink_Accessor_6hcaud",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.DirectLink"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.DirectLink_Instantiator_6hcaud",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.EditTagDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setFileIds",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setRemoveTagIds",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setTagList",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ExifInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAperture",
          "parameterTypes": []
        },
        {
          "name": "getDateTimeOriginal",
          "parameterTypes": []
        },
        {
          "name": "getExposureProgram",
          "parameterTypes": []
        },
        {
          "name": "getExposureTime",
          "parameterTypes": []
        },
        {
          "name": "getFNumber",
          "parameterTypes": []
        },
        {
          "name": "getFlash",
          "parameterTypes": []
        },
        {
          "name": "getFocalLength",
          "parameterTypes": []
        },
        {
          "name": "getIsoEquivalent",
          "parameterTypes": []
        },
        {
          "name": "getLatitude",
          "parameterTypes": []
        },
        {
          "name": "getLongitude",
          "parameterTypes": []
        },
        {
          "name": "getMake",
          "parameterTypes": []
        },
        {
          "name": "getMeteringMode",
          "parameterTypes": []
        },
        {
          "name": "getModel",
          "parameterTypes": []
        },
        {
          "name": "getResolution",
          "parameterTypes": []
        },
        {
          "name": "getSoftware",
          "parameterTypes": []
        },
        {
          "name": "getWhiteBalanceMode",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ExifInfo_Accessor_shyfci",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.ExifInfo"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ExifInfo_Instantiator_shyfci",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.FileBase",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContentType",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getIsFolder",
          "parameterTypes": []
        },
        {
          "name": "getMd5",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getSize",
          "parameterTypes": []
        },
        {
          "name": "getUpdateDate",
          "parameterTypes": []
        },
        {
          "name": "getUploadDate",
          "parameterTypes": []
        },
        {
          "name": "setContentType",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIsFolder",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setMd5",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSize",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "setUpdateDate",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        },
        {
          "name": "setUploadDate",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        },
        {
          "name": "updateTime",
          "parameterTypes": []
        },
        {
          "name": "uploadTime",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.FileDocument",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAgoTime",
          "parameterTypes": []
        },
        {
          "name": "getAlonePage",
          "parameterTypes": []
        },
        {
          "name": "getAvatar",
          "parameterTypes": []
        },
        {
          "name": "getCategoryIds",
          "parameterTypes": []
        },
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getContentText",
          "parameterTypes": []
        },
        {
          "name": "getCover",
          "parameterTypes": []
        },
        {
          "name": "getDecoder",
          "parameterTypes": []
        },
        {
          "name": "getDelete",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getDraft",
          "parameterTypes": []
        },
        {
          "name": "getEtag",
          "parameterTypes": []
        },
        {
          "name": "getEtagUpdateFailedAttempts",
          "parameterTypes": []
        },
        {
          "name": "getExif",
          "parameterTypes": []
        },
        {
          "name": "getExpiresAt",
          "parameterTypes": []
        },
        {
          "name": "getExtractionCode",
          "parameterTypes": []
        },
        {
          "name": "getH",
          "parameterTypes": []
        },
        {
          "name": "getHtml",
          "parameterTypes": []
        },
        {
          "name": "getIsFavorite",
          "parameterTypes": []
        },
        {
          "name": "getIsPrivacy",
          "parameterTypes": []
        },
        {
          "name": "getIsPublic",
          "parameterTypes": []
        },
        {
          "name": "getIsShare",
          "parameterTypes": []
        },
        {
          "name": "getLastEtagUpdateError",
          "parameterTypes": []
        },
        {
          "name": "getLastEtagUpdateRequestAt",
          "parameterTypes": []
        },
        {
          "name": "getM3u8",
          "parameterTypes": []
        },
        {
          "name": "getMediaCover",
          "parameterTypes": []
        },
        {
          "name": "getMountFileId",
          "parameterTypes": []
        },
        {
          "name": "getMove",
          "parameterTypes": []
        },
        {
          "name": "getMusic",
          "parameterTypes": []
        },
        {
          "name": "getNeedsEtagUpdate",
          "parameterTypes": []
        },
        {
          "name": "getOperationPermissionList",
          "parameterTypes": []
        },
        {
          "name": "getOssFolder",
          "parameterTypes": []
        },
        {
          "name": "getOssPlatform",
          "parameterTypes": []
        },
        {
          "name": "getPageSort",
          "parameterTypes": []
        },
        {
          "name": "getPath",
          "parameterTypes": []
        },
        {
          "name": "getRelease",
          "parameterTypes": []
        },
        {
          "name": "getRemark",
          "parameterTypes": []
        },
        {
          "name": "getRootPath",
          "parameterTypes": []
        },
        {
          "name": "getShareBase",
          "parameterTypes": []
        },
        {
          "name": "getShareId",
          "parameterTypes": []
        },
        {
          "name": "getShowCover",
          "parameterTypes": []
        },
        {
          "name": "getShowSize",
          "parameterTypes": []
        },
        {
          "name": "getSlug",
          "parameterTypes": []
        },
        {
          "name": "getSubShare",
          "parameterTypes": []
        },
        {
          "name": "getSuffix",
          "parameterTypes": []
        },
        {
          "name": "getTagIds",
          "parameterTypes": []
        },
        {
          "name": "getTags",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "getVideo",
          "parameterTypes": []
        },
        {
          "name": "getVtt",
          "parameterTypes": []
        },
        {
          "name": "getW",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.FileDocument_Accessor_6p2xaz",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.FileDocument"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.FileDocument_Instantiator_6p2xaz",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.FileIndex"
    },
    {
      "type": "com.jmal.clouddisk.model.FileIntroVO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAgoTime",
          "parameterTypes": []
        },
        {
          "name": "getContentText",
          "parameterTypes": []
        },
        {
          "name": "getCover",
          "parameterTypes": []
        },
        {
          "name": "getEtag",
          "parameterTypes": []
        },
        {
          "name": "getExif",
          "parameterTypes": []
        },
        {
          "name": "getExpiresAt",
          "parameterTypes": []
        },
        {
          "name": "getH",
          "parameterTypes": []
        },
        {
          "name": "getIsFavorite",
          "parameterTypes": []
        },
        {
          "name": "getIsPrivacy",
          "parameterTypes": []
        },
        {
          "name": "getIsShare",
          "parameterTypes": []
        },
        {
          "name": "getM3u8",
          "parameterTypes": []
        },
        {
          "name": "getMediaCover",
          "parameterTypes": []
        },
        {
          "name": "getMountFileId",
          "parameterTypes": []
        },
        {
          "name": "getMusic",
          "parameterTypes": []
        },
        {
          "name": "getOperationPermissionList",
          "parameterTypes": []
        },
        {
          "name": "getOssFolder",
          "parameterTypes": []
        },
        {
          "name": "getOssPlatform",
          "parameterTypes": []
        },
        {
          "name": "getPath",
          "parameterTypes": []
        },
        {
          "name": "getRemark",
          "parameterTypes": []
        },
        {
          "name": "getShareBase",
          "parameterTypes": []
        },
        {
          "name": "getShowCover",
          "parameterTypes": []
        },
        {
          "name": "getShowSize",
          "parameterTypes": []
        },
        {
          "name": "getSubShare",
          "parameterTypes": []
        },
        {
          "name": "getSuffix",
          "parameterTypes": []
        },
        {
          "name": "getTags",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "getVideo",
          "parameterTypes": []
        },
        {
          "name": "getW",
          "parameterTypes": []
        },
        {
          "name": "setAgoTime",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setContentText",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCover",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setEtag",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExif",
          "parameterTypes": [
            "com.jmal.clouddisk.model.ExifInfo"
          ]
        },
        {
          "name": "setExpiresAt",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setH",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIsFavorite",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsPrivacy",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsShare",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setM3u8",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMediaCover",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMountFileId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMusic",
          "parameterTypes": [
            "com.jmal.clouddisk.model.Music"
          ]
        },
        {
          "name": "setOperationPermissionList",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setOssFolder",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setOssPlatform",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRemark",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setShareBase",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setShowCover",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setShowSize",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSubShare",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setSuffix",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTags",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setVideo",
          "parameterTypes": [
            "com.jmal.clouddisk.media.VideoInfoDO"
          ]
        },
        {
          "name": "setW",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.FileIntroVO_Accessor_de8sib",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.FileIntroVO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.FileIntroVO_Instantiator_de8sib",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.GridFSBO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.HeartwingsDO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.LdapConfigDO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.LdapConfigDTO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperation",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBrowser",
          "parameterTypes": []
        },
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getDeviceModel",
          "parameterTypes": []
        },
        {
          "name": "getFileUserId",
          "parameterTypes": []
        },
        {
          "name": "getFilepath",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getIp",
          "parameterTypes": []
        },
        {
          "name": "getIpInfo",
          "parameterTypes": []
        },
        {
          "name": "getMethod",
          "parameterTypes": []
        },
        {
          "name": "getOperatingSystem",
          "parameterTypes": []
        },
        {
          "name": "getOperationFun",
          "parameterTypes": []
        },
        {
          "name": "getOperationModule",
          "parameterTypes": []
        },
        {
          "name": "getRemarks",
          "parameterTypes": []
        },
        {
          "name": "getShowName",
          "parameterTypes": []
        },
        {
          "name": "getStatus",
          "parameterTypes": []
        },
        {
          "name": "getTime",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperation$IpInfo",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getArea",
          "parameterTypes": []
        },
        {
          "name": "getCity",
          "parameterTypes": []
        },
        {
          "name": "getCountry",
          "parameterTypes": []
        },
        {
          "name": "getOperators",
          "parameterTypes": []
        },
        {
          "name": "getProvince",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperation$IpInfo_Accessor_hygbyk",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.LogOperation$IpInfo"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperation$IpInfo_Instantiator_hygbyk",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperation$Type"
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperationDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getPage",
          "parameterTypes": []
        },
        {
          "name": "getPageSize",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        },
        {
          "name": "setPage",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setPageSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setType",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperation_Accessor_61wz37",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.LogOperation"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.LogOperation_Instantiator_61wz37",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.MarkdownBaseFile",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAvatar",
          "parameterTypes": []
        },
        {
          "name": "getCategories",
          "parameterTypes": []
        },
        {
          "name": "getCategoryIds",
          "parameterTypes": []
        },
        {
          "name": "getCover",
          "parameterTypes": []
        },
        {
          "name": "getRelease",
          "parameterTypes": []
        },
        {
          "name": "getSlug",
          "parameterTypes": []
        },
        {
          "name": "getTagIds",
          "parameterTypes": []
        },
        {
          "name": "getTags",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "setAvatar",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCategoryIds",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "setCover",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRelease",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setSlug",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTagIds",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.MarkdownVO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAgoTime",
          "parameterTypes": []
        },
        {
          "name": "getDraft",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "setAgoTime",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.Metadata",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.Metadata_Accessor_qg08th",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.Metadata"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.Music",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.OperationPermission",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "DELETE"
        },
        {
          "name": "DOWNLOAD"
        },
        {
          "name": "PUT"
        },
        {
          "name": "UPLOAD"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.OperationTips",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMsg",
          "parameterTypes": []
        },
        {
          "name": "getOperation",
          "parameterTypes": []
        },
        {
          "name": "getSuccess",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.OperationTips$OperationTipsBuilder"
    },
    {
      "type": "com.jmal.clouddisk.model.Page",
      "methods": [
        {
          "name": "getData",
          "parameterTypes": []
        },
        {
          "name": "getTotalPage",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ShareDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setFileId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIsFolder",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsPrivacy",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setShortId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ShareDO_Accessor_1k4rdz",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.ShareDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ShareDO_Instantiator_1k4rdz",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.ShareVO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContentType",
          "parameterTypes": []
        },
        {
          "name": "getExpireDate",
          "parameterTypes": []
        },
        {
          "name": "getExtractionCode",
          "parameterTypes": []
        },
        {
          "name": "getFileName",
          "parameterTypes": []
        },
        {
          "name": "getIsFolder",
          "parameterTypes": []
        },
        {
          "name": "getIsPrivacy",
          "parameterTypes": []
        },
        {
          "name": "getOperationPermissionList",
          "parameterTypes": []
        },
        {
          "name": "getShareBase",
          "parameterTypes": []
        },
        {
          "name": "getShareId",
          "parameterTypes": []
        },
        {
          "name": "getShortId",
          "parameterTypes": []
        },
        {
          "name": "getSubShare",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.SharerDTO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.Tag",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getColor",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getTagId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.TagDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getColor",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getSlug",
          "parameterTypes": []
        },
        {
          "name": "getSort",
          "parameterTypes": []
        },
        {
          "name": "getTagBackground",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.TagDO_Accessor_7k2ipk",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.TagDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.TagDO_Instantiator_7k2ipk",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.TagDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getArticleNum",
          "parameterTypes": []
        },
        {
          "name": "getColor",
          "parameterTypes": []
        },
        {
          "name": "getFontSize",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getSlug",
          "parameterTypes": []
        },
        {
          "name": "getSort",
          "parameterTypes": []
        },
        {
          "name": "getTagBackground",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "setColor",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSlug",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setTagBackground",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.Tag_Accessor_a072ni",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.Tag"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.Tag_Instantiator_a072ni",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.Trash",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.UploadApiParamDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getChunkNumber",
          "parameterTypes": []
        },
        {
          "name": "getChunkSize",
          "parameterTypes": []
        },
        {
          "name": "getCurrentChunkSize",
          "parameterTypes": []
        },
        {
          "name": "getCurrentDirectory",
          "parameterTypes": []
        },
        {
          "name": "getFile",
          "parameterTypes": []
        },
        {
          "name": "getFilename",
          "parameterTypes": []
        },
        {
          "name": "getIdentifier",
          "parameterTypes": []
        },
        {
          "name": "getIncludeFileContent",
          "parameterTypes": []
        },
        {
          "name": "getIncludeFileName",
          "parameterTypes": []
        },
        {
          "name": "getIncludeTagName",
          "parameterTypes": []
        },
        {
          "name": "getIsFavorite",
          "parameterTypes": []
        },
        {
          "name": "getIsFolder",
          "parameterTypes": []
        },
        {
          "name": "getIsMount",
          "parameterTypes": []
        },
        {
          "name": "getIsTrash",
          "parameterTypes": []
        },
        {
          "name": "getLastModified",
          "parameterTypes": []
        },
        {
          "name": "getOrder",
          "parameterTypes": []
        },
        {
          "name": "getPageIndex",
          "parameterTypes": []
        },
        {
          "name": "getPageSize",
          "parameterTypes": []
        },
        {
          "name": "getQueryFileType",
          "parameterTypes": []
        },
        {
          "name": "getRelativePath",
          "parameterTypes": []
        },
        {
          "name": "getSortableProp",
          "parameterTypes": []
        },
        {
          "name": "getTotalChunks",
          "parameterTypes": []
        },
        {
          "name": "getTotalSize",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "setChunkNumber",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setChunkSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setContentText",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCurrentChunkSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setCurrentDirectory",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setFile",
          "parameterTypes": [
            "org.springframework.web.multipart.MultipartFile"
          ]
        },
        {
          "name": "setFilename",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setFilenames",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setIdentifier",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIncludeFileContent",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIncludeFileName",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIncludeTagName",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsFavorite",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsFolder",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsMount",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIsTrash",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setLastModified",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setOrder",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPageIndex",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setPageSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setQueryFileType",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRelativePath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSortableProp",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTotalChunks",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setTotalSize",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.UploadImageDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getFiles",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "setFiles",
          "parameterTypes": [
            "org.springframework.web.multipart.MultipartFile[]"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.UploadResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getResume",
          "parameterTypes": []
        },
        {
          "name": "isExist",
          "parameterTypes": []
        },
        {
          "name": "isMerge",
          "parameterTypes": []
        },
        {
          "name": "isPass",
          "parameterTypes": []
        },
        {
          "name": "isUpload",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.Urlset",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.Urlset$Url",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.UserAccessTokenDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getLastActiveTime",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.UserAccessTokenDO_Accessor_s9lc46",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UserAccessTokenDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.UserAccessTokenDO_Instantiator_s9lc46",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.UserAccessTokenDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getLastActiveTime",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "setCreateTime",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setLastActiveTime",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.WebsiteSettingDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAlonePages",
          "parameterTypes": []
        },
        {
          "name": "getArchiveBackground",
          "parameterTypes": []
        },
        {
          "name": "getBackgroundDescSite",
          "parameterTypes": []
        },
        {
          "name": "getBackgroundSite",
          "parameterTypes": []
        },
        {
          "name": "getBackgroundTextSite",
          "parameterTypes": []
        },
        {
          "name": "getCategoryBackground",
          "parameterTypes": []
        },
        {
          "name": "getCopyright",
          "parameterTypes": []
        },
        {
          "name": "getFooterHtml",
          "parameterTypes": []
        },
        {
          "name": "getIframe",
          "parameterTypes": []
        },
        {
          "name": "getNetdiskLogo",
          "parameterTypes": []
        },
        {
          "name": "getNetdiskName",
          "parameterTypes": []
        },
        {
          "name": "getNetworkRecordNumber",
          "parameterTypes": []
        },
        {
          "name": "getNetworkRecordNumberStr",
          "parameterTypes": []
        },
        {
          "name": "getOperatingButtons",
          "parameterTypes": []
        },
        {
          "name": "getRecordPermissionNum",
          "parameterTypes": []
        },
        {
          "name": "getSiteIco",
          "parameterTypes": []
        },
        {
          "name": "getSiteLogo",
          "parameterTypes": []
        },
        {
          "name": "getSiteName",
          "parameterTypes": []
        },
        {
          "name": "getSiteUrl",
          "parameterTypes": []
        },
        {
          "name": "getTagBackground",
          "parameterTypes": []
        },
        {
          "name": "setAlonePages",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setBackgroundDescSite",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setBackgroundSite",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setBackgroundTextSite",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSiteName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSiteUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.WebsiteSettingDO_Accessor_ps1rr5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.WebsiteSettingDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.WebsiteSettingDO_Instantiator_ps1rr5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.WebsiteSettingDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAlonePages",
          "parameterTypes": []
        },
        {
          "name": "getArchiveBackground",
          "parameterTypes": []
        },
        {
          "name": "getAvatar",
          "parameterTypes": []
        },
        {
          "name": "getBackgroundDescSite",
          "parameterTypes": []
        },
        {
          "name": "getBackgroundSite",
          "parameterTypes": []
        },
        {
          "name": "getBackgroundTextSite",
          "parameterTypes": []
        },
        {
          "name": "getCategoryBackground",
          "parameterTypes": []
        },
        {
          "name": "getCopyright",
          "parameterTypes": []
        },
        {
          "name": "getExactSearch",
          "parameterTypes": []
        },
        {
          "name": "getFooterHtml",
          "parameterTypes": []
        },
        {
          "name": "getIframe",
          "parameterTypes": []
        },
        {
          "name": "getNetdiskLogo",
          "parameterTypes": []
        },
        {
          "name": "getNetdiskName",
          "parameterTypes": []
        },
        {
          "name": "getNetworkRecordNumber",
          "parameterTypes": []
        },
        {
          "name": "getNetworkRecordNumberStr",
          "parameterTypes": []
        },
        {
          "name": "getOperatingButtonList",
          "parameterTypes": []
        },
        {
          "name": "getOperatingButtons",
          "parameterTypes": []
        },
        {
          "name": "getRecordPermissionNum",
          "parameterTypes": []
        },
        {
          "name": "getSiteIco",
          "parameterTypes": []
        },
        {
          "name": "getSiteLogo",
          "parameterTypes": []
        },
        {
          "name": "getSiteName",
          "parameterTypes": []
        },
        {
          "name": "getSiteUrl",
          "parameterTypes": []
        },
        {
          "name": "getTagBackground",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "isShowAlonePage",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "isShowBeian",
          "parameterTypes": []
        },
        {
          "name": "setAlonePages",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setArchiveBackground",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setBackgroundDescSite",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setBackgroundSite",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setBackgroundTextSite",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCategoryBackground",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCopyright",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setFooterHtml",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIframe",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setNetdiskLogo",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setNetdiskName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setNetworkRecordNumber",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setNetworkRecordNumberStr",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setOperatingButtons",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRecordPermissionNum",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSiteIco",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSiteLogo",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSiteName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSiteUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTagBackground",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.WebsiteSettingDTO$OperatingButton",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.WebsiteSettingDTO_Accessor_31hvjg",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.WebsiteSettingDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.WebsiteSettingDTO_Instantiator_31hvjg",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.query.QueryBaseDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getPage",
          "parameterTypes": []
        },
        {
          "name": "getPageSize",
          "parameterTypes": []
        },
        {
          "name": "getSortOrder",
          "parameterTypes": []
        },
        {
          "name": "getSortProp",
          "parameterTypes": []
        },
        {
          "name": "setPage",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setPageSize",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setSortOrder",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSortProp",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.query.QueryMenuDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.query.QueryRoleDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCode",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getRemarks",
          "parameterTypes": []
        },
        {
          "name": "setCode",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRemarks",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.query.QueryUserDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getShowName",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "setShowName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.query.SearchDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCurrentDirectory",
          "parameterTypes": []
        },
        {
          "name": "getExactSearch",
          "parameterTypes": []
        },
        {
          "name": "getFolder",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getIncludeFileContent",
          "parameterTypes": []
        },
        {
          "name": "getIncludeFileName",
          "parameterTypes": []
        },
        {
          "name": "getIncludeTagName",
          "parameterTypes": []
        },
        {
          "name": "getIsFavorite",
          "parameterTypes": []
        },
        {
          "name": "getIsFolder",
          "parameterTypes": []
        },
        {
          "name": "getIsMount",
          "parameterTypes": []
        },
        {
          "name": "getKeyword",
          "parameterTypes": []
        },
        {
          "name": "getModifyEnd",
          "parameterTypes": []
        },
        {
          "name": "getModifyStart",
          "parameterTypes": []
        },
        {
          "name": "getMountUserId",
          "parameterTypes": []
        },
        {
          "name": "getSearchMount",
          "parameterTypes": []
        },
        {
          "name": "getSearchOverall",
          "parameterTypes": []
        },
        {
          "name": "getSearchUserId",
          "parameterTypes": []
        },
        {
          "name": "getSizeMax",
          "parameterTypes": []
        },
        {
          "name": "getSizeMin",
          "parameterTypes": []
        },
        {
          "name": "getTagId",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "isSearchMountSubFolder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.query.SearchDTO$SearchDTOBuilder"
    },
    {
      "type": "com.jmal.clouddisk.model.query.SearchOptionHistoryDO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.query.SearchOptionHistoryDO_Accessor_vy6sfh",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.query.SearchOptionHistoryDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.query.SearchOptionHistoryDO_Instantiator_vy6sfh",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.ConsumerBase",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getPassword",
          "parameterTypes": []
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.ConsumerDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAvatar",
          "parameterTypes": []
        },
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getIntroduction",
          "parameterTypes": []
        },
        {
          "name": "getQuota",
          "parameterTypes": []
        },
        {
          "name": "getRoles",
          "parameterTypes": []
        },
        {
          "name": "getShowName",
          "parameterTypes": []
        },
        {
          "name": "getSlogan",
          "parameterTypes": []
        },
        {
          "name": "getTakeUpSpace",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "getWebpDisabled",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.ConsumerDO_Accessor_nmfze9",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.rbac.ConsumerDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.ConsumerDO_Instantiator_nmfze9",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.ConsumerDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAvatar",
          "parameterTypes": []
        },
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getExactSearch",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getIframe",
          "parameterTypes": []
        },
        {
          "name": "getIntroduction",
          "parameterTypes": []
        },
        {
          "name": "getMfaCode",
          "parameterTypes": []
        },
        {
          "name": "getMfaToken",
          "parameterTypes": []
        },
        {
          "name": "getNetdiskLogo",
          "parameterTypes": []
        },
        {
          "name": "getNetdiskName",
          "parameterTypes": []
        },
        {
          "name": "getNewVersion",
          "parameterTypes": []
        },
        {
          "name": "getQuota",
          "parameterTypes": []
        },
        {
          "name": "getRememberMe",
          "parameterTypes": []
        },
        {
          "name": "getRoleList",
          "parameterTypes": []
        },
        {
          "name": "getRoles",
          "parameterTypes": []
        },
        {
          "name": "getShowName",
          "parameterTypes": []
        },
        {
          "name": "getSlogan",
          "parameterTypes": []
        },
        {
          "name": "getTakeUpSpace",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "getWebpDisabled",
          "parameterTypes": []
        },
        {
          "name": "setAvatar",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCreateTime",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIntroduction",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMfaCode",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMfaToken",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setQuota",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setRememberMe",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setRoles",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setShowName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSlogan",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTakeUpSpace",
          "parameterTypes": [
            "java.lang.Long"
          ]
        },
        {
          "name": "setUsername",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setWebpDisabled",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.MenuDO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAuthority",
          "parameterTypes": []
        },
        {
          "name": "getComponent",
          "parameterTypes": []
        },
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getHide",
          "parameterTypes": []
        },
        {
          "name": "getIcon",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getMenuType",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getParentId",
          "parameterTypes": []
        },
        {
          "name": "getPath",
          "parameterTypes": []
        },
        {
          "name": "getSortNumber",
          "parameterTypes": []
        },
        {
          "name": "getUpdateTime",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.MenuDO_Accessor_pepa25",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.rbac.MenuDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.MenuDO_Instantiator_pepa25",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.MenuDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAuthority",
          "parameterTypes": []
        },
        {
          "name": "getChecked",
          "parameterTypes": []
        },
        {
          "name": "getChildren",
          "parameterTypes": []
        },
        {
          "name": "getComponent",
          "parameterTypes": []
        },
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getHide",
          "parameterTypes": []
        },
        {
          "name": "getIcon",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getMenuType",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getParentId",
          "parameterTypes": []
        },
        {
          "name": "getPath",
          "parameterTypes": []
        },
        {
          "name": "getSortNumber",
          "parameterTypes": []
        },
        {
          "name": "getUpdateTime",
          "parameterTypes": []
        },
        {
          "name": "setAuthority",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setComponent",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setCreateTime",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        },
        {
          "name": "setHide",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setIcon",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setMenuType",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setParentId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSortNumber",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setUpdateTime",
          "parameterTypes": [
            "java.time.LocalDateTime"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.RoleDO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.RoleDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCode",
          "parameterTypes": []
        },
        {
          "name": "getCreateTime",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getMenuIds",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getRemarks",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.RoleDTO_Accessor_8iloqx",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.model.rbac.RoleDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.RoleDTO_Instantiator_8iloqx",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.model.rbac.UserLoginContext"
    },
    {
      "type": "com.jmal.clouddisk.ocr.CommonOcrService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ocr.IOcrService"
    },
    {
      "type": "com.jmal.clouddisk.ocr.OcrConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getEnable",
          "parameterTypes": []
        },
        {
          "name": "getMaxTasks",
          "parameterTypes": []
        },
        {
          "name": "getOcrEngine",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ocr.OcrLiteOnnxService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ocr.OcrService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Map",
            "com.jmal.clouddisk.media.ImageMagickProcessor",
            "com.jmal.clouddisk.lucene.TaskProgressService",
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ocr.TesseractOcrConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDataPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ocr.TesseractOcrConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.ocr.TesseractService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.ocr.TesseractOcrConfig",
            "com.jmal.clouddisk.media.ImageMagickProcessor"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.OfficeConfigService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.OfficeController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.office.callbacks.CallbackHandler",
            "com.jmal.clouddisk.service.impl.ShareServiceImpl",
            "com.jmal.clouddisk.office.OfficeConfigService"
          ]
        },
        {
          "name": "getOfficeConfig",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.OfficeController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.OfficeHistory",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.office.OfficeHistory$User",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.office.callbacks.Callback",
      "methods": [
        {
          "name": "selfRegistration",
          "parameterTypes": [
            "com.jmal.clouddisk.office.callbacks.CallbackHandler"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.callbacks.CallbackHandler",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.callbacks.implementations.EditCallback",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.callbacks.implementations.EditNothingCallback",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.callbacks.implementations.ForceSaveCallback",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.callbacks.implementations.SaveCallback",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.impl.MessageService",
            "com.jmal.clouddisk.service.impl.LogService",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.service.IFileVersionService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.model.OfficeConfigDO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.office.model.OfficeConfigDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCallbackServer",
          "parameterTypes": []
        },
        {
          "name": "getDocumentServer",
          "parameterTypes": []
        },
        {
          "name": "getFormat",
          "parameterTypes": []
        },
        {
          "name": "getSecret",
          "parameterTypes": []
        },
        {
          "name": "isTokenEnabled",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.office.model.Track"
    },
    {
      "type": "com.jmal.clouddisk.oss.AbstractOssObject"
    },
    {
      "type": "com.jmal.clouddisk.oss.BucketInfo"
    },
    {
      "type": "com.jmal.clouddisk.oss.FileInfo"
    },
    {
      "type": "com.jmal.clouddisk.oss.IOssService"
    },
    {
      "type": "com.jmal.clouddisk.oss.OssConfigService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.UserServiceImpl",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.listener.FileMonitor",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "org.springframework.security.crypto.encrypt.TextEncryptor"
          ]
        },
        {
          "name": "destroy",
          "parameterTypes": []
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.PlatformOSS"
    },
    {
      "type": "com.jmal.clouddisk.oss.web.OssController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.oss.OssConfigService",
            "com.jmal.clouddisk.oss.web.WebOssService"
          ]
        },
        {
          "name": "getPlatformList",
          "parameterTypes": []
        },
        {
          "name": "ossConfigList",
          "parameterTypes": []
        },
        {
          "name": "putOssConfig",
          "parameterTypes": [
            "com.jmal.clouddisk.oss.web.model.OssConfigDTO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.web.OssController$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.web.WebOssCommonService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.web.WebOssCopyFileService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.web.WebOssService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.IFileVersionService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.web.model.OssConfigDO",
      "allDeclaredFields": true
    },
    {
      "type": "com.jmal.clouddisk.oss.web.model.OssConfigDO_Accessor_j746ul",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.oss.web.model.OssConfigDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.web.model.OssConfigDO_Instantiator_j746ul",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.oss.web.model.OssConfigDTO",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAccessKey",
          "parameterTypes": []
        },
        {
          "name": "getBucket",
          "parameterTypes": []
        },
        {
          "name": "getEndpoint",
          "parameterTypes": []
        },
        {
          "name": "getFolderName",
          "parameterTypes": []
        },
        {
          "name": "getId",
          "parameterTypes": []
        },
        {
          "name": "getPlatform",
          "parameterTypes": []
        },
        {
          "name": "getRegion",
          "parameterTypes": []
        },
        {
          "name": "getSecretKey",
          "parameterTypes": []
        },
        {
          "name": "getUserId",
          "parameterTypes": []
        },
        {
          "name": "getUsername",
          "parameterTypes": []
        },
        {
          "name": "setAccessKey",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setBucket",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setEndpoint",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setFolderName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPlatform",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setSecretKey",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUserId",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.repository.DataSource"
    },
    {
      "type": "com.jmal.clouddisk.repository.IAuthDAO"
    },
    {
      "type": "com.jmal.clouddisk.repository.impl.AuthDAOImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "accessTokenList",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "deleteAccessToken",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "generateAccessToken",
          "parameterTypes": [
            "com.jmal.clouddisk.model.UserAccessTokenDO"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.repository.impl.AuthDAOImpl$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.IAuthService"
    },
    {
      "type": "com.jmal.clouddisk.service.IFileService"
    },
    {
      "type": "com.jmal.clouddisk.service.IFileVersionService"
    },
    {
      "type": "com.jmal.clouddisk.service.IMarkdownService"
    },
    {
      "type": "com.jmal.clouddisk.service.IShareService"
    },
    {
      "type": "com.jmal.clouddisk.service.IUserService"
    },
    {
      "type": "com.jmal.clouddisk.service.impl.AuthServiceImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.impl.UserServiceImpl",
            "com.jmal.clouddisk.util.MessageUtil",
            "com.jmal.clouddisk.service.impl.TotpService",
            "org.springframework.security.crypto.encrypt.TextEncryptor"
          ]
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.CategoryService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.CommonFileService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.impl.FileService",
            "com.jmal.clouddisk.service.impl.CommonUserFileService",
            "com.jmal.clouddisk.service.impl.MessageService",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.media.VideoProcessService",
            "com.jmal.clouddisk.service.IFileVersionService",
            "org.springframework.context.ApplicationEventPublisher",
            "com.jmal.clouddisk.lucene.EtagService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.CommonUserFileService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.PathService",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.MessageService",
            "org.springframework.context.ApplicationEventPublisher",
            "com.jmal.clouddisk.lucene.EtagService",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.media.VideoProcessService",
            "com.jmal.clouddisk.media.ImageMagickProcessor"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.CommonUserService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.DirectLinkService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.FileService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.FileServiceImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.lucene.LuceneService",
            "com.jmal.clouddisk.lucene.EtagService",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.impl.CommonUserFileService",
            "com.jmal.clouddisk.service.impl.MessageService",
            "com.jmal.clouddisk.service.impl.MultipartUpload",
            "com.jmal.clouddisk.oss.web.WebOssService",
            "com.jmal.clouddisk.oss.web.WebOssCopyFileService",
            "com.jmal.clouddisk.service.impl.PathService",
            "com.jmal.clouddisk.media.VideoProcessService",
            "com.jmal.clouddisk.service.impl.TagService",
            "com.jmal.clouddisk.lucene.SearchFileService",
            "com.jmal.clouddisk.service.impl.LogService",
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.FileVersionServiceImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.CommonUserFileService",
            "com.jmal.clouddisk.service.impl.FileService",
            "org.springframework.data.mongodb.gridfs.GridFsTemplate",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "org.springframework.context.ApplicationEventPublisher"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.LogService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.config.FileProperties"
          ]
        },
        {
          "name": "initIpDbSearcher",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.MarkdownServiceImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.CategoryService",
            "com.jmal.clouddisk.service.impl.SettingService",
            "com.jmal.clouddisk.service.impl.TagService",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.impl.CommonUserFileService",
            "com.jmal.clouddisk.service.IFileService",
            "com.jmal.clouddisk.service.IFileVersionService",
            "com.jmal.clouddisk.lucene.LuceneService",
            "com.jmal.clouddisk.service.impl.LogService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.MenuService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.util.MessageUtil"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.MessageService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.controller.sse.SseController",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.MultipartUpload",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "com.jmal.clouddisk.service.impl.CommonUserFileService",
            "com.jmal.clouddisk.oss.web.WebOssService",
            "com.jmal.clouddisk.service.impl.LogService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.PathService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.RoleService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.service.impl.MenuService",
            "com.jmal.clouddisk.util.MessageUtil"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.SettingService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.repository.IAuthDAO",
            "com.jmal.clouddisk.service.impl.MenuService",
            "com.jmal.clouddisk.service.impl.UserServiceImpl",
            "com.jmal.clouddisk.service.impl.RoleService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.lucene.EtagService",
            "com.jmal.clouddisk.service.impl.MessageService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.ShareServiceImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.IFileService",
            "com.jmal.clouddisk.service.impl.CommonFileService",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.oss.web.WebOssService",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.lucene.LuceneService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.TagService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.TotpService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "dev.samstevens.totp.secret.SecretGenerator",
            "dev.samstevens.totp.qr.QrGenerator",
            "dev.samstevens.totp.code.CodeVerifier",
            "org.springframework.security.crypto.encrypt.TextEncryptor",
            "com.jmal.clouddisk.service.IUserService",
            "com.jmal.clouddisk.service.impl.SettingService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.UserFileService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.CommonUserFileService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.UserLoginHolder",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.service.impl.UserServiceImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.MongoTemplate",
            "com.jmal.clouddisk.service.impl.CommonUserService",
            "com.jmal.clouddisk.service.impl.UserFileService",
            "com.jmal.clouddisk.service.impl.MessageService",
            "com.jmal.clouddisk.service.IShareService",
            "com.jmal.clouddisk.service.impl.MenuService",
            "com.jmal.clouddisk.service.impl.RoleService",
            "com.jmal.clouddisk.repository.IAuthDAO",
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.UserLoginHolder",
            "com.jmal.clouddisk.listener.FileMonitor",
            "org.springframework.security.crypto.encrypt.TextEncryptor"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.swagger.OpenApiConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "jmalCloudOpenApi",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.swagger.OpenApiConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.swagger.OpenApiConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.swagger.OpenApiConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.util.CaffeineUtil",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "initCache",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.util.HybridThrottleExecutor"
    },
    {
      "type": "com.jmal.clouddisk.util.MessageUtil",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.MessageSource"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.util.ResponseResult",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCode",
          "parameterTypes": []
        },
        {
          "name": "getCount",
          "parameterTypes": []
        },
        {
          "name": "getData",
          "parameterTypes": []
        },
        {
          "name": "getMessage",
          "parameterTypes": []
        },
        {
          "name": "getProps",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.BasicAuthenticator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.MyRealm",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.service.impl.UserServiceImpl",
            "com.jmal.clouddisk.service.impl.RoleService",
            "com.jmal.clouddisk.config.FileProperties"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.MyTomcatContextCustomizer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.webdav.WebdavAuthenticator",
            "com.jmal.clouddisk.webdav.MyRealm"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.MyWebdavServlet",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.IFileService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.WebdavAuthenticator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.service.impl.LogService"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.WebdavConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "dispatcherServletPath",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServletRegistration",
          "parameterTypes": [
            "org.springframework.web.servlet.DispatcherServlet",
            "jakarta.servlet.MultipartConfigElement"
          ]
        },
        {
          "name": "webServerFactoryCustomizer",
          "parameterTypes": [
            "com.jmal.clouddisk.webdav.MyTomcatContextCustomizer"
          ]
        },
        {
          "name": "webdavServlet",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.WebdavConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.jmal.clouddisk.config.FileProperties",
            "com.jmal.clouddisk.webdav.MyWebdavServlet"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.WebdavConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.WebdavConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "com.jmal.clouddisk.webdav.WebdavServlet",
      "allDeclaredFields": true
    },
    {
      "type": "com.mongodb.ClientBulkWriteException"
    },
    {
      "type": "com.mongodb.ClientSessionOptions"
    },
    {
      "type": "com.mongodb.ConnectionString"
    },
    {
      "type": "com.mongodb.DBRef"
    },
    {
      "type": "com.mongodb.MongoClientSettings"
    },
    {
      "type": "com.mongodb.MongoClientSettings$Builder"
    },
    {
      "type": "com.mongodb.MongoDriverInformation"
    },
    {
      "type": "com.mongodb.MongoException"
    },
    {
      "type": "com.mongodb.ReadConcern"
    },
    {
      "type": "com.mongodb.ReadPreference"
    },
    {
      "type": "com.mongodb.WriteConcern",
      "allPublicFields": true
    },
    {
      "type": "com.mongodb.annotations.Immutable"
    },
    {
      "type": "com.mongodb.client.ChangeStreamIterable"
    },
    {
      "type": "com.mongodb.client.ClientSession"
    },
    {
      "type": "com.mongodb.client.DistinctIterable"
    },
    {
      "type": "com.mongodb.client.FindIterable"
    },
    {
      "type": "com.mongodb.client.ListDatabasesIterable"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.client.MongoCluster"
    },
    {
      "type": "com.mongodb.client.MongoCollection"
    },
    {
      "type": "com.mongodb.client.MongoDatabase"
    },
    {
      "type": "com.mongodb.client.MongoIterable"
    },
    {
      "type": "com.mongodb.client.gridfs.GridFSBucket"
    },
    {
      "type": "com.mongodb.client.gridfs.GridFSFindIterable"
    },
    {
      "type": "com.mongodb.client.gridfs.model.GridFSFile"
    },
    {
      "type": "com.mongodb.client.gridfs.model.GridFSUploadOptions"
    },
    {
      "type": "com.mongodb.client.internal.MongoClientImpl",
      "allDeclaredFields": true
    },
    {
      "type": "com.mongodb.client.internal.OperationExecutor"
    },
    {
      "type": "com.mongodb.client.model.Collation"
    },
    {
      "type": "com.mongodb.client.model.CountOptions"
    },
    {
      "type": "com.mongodb.client.model.CreateCollectionOptions"
    },
    {
      "type": "com.mongodb.client.model.CreateViewOptions"
    },
    {
      "type": "com.mongodb.client.model.DeleteOptions"
    },
    {
      "type": "com.mongodb.client.model.EstimatedDocumentCountOptions"
    },
    {
      "type": "com.mongodb.client.model.ReplaceOptions"
    },
    {
      "type": "com.mongodb.client.model.UpdateOptions"
    },
    {
      "type": "com.mongodb.client.model.ValidationAction"
    },
    {
      "type": "com.mongodb.client.model.ValidationLevel"
    },
    {
      "type": "com.mongodb.client.model.bulk.ClientBulkWriteOptions"
    },
    {
      "type": "com.mongodb.client.model.bulk.ClientBulkWriteResult"
    },
    {
      "type": "com.mongodb.client.result.DeleteResult"
    },
    {
      "type": "com.mongodb.client.result.UpdateResult"
    },
    {
      "type": "com.mongodb.connection.ClusterDescription"
    },
    {
      "type": "com.mongodb.internal.TimeoutSettings"
    },
    {
      "type": "com.mongodb.internal.connection.Cluster"
    },
    {
      "type": "com.mongodb.internal.connection.StreamFactory"
    },
    {
      "type": "com.mongodb.internal.connection.StreamFactoryFactory"
    },
    {
      "type": "com.mongodb.internal.session.ServerSessionPool"
    },
    {
      "type": "com.mongodb.lang.Nullable"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.nimbusds.jose.jwk.source.JWKSource"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.querydsl.core.types.Predicate"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rometools.rome.feed.WireFeed"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.AESKeyGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.CallbackProxy"
    },
    {
      "type": "com.sun.jna.NativeLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jndi.ldap.LdapCtxFactory"
    },
    {
      "type": "com.sun.management.HotSpotDiagnosticMXBean",
      "methods": [
        {
          "name": "getVMOption",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.VMOption",
      "methods": [
        {
          "name": "getValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "dev.samstevens.totp.code.CodeGenerator"
    },
    {
      "type": "dev.samstevens.totp.code.CodeVerifier"
    },
    {
      "type": "dev.samstevens.totp.code.DefaultCodeGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "dev.samstevens.totp.code.DefaultCodeVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "dev.samstevens.totp.exceptions.CodeGenerationException"
    },
    {
      "type": "dev.samstevens.totp.exceptions.QrGenerationException"
    },
    {
      "type": "dev.samstevens.totp.exceptions.TimeProviderException"
    },
    {
      "type": "dev.samstevens.totp.qr.QrData"
    },
    {
      "type": "dev.samstevens.totp.qr.QrGenerator"
    },
    {
      "type": "dev.samstevens.totp.qr.ZxingPngQrGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "dev.samstevens.totp.secret.DefaultSecretGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "dev.samstevens.totp.secret.SecretGenerator"
    },
    {
      "type": "dev.samstevens.totp.time.SystemTimeProvider",
      "allDeclaredFields": true
    },
    {
      "type": "dev.samstevens.totp.time.TimeProvider"
    },
    {
      "type": "double"
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "io.methvin.watcher.DirectoryChangeEvent"
    },
    {
      "type": "io.methvin.watcher.DirectoryChangeListener"
    },
    {
      "type": "io.methvin.watchservice.jna.CFArrayRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.methvin.watchservice.jna.CFIndex",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.methvin.watchservice.jna.CFRunLoopRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.methvin.watchservice.jna.CFStringRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.methvin.watchservice.jna.CarbonAPI$FSEventStreamCallback",
      "methods": [
        {
          "name": "invoke",
          "parameterTypes": [
            "io.methvin.watchservice.jna.FSEventStreamRef",
            "com.sun.jna.Pointer",
            "com.sun.jna.NativeLong",
            "com.sun.jna.Pointer",
            "com.sun.jna.Pointer",
            "com.sun.jna.Pointer"
          ]
        }
      ]
    },
    {
      "type": "io.methvin.watchservice.jna.FSEventStreamRef",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micrometer.context.ContextSnapshot"
    },
    {
      "type": "io.minio.BucketExistsArgs",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.minio.messages.LocationConstraint",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Single"
    },
    {
      "type": "io.reactivex.rxjava3.core.SingleEmitter"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.swagger.v3.core.converter.AnnotatedType"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverterContext"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverters",
      "fields": [
        {
          "name": "converters"
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.filter.OpenAPISpecFilter"
    },
    {
      "type": "io.swagger.v3.core.filter.SpecFilter",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.ApiResponsesSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.jackson.PathsSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.ComponentsMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.DiscriminatorMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.ExtensionsMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.InfoMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.LicenseMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.MediaTypeMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.OpenAPIMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.OperationMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.jackson.mixin.SchemaMixin",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.util.ObjectMapperFactory",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.annotations.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Hidden"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPI31"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPIDefinition"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Operation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameters"
    },
    {
      "type": "io.swagger.v3.oas.annotations.StringToClassMapItem"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Webhook"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Webhooks"
    },
    {
      "type": "io.swagger.v3.oas.annotations.callbacks.Callbacks"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.Extension"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.ExtensionProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.headers.Header"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.Link"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.LinkParameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ArraySchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentRequired"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentSchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DiscriminatorMapping"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Encoding"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ExampleObject"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.SchemaProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlow"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlows"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthScope"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityRequirements"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityScheme"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.Server"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.ServerVariable"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tag"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tags"
    },
    {
      "type": "io.swagger.v3.oas.models.Components",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCallbacks",
          "parameterTypes": []
        },
        {
          "name": "getExamples",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getHeaders",
          "parameterTypes": []
        },
        {
          "name": "getLinks",
          "parameterTypes": []
        },
        {
          "name": "getParameters",
          "parameterTypes": []
        },
        {
          "name": "getPathItems",
          "parameterTypes": []
        },
        {
          "name": "getRequestBodies",
          "parameterTypes": []
        },
        {
          "name": "getResponses",
          "parameterTypes": []
        },
        {
          "name": "getSchemas",
          "parameterTypes": []
        },
        {
          "name": "getSecuritySchemes",
          "parameterTypes": []
        },
        {
          "name": "setCallbacks",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setExamples",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setHeaders",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setLinks",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setParameters",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setPathItems",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setRequestBodies",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setResponses",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setSchemas",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setSecuritySchemes",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.ExternalDocumentation",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.OpenAPI",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getComponents",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getExternalDocs",
          "parameterTypes": []
        },
        {
          "name": "getInfo",
          "parameterTypes": []
        },
        {
          "name": "getJsonSchemaDialect",
          "parameterTypes": []
        },
        {
          "name": "getOpenapi",
          "parameterTypes": []
        },
        {
          "name": "getPaths",
          "parameterTypes": []
        },
        {
          "name": "getSecurity",
          "parameterTypes": []
        },
        {
          "name": "getServers",
          "parameterTypes": []
        },
        {
          "name": "getTags",
          "parameterTypes": []
        },
        {
          "name": "getWebhooks",
          "parameterTypes": []
        },
        {
          "name": "setComponents",
          "parameterTypes": [
            "io.swagger.v3.oas.models.Components"
          ]
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setExternalDocs",
          "parameterTypes": [
            "io.swagger.v3.oas.models.ExternalDocumentation"
          ]
        },
        {
          "name": "setInfo",
          "parameterTypes": [
            "io.swagger.v3.oas.models.info.Info"
          ]
        },
        {
          "name": "setJsonSchemaDialect",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setOpenapi",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPaths",
          "parameterTypes": [
            "io.swagger.v3.oas.models.Paths"
          ]
        },
        {
          "name": "setSecurity",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setServers",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setTags",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setWebhooks",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.Operation",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCallbacks",
          "parameterTypes": []
        },
        {
          "name": "getDeprecated",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getExternalDocs",
          "parameterTypes": []
        },
        {
          "name": "getOperationId",
          "parameterTypes": []
        },
        {
          "name": "getParameters",
          "parameterTypes": []
        },
        {
          "name": "getRequestBody",
          "parameterTypes": []
        },
        {
          "name": "getResponses",
          "parameterTypes": []
        },
        {
          "name": "getSecurity",
          "parameterTypes": []
        },
        {
          "name": "getServers",
          "parameterTypes": []
        },
        {
          "name": "getSummary",
          "parameterTypes": []
        },
        {
          "name": "getTags",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.PathItem",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "get$ref",
          "parameterTypes": []
        },
        {
          "name": "getDelete",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getGet",
          "parameterTypes": []
        },
        {
          "name": "getHead",
          "parameterTypes": []
        },
        {
          "name": "getOptions",
          "parameterTypes": []
        },
        {
          "name": "getParameters",
          "parameterTypes": []
        },
        {
          "name": "getPatch",
          "parameterTypes": []
        },
        {
          "name": "getPost",
          "parameterTypes": []
        },
        {
          "name": "getPut",
          "parameterTypes": []
        },
        {
          "name": "getServers",
          "parameterTypes": []
        },
        {
          "name": "getSummary",
          "parameterTypes": []
        },
        {
          "name": "getTrace",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.PathItem$HttpMethod"
    },
    {
      "type": "io.swagger.v3.oas.models.Paths",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.SpecVersion"
    },
    {
      "type": "io.swagger.v3.oas.models.callbacks.Callback",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.examples.Example",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.headers.Header",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "get$ref",
          "parameterTypes": []
        },
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getDeprecated",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExample",
          "parameterTypes": []
        },
        {
          "name": "getExamples",
          "parameterTypes": []
        },
        {
          "name": "getExplode",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getRequired",
          "parameterTypes": []
        },
        {
          "name": "getSchema",
          "parameterTypes": []
        },
        {
          "name": "getStyle",
          "parameterTypes": []
        },
        {
          "name": "set$ref",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setContent",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Content"
          ]
        },
        {
          "name": "setDeprecated",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExample",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setExamples",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setExplode",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setRequired",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setSchema",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setStyle",
          "parameterTypes": [
            "io.swagger.v3.oas.models.headers.Header$StyleEnum"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.headers.Header$StyleEnum",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.info.Contact",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.info.Info",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getContact",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getLicense",
          "parameterTypes": []
        },
        {
          "name": "getSummary",
          "parameterTypes": []
        },
        {
          "name": "getTermsOfService",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        },
        {
          "name": "getVersion",
          "parameterTypes": []
        },
        {
          "name": "setContact",
          "parameterTypes": [
            "io.swagger.v3.oas.models.info.Contact"
          ]
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setLicense",
          "parameterTypes": [
            "io.swagger.v3.oas.models.info.License"
          ]
        },
        {
          "name": "setSummary",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTermsOfService",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTitle",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setVersion",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.info.License",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getIdentifier",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setIdentifier",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.links.Link",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.ArraySchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.BooleanSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.ByteArraySchema",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.ComposedSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.Content",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.DateTimeSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.Discriminator",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.Encoding",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.Encoding$StyleEnum",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.FileSchema",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.media.IntegerSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.MapSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.MediaType",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getEncoding",
          "parameterTypes": []
        },
        {
          "name": "getExample",
          "parameterTypes": []
        },
        {
          "name": "getExamples",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getSchema",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.NumberSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.ObjectSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.Schema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "get$anchor",
          "parameterTypes": []
        },
        {
          "name": "get$comment",
          "parameterTypes": []
        },
        {
          "name": "get$dynamicAnchor",
          "parameterTypes": []
        },
        {
          "name": "get$id",
          "parameterTypes": []
        },
        {
          "name": "get$ref",
          "parameterTypes": []
        },
        {
          "name": "get$schema",
          "parameterTypes": []
        },
        {
          "name": "get$vocabulary",
          "parameterTypes": []
        },
        {
          "name": "getAdditionalItems",
          "parameterTypes": []
        },
        {
          "name": "getAdditionalProperties",
          "parameterTypes": []
        },
        {
          "name": "getAllOf",
          "parameterTypes": []
        },
        {
          "name": "getAnyOf",
          "parameterTypes": []
        },
        {
          "name": "getBooleanSchemaValue",
          "parameterTypes": []
        },
        {
          "name": "getConst",
          "parameterTypes": []
        },
        {
          "name": "getContains",
          "parameterTypes": []
        },
        {
          "name": "getContentEncoding",
          "parameterTypes": []
        },
        {
          "name": "getContentMediaType",
          "parameterTypes": []
        },
        {
          "name": "getContentSchema",
          "parameterTypes": []
        },
        {
          "name": "getDefault",
          "parameterTypes": []
        },
        {
          "name": "getDependentRequired",
          "parameterTypes": []
        },
        {
          "name": "getDependentSchemas",
          "parameterTypes": []
        },
        {
          "name": "getDeprecated",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getDiscriminator",
          "parameterTypes": []
        },
        {
          "name": "getElse",
          "parameterTypes": []
        },
        {
          "name": "getEnum",
          "parameterTypes": []
        },
        {
          "name": "getExample",
          "parameterTypes": []
        },
        {
          "name": "getExampleSetFlag",
          "parameterTypes": []
        },
        {
          "name": "getExamples",
          "parameterTypes": []
        },
        {
          "name": "getExclusiveMaximum",
          "parameterTypes": []
        },
        {
          "name": "getExclusiveMaximumValue",
          "parameterTypes": []
        },
        {
          "name": "getExclusiveMinimum",
          "parameterTypes": []
        },
        {
          "name": "getExclusiveMinimumValue",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getExternalDocs",
          "parameterTypes": []
        },
        {
          "name": "getFormat",
          "parameterTypes": []
        },
        {
          "name": "getIf",
          "parameterTypes": []
        },
        {
          "name": "getItems",
          "parameterTypes": []
        },
        {
          "name": "getJsonSchema",
          "parameterTypes": []
        },
        {
          "name": "getJsonSchemaImpl",
          "parameterTypes": []
        },
        {
          "name": "getMaxContains",
          "parameterTypes": []
        },
        {
          "name": "getMaxItems",
          "parameterTypes": []
        },
        {
          "name": "getMaxLength",
          "parameterTypes": []
        },
        {
          "name": "getMaxProperties",
          "parameterTypes": []
        },
        {
          "name": "getMaximum",
          "parameterTypes": []
        },
        {
          "name": "getMinContains",
          "parameterTypes": []
        },
        {
          "name": "getMinItems",
          "parameterTypes": []
        },
        {
          "name": "getMinLength",
          "parameterTypes": []
        },
        {
          "name": "getMinProperties",
          "parameterTypes": []
        },
        {
          "name": "getMinimum",
          "parameterTypes": []
        },
        {
          "name": "getMultipleOf",
          "parameterTypes": []
        },
        {
          "name": "getNot",
          "parameterTypes": []
        },
        {
          "name": "getNullable",
          "parameterTypes": []
        },
        {
          "name": "getOneOf",
          "parameterTypes": []
        },
        {
          "name": "getPattern",
          "parameterTypes": []
        },
        {
          "name": "getPatternProperties",
          "parameterTypes": []
        },
        {
          "name": "getPrefixItems",
          "parameterTypes": []
        },
        {
          "name": "getProperties",
          "parameterTypes": []
        },
        {
          "name": "getPropertyNames",
          "parameterTypes": []
        },
        {
          "name": "getReadOnly",
          "parameterTypes": []
        },
        {
          "name": "getRequired",
          "parameterTypes": []
        },
        {
          "name": "getThen",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        },
        {
          "name": "getTypes",
          "parameterTypes": []
        },
        {
          "name": "getUnevaluatedItems",
          "parameterTypes": []
        },
        {
          "name": "getUnevaluatedProperties",
          "parameterTypes": []
        },
        {
          "name": "getUniqueItems",
          "parameterTypes": []
        },
        {
          "name": "getWriteOnly",
          "parameterTypes": []
        },
        {
          "name": "getXml",
          "parameterTypes": []
        },
        {
          "name": "set$anchor",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "set$comment",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "set$dynamicAnchor",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "set$id",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "set$ref",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "set$schema",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "set$vocabulary",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setAdditionalItems",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setAdditionalProperties",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setAllOf",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setAnyOf",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setBooleanSchemaValue",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setConst",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setContains",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setContentEncoding",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setContentMediaType",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setContentSchema",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setDefault",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setDependentRequired",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setDependentSchemas",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setDeprecated",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDiscriminator",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Discriminator"
          ]
        },
        {
          "name": "setElse",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setEnum",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setExample",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setExampleSetFlag",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setExamples",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setExclusiveMaximum",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setExclusiveMaximumValue",
          "parameterTypes": [
            "java.math.BigDecimal"
          ]
        },
        {
          "name": "setExclusiveMinimum",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setExclusiveMinimumValue",
          "parameterTypes": [
            "java.math.BigDecimal"
          ]
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setExternalDocs",
          "parameterTypes": [
            "io.swagger.v3.oas.models.ExternalDocumentation"
          ]
        },
        {
          "name": "setFormat",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIf",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setItems",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setJsonSchema",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setJsonSchemaImpl",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setMaxContains",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMaxItems",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMaxLength",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMaxProperties",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMaximum",
          "parameterTypes": [
            "java.math.BigDecimal"
          ]
        },
        {
          "name": "setMinContains",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMinItems",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMinLength",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMinProperties",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setMinimum",
          "parameterTypes": [
            "java.math.BigDecimal"
          ]
        },
        {
          "name": "setMultipleOf",
          "parameterTypes": [
            "java.math.BigDecimal"
          ]
        },
        {
          "name": "setNot",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setNullable",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setOneOf",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPatternProperties",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setPrefixItems",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setProperties",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setPropertyNames",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setReadOnly",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setRequired",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setThen",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setTitle",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setType",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTypes",
          "parameterTypes": [
            "java.util.Set"
          ]
        },
        {
          "name": "setUnevaluatedItems",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setUnevaluatedProperties",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setUniqueItems",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setWriteOnly",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setXml",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.XML"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.Schema$BynaryStringConversion"
    },
    {
      "type": "io.swagger.v3.oas.models.media.Schema$SchemaResolution"
    },
    {
      "type": "io.swagger.v3.oas.models.media.StringSchema",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.media.XML",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.HeaderParameter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getIn",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.Parameter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "get$ref",
          "parameterTypes": []
        },
        {
          "name": "getAllowEmptyValue",
          "parameterTypes": []
        },
        {
          "name": "getAllowReserved",
          "parameterTypes": []
        },
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getDeprecated",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExample",
          "parameterTypes": []
        },
        {
          "name": "getExamples",
          "parameterTypes": []
        },
        {
          "name": "getExplode",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getIn",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getRequired",
          "parameterTypes": []
        },
        {
          "name": "getSchema",
          "parameterTypes": []
        },
        {
          "name": "getStyle",
          "parameterTypes": []
        },
        {
          "name": "set$ref",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setAllowEmptyValue",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setAllowReserved",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setContent",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Content"
          ]
        },
        {
          "name": "setDeprecated",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExample",
          "parameterTypes": [
            "java.lang.Object"
          ]
        },
        {
          "name": "setExamples",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setExplode",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setExtensions",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "setIn",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRequired",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        },
        {
          "name": "setSchema",
          "parameterTypes": [
            "io.swagger.v3.oas.models.media.Schema"
          ]
        },
        {
          "name": "setStyle",
          "parameterTypes": [
            "io.swagger.v3.oas.models.parameters.Parameter$StyleEnum"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.Parameter$StyleEnum",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.RequestBody",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "get$ref",
          "parameterTypes": []
        },
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getRequired",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "get$ref",
          "parameterTypes": []
        },
        {
          "name": "getContent",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getHeaders",
          "parameterTypes": []
        },
        {
          "name": "getLinks",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponses",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.security.OAuthFlow",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.security.OAuthFlows",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.security.Scopes",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityRequirement",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$In",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$Type",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.servers.Server",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        },
        {
          "name": "getExtensions",
          "parameterTypes": []
        },
        {
          "name": "getUrl",
          "parameterTypes": []
        },
        {
          "name": "getVariables",
          "parameterTypes": []
        },
        {
          "name": "setDescription",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.swagger.v3.oas.models.servers.ServerVariable",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.servers.ServerVariables",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.tags.Tag",
      "allDeclaredFields": true
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.jsr.Bootstrap"
    },
    {
      "type": "io.vavr.control.Option"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.faces.context.FacesContext"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.mail.internet.MimeMessage"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.persistence.Persistence"
    },
    {
      "type": "jakarta.persistence.PersistenceContext"
    },
    {
      "type": "jakarta.security.auth.message.config.AuthConfigProvider"
    },
    {
      "type": "jakarta.security.auth.message.config.RegistrationListener"
    },
    {
      "type": "jakarta.servlet.DispatcherType"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.FilterChain"
    },
    {
      "type": "jakarta.servlet.FilterConfig"
    },
    {
      "type": "jakarta.servlet.FilterRegistration$Dynamic"
    },
    {
      "type": "jakarta.servlet.GenericFilter"
    },
    {
      "type": "jakarta.servlet.GenericServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.Registration$Dynamic"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletConfig"
    },
    {
      "type": "jakarta.servlet.ServletContext"
    },
    {
      "type": "jakarta.servlet.ServletException"
    },
    {
      "type": "jakarta.servlet.ServletOutputStream"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRegistration$Dynamic"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.servlet.ServletResponse"
    },
    {
      "type": "jakarta.servlet.http.HttpServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.http.HttpServletRequest"
    },
    {
      "type": "jakarta.servlet.http.HttpServletResponse"
    },
    {
      "type": "jakarta.servlet.jsp.jstl.core.Config"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.validation.ClockProvider"
    },
    {
      "type": "jakarta.validation.Configuration"
    },
    {
      "type": "jakarta.validation.Constraint"
    },
    {
      "type": "jakarta.validation.ConstraintValidator"
    },
    {
      "type": "jakarta.validation.ConstraintValidatorContext"
    },
    {
      "type": "jakarta.validation.ConstraintValidatorFactory"
    },
    {
      "type": "jakarta.validation.ConstraintViolation"
    },
    {
      "type": "jakarta.validation.MessageInterpolator"
    },
    {
      "type": "jakarta.validation.ParameterNameProvider"
    },
    {
      "type": "jakarta.validation.TraversableResolver"
    },
    {
      "type": "jakarta.validation.Valid"
    },
    {
      "type": "jakarta.validation.ValidationProviderResolver"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.ValidatorContext"
    },
    {
      "type": "jakarta.validation.ValidatorFactory"
    },
    {
      "type": "jakarta.validation.bootstrap.GenericBootstrap"
    },
    {
      "type": "jakarta.validation.constraints.Max"
    },
    {
      "type": "jakarta.validation.constraints.Min"
    },
    {
      "type": "jakarta.validation.constraints.NotNull",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jakarta.validation.constraints.Pattern"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.validation.metadata.BeanDescriptor"
    },
    {
      "type": "jakarta.validation.metadata.ConstraintDescriptor"
    },
    {
      "type": "jakarta.websocket.server.ServerContainer"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "jakarta.xml.ws.WebServiceRef"
    },
    {
      "type": "java.awt.image.BufferedImage"
    },
    {
      "type": "java.beans.Introspector"
    },
    {
      "type": "java.beans.PropertyChangeListener"
    },
    {
      "type": "java.beans.Transient"
    },
    {
      "type": "java.io.Closeable",
      "allDeclaredFields": true
    },
    {
      "type": "java.io.DataInput"
    },
    {
      "type": "java.io.DataOutput"
    },
    {
      "type": "java.io.File"
    },
    {
      "type": "java.io.FileInputStream"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.io.InputStream",
      "allDeclaredFields": true
    },
    {
      "type": "java.io.ObjectInputStream"
    },
    {
      "type": "java.io.ObjectOutputStream"
    },
    {
      "type": "java.io.OutputStream"
    },
    {
      "type": "java.io.PrintWriter"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable",
      "allDeclaredFields": true
    },
    {
      "type": "java.io.UnsupportedEncodingException"
    },
    {
      "type": "java.io.Writer"
    },
    {
      "type": "java.lang.AbstractStringBuilder"
    },
    {
      "type": "java.lang.Appendable"
    },
    {
      "type": "java.lang.AutoCloseable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Boolean",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.CharSequence",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Class",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isRecord",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.ClassNotFoundException"
    },
    {
      "type": "java.lang.ClassValue"
    },
    {
      "type": "java.lang.CloneNotSupportedException"
    },
    {
      "type": "java.lang.Cloneable"
    },
    {
      "type": "java.lang.Comparable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Deprecated",
      "methods": [
        {
          "name": "forRemoval",
          "parameterTypes": []
        },
        {
          "name": "since",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Double",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Enum",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Enum$EnumDesc"
    },
    {
      "type": "java.lang.Error"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.FunctionalInterface"
    },
    {
      "type": "java.lang.IllegalAccessException"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.IllegalStateException"
    },
    {
      "type": "java.lang.Integer",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.InterruptedException"
    },
    {
      "type": "java.lang.Iterable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Long",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Package"
    },
    {
      "type": "java.lang.Process"
    },
    {
      "type": "java.lang.ProcessBuilder"
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runnable"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.SafeVarargs"
    },
    {
      "type": "java.lang.String",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "byte"
          ]
        },
        {
          "name": "coder",
          "parameterTypes": []
        },
        {
          "name": "isASCII",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.StringBuffer"
    },
    {
      "type": "java.lang.StringBuilder"
    },
    {
      "type": "java.lang.StringCoding",
      "methods": [
        {
          "name": "hasNegatives",
          "parameterTypes": [
            "byte[]",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Thread"
    },
    {
      "type": "java.lang.Thread$Builder"
    },
    {
      "type": "java.lang.ThreadGroup"
    },
    {
      "type": "java.lang.Throwable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Void",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.WrongThreadException"
    },
    {
      "type": "java.lang.annotation.Annotation"
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.annotation.Target",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.constant.Constable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.constant.ConstantDesc",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.constant.DynamicConstantDesc"
    },
    {
      "type": "java.lang.foreign.MemorySegment"
    },
    {
      "type": "java.lang.invoke.MethodHandle"
    },
    {
      "type": "java.lang.invoke.MethodHandles"
    },
    {
      "type": "java.lang.invoke.MethodHandles$Lookup",
      "fields": [
        {
          "name": "IMPL_LOOKUP"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.Class",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.MethodType"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.management.ManagementFactory",
      "methods": [
        {
          "name": "getPlatformMXBean",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "getRuntimeMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.RuntimeMXBean",
      "methods": [
        {
          "name": "getInputArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.Constructor"
    },
    {
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getParameters",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Field"
    },
    {
      "type": "java.lang.reflect.GenericArrayType",
      "methods": [
        {
          "name": "getGenericComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.Method",
      "methods": [
        {
          "name": "isDefault",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Parameter",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getOwnerType",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.RecordComponent",
      "methods": [
        {
          "name": "getAccessor",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.TypeVariable",
      "methods": [
        {
          "name": "getBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.UndeclaredThrowableException"
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.math.BigDecimal",
      "allDeclaredFields": true
    },
    {
      "type": "java.math.BigInteger",
      "fields": [
        {
          "name": "mag"
        }
      ]
    },
    {
      "type": "java.net.HttpURLConnection"
    },
    {
      "type": "java.net.InetAddress",
      "allDeclaredFields": true
    },
    {
      "type": "java.net.InetAddress$Addresses"
    },
    {
      "type": "java.net.InetAddress$CachedLocalHost"
    },
    {
      "type": "java.net.InetAddress$CachedLookup"
    },
    {
      "type": "java.net.InetAddress$HostsFileResolver"
    },
    {
      "type": "java.net.InetAddress$InetAddressHolder"
    },
    {
      "type": "java.net.InetAddress$NameServiceAddresses"
    },
    {
      "type": "java.net.InetAddress$PlatformResolver"
    },
    {
      "type": "java.net.InetAddress$ValidCachedLookup"
    },
    {
      "type": "java.net.InetSocketAddress",
      "allDeclaredFields": true
    },
    {
      "type": "java.net.InetSocketAddress$InetSocketAddressHolder"
    },
    {
      "type": "java.net.MalformedURLException"
    },
    {
      "type": "java.net.NetworkInterface"
    },
    {
      "type": "java.net.Socket",
      "methods": [
        {
          "name": "setOption",
          "parameterTypes": [
            "java.net.SocketOption",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.net.SocketAddress",
      "allDeclaredFields": true
    },
    {
      "type": "java.net.URI",
      "allDeclaredFields": true
    },
    {
      "type": "java.net.URI$Parser"
    },
    {
      "type": "java.net.URL"
    },
    {
      "type": "java.net.URLClassLoader"
    },
    {
      "type": "java.net.URLConnection"
    },
    {
      "type": "java.net.UnixDomainSocketAddress"
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.nio.Buffer"
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.CharBuffer"
    },
    {
      "type": "java.nio.channels.ReadableByteChannel"
    },
    {
      "type": "java.nio.channels.ServerSocketChannel"
    },
    {
      "type": "java.nio.channels.SocketChannel"
    },
    {
      "type": "java.nio.charset.Charset",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.charset.Charset$ExtendedProviderHolder"
    },
    {
      "type": "java.nio.charset.Charset$ThreadTrackHolder"
    },
    {
      "type": "java.nio.charset.CharsetDecoder"
    },
    {
      "type": "java.nio.charset.CharsetEncoder"
    },
    {
      "type": "java.nio.file.FileVisitResult"
    },
    {
      "type": "java.nio.file.Path"
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.InvalidKeyException"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.NoSuchAlgorithmException"
    },
    {
      "type": "java.security.Principal"
    },
    {
      "type": "java.security.SecureClassLoader"
    },
    {
      "type": "java.security.cert.PKIXRevocationChecker"
    },
    {
      "type": "java.security.cert.X509Certificate"
    },
    {
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "type": "java.sql.Clob"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.DriverManager"
    },
    {
      "type": "java.sql.Struct"
    },
    {
      "type": "java.sql.Time"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.text.CompactNumberFormat"
    },
    {
      "type": "java.text.DateFormat"
    },
    {
      "type": "java.text.ListFormat"
    },
    {
      "type": "java.text.MessageFormat"
    },
    {
      "type": "java.time.Clock"
    },
    {
      "type": "java.time.DayOfWeek"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.time.LocalDate"
    },
    {
      "type": "java.time.LocalDateTime",
      "allDeclaredFields": true
    },
    {
      "type": "java.time.LocalTime"
    },
    {
      "type": "java.time.Month"
    },
    {
      "type": "java.time.OffsetDateTime"
    },
    {
      "type": "java.time.ZoneId"
    },
    {
      "type": "java.time.ZoneOffset"
    },
    {
      "type": "java.time.ZonedDateTime",
      "allDeclaredFields": true
    },
    {
      "type": "java.time.chrono.ChronoLocalDate"
    },
    {
      "type": "java.time.chrono.ChronoLocalDateTime",
      "allDeclaredFields": true
    },
    {
      "type": "java.time.chrono.ChronoZonedDateTime",
      "allDeclaredFields": true
    },
    {
      "type": "java.time.chrono.Chronology"
    },
    {
      "type": "java.time.format.DateTimeFormatter"
    },
    {
      "type": "java.time.temporal.Temporal",
      "allDeclaredFields": true
    },
    {
      "type": "java.time.temporal.TemporalAccessor",
      "allDeclaredFields": true
    },
    {
      "type": "java.time.temporal.TemporalAdjuster",
      "allDeclaredFields": true
    },
    {
      "type": "java.time.temporal.TemporalAmount"
    },
    {
      "type": "java.time.temporal.TemporalField"
    },
    {
      "type": "java.time.temporal.TemporalQuery"
    },
    {
      "type": "java.time.temporal.TemporalUnit"
    },
    {
      "type": "java.time.temporal.ValueRange"
    },
    {
      "type": "java.util.AbstractCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.AbstractMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ArrayList",
      "methods": [
        {
          "name": "size",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.Arrays$ArrayList"
    },
    {
      "type": "java.util.Collection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$SynchronizedMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$SynchronizedSortedMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableCollection"
    },
    {
      "type": "java.util.Collections$UnmodifiableMap"
    },
    {
      "type": "java.util.Comparator"
    },
    {
      "type": "java.util.Date",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.EnumSet"
    },
    {
      "type": "java.util.Enumeration"
    },
    {
      "type": "java.util.EventListener"
    },
    {
      "type": "java.util.HashMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.Hashtable"
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$ListN",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$MapN",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Iterator"
    },
    {
      "type": "java.util.LinkedHashMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.List",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "size",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.Locale",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Locale$Builder"
    },
    {
      "type": "java.util.Locale$Category"
    },
    {
      "type": "java.util.Locale$FilteringMode"
    },
    {
      "type": "java.util.Locale$IsoCountryCode"
    },
    {
      "type": "java.util.Locale$LanguageRange",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Locale$LocaleCache"
    },
    {
      "type": "java.util.Locale$LocaleKey"
    },
    {
      "type": "java.util.Locale$LocaleNameGetter"
    },
    {
      "type": "java.util.Map",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Map$Entry"
    },
    {
      "type": "java.util.Map.Entry"
    },
    {
      "type": "java.util.MissingResourceException"
    },
    {
      "type": "java.util.Optional"
    },
    {
      "type": "java.util.Properties"
    },
    {
      "type": "java.util.RandomAccess"
    },
    {
      "type": "java.util.ResourceBundle"
    },
    {
      "type": "java.util.SequencedCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.SequencedMap"
    },
    {
      "type": "java.util.ServiceLoader"
    },
    {
      "type": "java.util.Set",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.SortedMap"
    },
    {
      "type": "java.util.Spliterator"
    },
    {
      "type": "java.util.TimeZone"
    },
    {
      "type": "java.util.TreeMap"
    },
    {
      "type": "java.util.concurrent.ArrayBlockingQueue"
    },
    {
      "type": "java.util.concurrent.BlockingQueue"
    },
    {
      "type": "java.util.concurrent.Callable",
      "methods": [
        {
          "name": "call",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.concurrent.CompletableFuture"
    },
    {
      "type": "java.util.concurrent.ConcurrentMap"
    },
    {
      "type": "java.util.concurrent.CopyOnWriteArrayList"
    },
    {
      "type": "java.util.concurrent.CountDownLatch"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ExecutorService"
    },
    {
      "type": "java.util.concurrent.Future"
    },
    {
      "type": "java.util.concurrent.RejectedExecutionHandler"
    },
    {
      "type": "java.util.concurrent.RunnableScheduledFuture"
    },
    {
      "type": "java.util.concurrent.ScheduledExecutorService"
    },
    {
      "type": "java.util.concurrent.ScheduledFuture"
    },
    {
      "type": "java.util.concurrent.ScheduledThreadPoolExecutor"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.ThreadPoolExecutor"
    },
    {
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicInteger"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReference"
    },
    {
      "type": "java.util.concurrent.locks.Lock"
    },
    {
      "type": "java.util.function.BiConsumer"
    },
    {
      "type": "java.util.function.BiFunction"
    },
    {
      "type": "java.util.function.BiPredicate"
    },
    {
      "type": "java.util.function.BooleanSupplier"
    },
    {
      "type": "java.util.function.Consumer"
    },
    {
      "type": "java.util.function.Function"
    },
    {
      "type": "java.util.function.IntFunction"
    },
    {
      "type": "java.util.function.ObjIntConsumer"
    },
    {
      "type": "java.util.function.Predicate"
    },
    {
      "type": "java.util.function.Supplier"
    },
    {
      "type": "java.util.function.UnaryOperator"
    },
    {
      "type": "java.util.logging.LogManager"
    },
    {
      "type": "java.util.logging.SimpleFormatter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.stream.IntStream"
    },
    {
      "type": "java.util.stream.Stream"
    },
    {
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.annotation.meta.TypeQualifier"
    },
    {
      "type": "javax.cache.Cache"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.management.MBeanRegistration"
    },
    {
      "type": "javax.management.MBeanServer"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.Name"
    },
    {
      "type": "javax.naming.NamingEnumeration"
    },
    {
      "type": "javax.naming.NamingException"
    },
    {
      "type": "javax.naming.directory.Attributes"
    },
    {
      "type": "javax.naming.directory.DirContext"
    },
    {
      "type": "javax.naming.directory.ModificationItem"
    },
    {
      "type": "javax.naming.directory.SearchControls"
    },
    {
      "type": "javax.naming.directory.SearchResult"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.naming.ldap.LdapName"
    },
    {
      "type": "javax.security.auth.Subject"
    },
    {
      "type": "javax.security.auth.callback.CallbackHandler"
    },
    {
      "type": "javax.servlet.Servlet"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "javax.sql.RowSet"
    },
    {
      "type": "javax.xml.parsers.DocumentBuilder"
    },
    {
      "type": "javax.xml.transform.Source"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.ValueBased"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe"
    },
    {
      "type": "jdk.internal.vm.annotation.IntrinsicCandidate"
    },
    {
      "type": "jdk.internal.vm.annotation.Stable"
    },
    {
      "type": "jdk.net.ExtendedSocketOptions",
      "fields": [
        {
          "name": "TCP_KEEPCOUNT"
        },
        {
          "name": "TCP_KEEPIDLE"
        },
        {
          "name": "TCP_KEEPINTERVAL"
        }
      ]
    },
    {
      "type": "kotlin.Annotation"
    },
    {
      "type": "kotlin.Any"
    },
    {
      "type": "kotlin.Array"
    },
    {
      "type": "kotlin.Boolean"
    },
    {
      "type": "kotlin.BooleanArray"
    },
    {
      "type": "kotlin.Byte"
    },
    {
      "type": "kotlin.ByteArray"
    },
    {
      "type": "kotlin.Char"
    },
    {
      "type": "kotlin.CharArray"
    },
    {
      "type": "kotlin.CharSequence"
    },
    {
      "type": "kotlin.Cloneable"
    },
    {
      "type": "kotlin.Comparable"
    },
    {
      "type": "kotlin.Deprecated"
    },
    {
      "type": "kotlin.DeprecatedSinceKotlin"
    },
    {
      "type": "kotlin.DeprecationLevel"
    },
    {
      "type": "kotlin.Double"
    },
    {
      "type": "kotlin.DoubleArray"
    },
    {
      "type": "kotlin.Enum"
    },
    {
      "type": "kotlin.Float"
    },
    {
      "type": "kotlin.FloatArray"
    },
    {
      "type": "kotlin.Int"
    },
    {
      "type": "kotlin.IntArray"
    },
    {
      "type": "kotlin.Long"
    },
    {
      "type": "kotlin.LongArray"
    },
    {
      "type": "kotlin.Metadata",
      "methods": [
        {
          "name": "bv",
          "parameterTypes": []
        },
        {
          "name": "d1",
          "parameterTypes": []
        },
        {
          "name": "d2",
          "parameterTypes": []
        },
        {
          "name": "k",
          "parameterTypes": []
        },
        {
          "name": "mv",
          "parameterTypes": []
        },
        {
          "name": "pn",
          "parameterTypes": []
        },
        {
          "name": "xi",
          "parameterTypes": []
        },
        {
          "name": "xs",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.Number"
    },
    {
      "type": "kotlin.ReplaceWith"
    },
    {
      "type": "kotlin.SafePublicationLazyImpl",
      "fields": [
        {
          "name": "_value"
        }
      ]
    },
    {
      "type": "kotlin.Short"
    },
    {
      "type": "kotlin.ShortArray"
    },
    {
      "type": "kotlin.SinceKotlin"
    },
    {
      "type": "kotlin.String"
    },
    {
      "type": "kotlin.Throwable"
    },
    {
      "type": "kotlin.Unit"
    },
    {
      "type": "kotlin.WasExperimental"
    },
    {
      "type": "kotlin.annotation.AnnotationRetention"
    },
    {
      "type": "kotlin.annotation.AnnotationTarget"
    },
    {
      "type": "kotlin.annotation.MustBeDocumented"
    },
    {
      "type": "kotlin.annotation.Retention"
    },
    {
      "type": "kotlin.annotation.Target",
      "methods": [
        {
          "name": "allowedTargets",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.collections.ByteIterator"
    },
    {
      "type": "kotlin.collections.Collection"
    },
    {
      "type": "kotlin.collections.Iterable"
    },
    {
      "type": "kotlin.collections.Iterator"
    },
    {
      "type": "kotlin.collections.List"
    },
    {
      "type": "kotlin.collections.ListIterator"
    },
    {
      "type": "kotlin.collections.Map"
    },
    {
      "type": "kotlin.collections.Map.Entry"
    },
    {
      "type": "kotlin.collections.MutableCollection"
    },
    {
      "type": "kotlin.collections.MutableIterable"
    },
    {
      "type": "kotlin.collections.MutableIterator"
    },
    {
      "type": "kotlin.collections.MutableList"
    },
    {
      "type": "kotlin.collections.MutableListIterator"
    },
    {
      "type": "kotlin.collections.MutableMap"
    },
    {
      "type": "kotlin.collections.MutableMap.MutableEntry"
    },
    {
      "type": "kotlin.collections.MutableSet"
    },
    {
      "type": "kotlin.collections.Set"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlin.internal.IntrinsicConstEvaluation"
    },
    {
      "type": "kotlin.internal.PlatformDependent"
    },
    {
      "type": "kotlin.jvm.JvmInline"
    },
    {
      "type": "kotlin.jvm.internal.DefaultConstructorMarker"
    },
    {
      "type": "kotlin.ranges.IntRange"
    },
    {
      "type": "kotlin.ranges.LongRange"
    },
    {
      "type": "kotlin.reflect.KClass"
    },
    {
      "type": "kotlin.reflect.KParameter"
    },
    {
      "type": "kotlin.reflect.full.KClasses"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.ErasedOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.FieldOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.load.java.JavaIncompatibilityRulesOverridabilityCondition"
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
      "allPublicFields": true
    },
    {
      "type": "kotlin.reflect.jvm.internal.impl.serialization.deserialization.builtins.BuiltInsLoaderImpl"
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect"
    },
    {
      "type": "org.aopalliance.aop.Advice"
    },
    {
      "type": "org.aopalliance.intercept.Interceptor"
    },
    {
      "type": "org.aopalliance.intercept.MethodInterceptor"
    },
    {
      "type": "org.apache.catalina.Authenticator"
    },
    {
      "type": "org.apache.catalina.Contained"
    },
    {
      "type": "org.apache.catalina.Container"
    },
    {
      "type": "org.apache.catalina.Context"
    },
    {
      "type": "org.apache.catalina.CredentialHandler"
    },
    {
      "type": "org.apache.catalina.Engine"
    },
    {
      "type": "org.apache.catalina.Host"
    },
    {
      "type": "org.apache.catalina.JmxEnabled"
    },
    {
      "type": "org.apache.catalina.Lifecycle"
    },
    {
      "type": "org.apache.catalina.LifecycleEvent"
    },
    {
      "type": "org.apache.catalina.LifecycleException"
    },
    {
      "type": "org.apache.catalina.LifecycleListener"
    },
    {
      "type": "org.apache.catalina.LifecycleState"
    },
    {
      "type": "org.apache.catalina.Manager"
    },
    {
      "type": "org.apache.catalina.Realm"
    },
    {
      "type": "org.apache.catalina.Server"
    },
    {
      "type": "org.apache.catalina.Session"
    },
    {
      "type": "org.apache.catalina.Valve"
    },
    {
      "type": "org.apache.catalina.WebResource"
    },
    {
      "type": "org.apache.catalina.WebResourceRoot"
    },
    {
      "type": "org.apache.catalina.Wrapper"
    },
    {
      "type": "org.apache.catalina.authenticator.AuthenticatorBase",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.catalina.authenticator.AuthenticatorBase$JaspicState"
    },
    {
      "type": "org.apache.catalina.connector.Connector"
    },
    {
      "type": "org.apache.catalina.connector.Request"
    },
    {
      "type": "org.apache.catalina.connector.RequestFacade"
    },
    {
      "type": "org.apache.catalina.connector.Response"
    },
    {
      "type": "org.apache.catalina.core.ApplicationContextFacade"
    },
    {
      "type": "org.apache.catalina.loader.JdbcLeakPrevention",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "clearJdbcDriverRegistrations",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.realm.GenericPrincipal"
    },
    {
      "type": "org.apache.catalina.realm.RealmBase",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.catalina.realm.X509UsernameRetriever"
    },
    {
      "type": "org.apache.catalina.servlets.DefaultServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.catalina.servlets.DefaultServlet$CompressionFormat"
    },
    {
      "type": "org.apache.catalina.servlets.DefaultServlet$PrecompressedResource"
    },
    {
      "type": "org.apache.catalina.servlets.DefaultServlet$SortManager$Order"
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.catalina.util.CharsetMapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.catalina.util.LifecycleBase",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.catalina.util.LifecycleMBeanBase",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.catalina.util.XMLWriter"
    },
    {
      "type": "org.apache.catalina.valves.ValveBase",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.commons.logging.Log"
    },
    {
      "type": "org.apache.coyote.AbstractProtocol",
      "methods": [
        {
          "name": "getAddress",
          "parameterTypes": []
        },
        {
          "name": "getLocalPort",
          "parameterTypes": []
        },
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setProperty",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.apache.coyote.ProtocolHandler"
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.coyote.http11.AbstractHttp11Protocol",
      "methods": [
        {
          "name": "isSSLEnabled",
          "parameterTypes": []
        },
        {
          "name": "setRelaxedPathChars",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setRelaxedQueryChars",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.apache.coyote.http11.Http11NioProtocol"
    },
    {
      "type": "org.apache.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.ftpserver.ftplet.Authentication"
    },
    {
      "type": "org.apache.ftpserver.ftplet.AuthenticationFailedException"
    },
    {
      "type": "org.apache.ftpserver.ftplet.FtpException"
    },
    {
      "type": "org.apache.ftpserver.ftplet.User"
    },
    {
      "type": "org.apache.ftpserver.ftplet.UserManager"
    },
    {
      "type": "org.apache.ftpserver.usermanager.PasswordEncryptor"
    },
    {
      "type": "org.apache.ftpserver.usermanager.impl.AbstractUserManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.HttpAsyncClients"
    },
    {
      "type": "org.apache.hc.client5.http.impl.classic.HttpClients"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.jasper.servlet.JspServlet"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.log4j.util.EnvironmentPropertySource"
    },
    {
      "type": "org.apache.logging.log4j.util.SystemPropertiesPropertySource"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.lucene.analysis.Analyzer",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.analysis.Analyzer$ReuseStrategy"
    },
    {
      "type": "org.apache.lucene.analysis.Analyzer$TokenStreamComponents"
    },
    {
      "type": "org.apache.lucene.analysis.CharArraySet"
    },
    {
      "type": "org.apache.lucene.analysis.TokenStream"
    },
    {
      "type": "org.apache.lucene.analysis.cn.smart.SmartChineseAnalyzer",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.analysis.tokenattributes.KeywordAttributeImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.lucene.analysis.tokenattributes.PackedTokenAttributeImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene100.Lucene100Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene50.Lucene50PostingsFormat"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene80.Lucene80Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene80.Lucene80DocValuesFormat"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene84.Lucene84Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene84.Lucene84PostingsFormat"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene86.Lucene86Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene87.Lucene87Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene90.Lucene90Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene90.Lucene90PostingsFormat"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene91.Lucene91Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene912.Lucene912Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene912.Lucene912PostingsFormat"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene92.Lucene92Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene94.Lucene94Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene95.Lucene95Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene99.Lucene99Codec"
    },
    {
      "type": "org.apache.lucene.backward_codecs.lucene99.Lucene99PostingsFormat"
    },
    {
      "type": "org.apache.lucene.codecs.blocktreeords.BlockTreeOrdsPostingsFormat"
    },
    {
      "type": "org.apache.lucene.codecs.bloom.BloomFilteringPostingsFormat"
    },
    {
      "type": "org.apache.lucene.codecs.lucene101.Lucene101Codec"
    },
    {
      "type": "org.apache.lucene.codecs.lucene101.Lucene101PostingsFormat"
    },
    {
      "type": "org.apache.lucene.codecs.lucene90.Lucene90DocValuesFormat"
    },
    {
      "type": "org.apache.lucene.codecs.memory.DirectPostingsFormat"
    },
    {
      "type": "org.apache.lucene.codecs.memory.FSTPostingsFormat"
    },
    {
      "type": "org.apache.lucene.codecs.simpletext.SimpleTextCodec"
    },
    {
      "type": "org.apache.lucene.codecs.uniformsplit.UniformSplitPostingsFormat"
    },
    {
      "type": "org.apache.lucene.codecs.uniformsplit.sharedterms.STUniformSplitPostingsFormat"
    },
    {
      "type": "org.apache.lucene.document.Field"
    },
    {
      "type": "org.apache.lucene.index.BufferedUpdatesStream$ApplyDeletesResult"
    },
    {
      "type": "org.apache.lucene.index.BufferedUpdatesStream$SegmentState"
    },
    {
      "type": "org.apache.lucene.index.CodecReader"
    },
    {
      "type": "org.apache.lucene.index.ConcurrentMergeScheduler"
    },
    {
      "type": "org.apache.lucene.index.DirectoryReader"
    },
    {
      "type": "org.apache.lucene.index.DocValuesFieldUpdates"
    },
    {
      "type": "org.apache.lucene.index.DocValuesUpdate"
    },
    {
      "type": "org.apache.lucene.index.DocsWithFieldSet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.index.DocumentsWriter"
    },
    {
      "type": "org.apache.lucene.index.DocumentsWriterDeleteQueue$Node"
    },
    {
      "type": "org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket"
    },
    {
      "type": "org.apache.lucene.index.FieldInfos"
    },
    {
      "type": "org.apache.lucene.index.FieldInfos$FieldNumbers"
    },
    {
      "type": "org.apache.lucene.index.FrozenBufferedUpdates"
    },
    {
      "type": "org.apache.lucene.index.IndexReader"
    },
    {
      "type": "org.apache.lucene.index.IndexWriter",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.index.IndexWriter$DocModifier"
    },
    {
      "type": "org.apache.lucene.index.IndexWriter$DocStats"
    },
    {
      "type": "org.apache.lucene.index.LiveIndexWriterConfig"
    },
    {
      "type": "org.apache.lucene.index.MergePolicy"
    },
    {
      "type": "org.apache.lucene.index.MergePolicy$MergeContext"
    },
    {
      "type": "org.apache.lucene.index.MergePolicy$MergeReader"
    },
    {
      "type": "org.apache.lucene.index.MergePolicy$MergeSpecification"
    },
    {
      "type": "org.apache.lucene.index.MergePolicy$OneMerge"
    },
    {
      "type": "org.apache.lucene.index.MergeState$DocMap"
    },
    {
      "type": "org.apache.lucene.index.MergeTrigger"
    },
    {
      "type": "org.apache.lucene.index.ReadersAndUpdates"
    },
    {
      "type": "org.apache.lucene.index.SegmentCommitInfo"
    },
    {
      "type": "org.apache.lucene.index.SegmentInfo"
    },
    {
      "type": "org.apache.lucene.index.SegmentInfos"
    },
    {
      "type": "org.apache.lucene.index.SegmentReader"
    },
    {
      "type": "org.apache.lucene.index.Sorter$DocMap"
    },
    {
      "type": "org.apache.lucene.index.StandardDirectoryReader"
    },
    {
      "type": "org.apache.lucene.index.Term",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.index.TwoPhaseCommit"
    },
    {
      "type": "org.apache.lucene.internal.hppc.IntArrayList",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.internal.hppc.IntHashSet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.internal.hppc.IntObjectHashMap",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.internal.hppc.LongArrayList",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.internal.hppc.LongHashSet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.internal.hppc.LongIntHashMap",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.internal.hppc.LongObjectHashMap",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.queryparser.classic.ParseException"
    },
    {
      "type": "org.apache.lucene.sandbox.codecs.idversion.IDVersionPostingsFormat"
    },
    {
      "type": "org.apache.lucene.search.AutomatonQuery",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.search.BooleanQuery"
    },
    {
      "type": "org.apache.lucene.search.BooleanQuery$Builder"
    },
    {
      "type": "org.apache.lucene.search.BoostAttributeImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.lucene.search.DocIdSet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.search.IndexSearcher"
    },
    {
      "type": "org.apache.lucene.search.MultiTermQuery",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.search.Query",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.search.ReferenceManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.search.ReferenceManager$RefreshListener"
    },
    {
      "type": "org.apache.lucene.search.SearcherFactory"
    },
    {
      "type": "org.apache.lucene.search.SearcherManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.search.Sort"
    },
    {
      "type": "org.apache.lucene.search.highlight.InvalidTokenOffsetsException"
    },
    {
      "type": "org.apache.lucene.store.AlreadyClosedException"
    },
    {
      "type": "org.apache.lucene.store.BaseDirectory",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.store.ChecksumIndexInput"
    },
    {
      "type": "org.apache.lucene.store.DataOutput",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.store.Directory",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.store.FSDirectory",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.store.FilterIndexInput"
    },
    {
      "type": "org.apache.lucene.store.IOContext"
    },
    {
      "type": "org.apache.lucene.store.IndexInput"
    },
    {
      "type": "org.apache.lucene.store.IndexOutput"
    },
    {
      "type": "org.apache.lucene.store.Lock"
    },
    {
      "type": "org.apache.lucene.store.LockFactory"
    },
    {
      "type": "org.apache.lucene.store.NIOFSDirectory",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.store.TrackingDirectoryWrapper"
    },
    {
      "type": "org.apache.lucene.util.Accountable"
    },
    {
      "type": "org.apache.lucene.util.AttributeFactory"
    },
    {
      "type": "org.apache.lucene.util.BitDocIdSet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.BitSet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.Bits"
    },
    {
      "type": "org.apache.lucene.util.ByteBlockPool",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.BytesRef",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.BytesRefBlockPool",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.BytesRefHash",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.Counter"
    },
    {
      "type": "org.apache.lucene.util.FixedBitSet",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.FrequencyTrackingRingBuffer",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.FrequencyTrackingRingBuffer$IntBag",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.IOConsumer"
    },
    {
      "type": "org.apache.lucene.util.IOFunction"
    },
    {
      "type": "org.apache.lucene.util.InfoStream"
    },
    {
      "type": "org.apache.lucene.util.LongValues",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.PagedBytes",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.PagedBytes$Reader",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.automaton.CompiledAutomaton",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.automaton.RunAutomaton",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.automaton.Transition",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.fst.FST",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.fst.GrowableByteArrayDataOutput",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.fst.OffHeapFSTStore",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.packed.DeltaPackedLongValues",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.packed.DeltaPackedLongValues$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.packed.MonotonicLongValues",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.packed.MonotonicLongValues$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.packed.PackedLongValues",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.lucene.util.packed.PackedLongValues$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.mina.transport.socket.nio.NioProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.concurrent.Executor"
          ]
        }
      ]
    },
    {
      "type": "org.apache.poi.ss.usermodel.Cell"
    },
    {
      "type": "org.apache.poi.ss.usermodel.Sheet"
    },
    {
      "type": "org.apache.poi.ss.usermodel.Workbook"
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.util.descriptor.web.SecurityConstraint"
    },
    {
      "type": "org.apache.tomcat.util.http.parser.ContentRange"
    },
    {
      "type": "org.apache.tomcat.util.http.parser.Ranges"
    },
    {
      "type": "org.apache.tomcat.util.http.parser.Ranges$Entry"
    },
    {
      "type": "org.apache.tomcat.util.net.AbstractEndpoint",
      "methods": [
        {
          "name": "setBindOnInit",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.apache.tomcat.util.net.NioEndpoint"
    },
    {
      "type": "org.apache.tomcat.util.res.StringManager"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsFilter"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsSci"
    },
    {
      "type": "org.apache.xerces.util.SecurityManager"
    },
    {
      "type": "org.apache.xmlbeans.metadata.system.sXMLCONFIG.TypeSystemHolder",
      "fields": [
        {
          "name": "typeSystem"
        }
      ]
    },
    {
      "type": "org.apache.xmlbeans.metadata.system.sXMLLANG.TypeSystemHolder",
      "fields": [
        {
          "name": "typeSystem"
        }
      ]
    },
    {
      "type": "org.apache.xmlbeans.metadata.system.sXMLSCHEMA.TypeSystemHolder",
      "fields": [
        {
          "name": "typeSystem"
        }
      ]
    },
    {
      "type": "org.apache.xmlbeans.metadata.system.sXMLTOOLS.TypeSystemHolder",
      "fields": [
        {
          "name": "typeSystem"
        }
      ]
    },
    {
      "type": "org.aspectj.lang.annotation.Around"
    },
    {
      "type": "org.aspectj.lang.annotation.Aspect"
    },
    {
      "type": "org.aspectj.lang.annotation.Pointcut"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15AnnotationFinder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.aspectj.weaver.World"
          ]
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegate",
      "fields": [
        {
          "name": "myClass"
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.ReflectionVar",
      "fields": [
        {
          "name": "varType"
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.ShadowMatchImpl",
      "fields": [
        {
          "name": "residualTest"
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.tools.Jdk14TraceFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.COMPOSITE$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.CompositeSignatures$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.Dilithium$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EXTERNAL$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.Falcon$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.LMS$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.NTRU$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.SPHINCSPlus$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Blake3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bson.Document",
      "allDeclaredFields": true
    },
    {
      "type": "org.bson.UuidRepresentation"
    },
    {
      "type": "org.bson.codecs.configuration.CodecRegistry"
    },
    {
      "type": "org.bson.codecs.kotlin.DataClassCodecProvider"
    },
    {
      "type": "org.bson.codecs.kotlinx.KotlinSerializerCodecProvider"
    },
    {
      "type": "org.bson.codecs.record.RecordCodecProvider"
    },
    {
      "type": "org.bson.conversions.Bson"
    },
    {
      "type": "org.bson.types.ObjectId",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getDate",
          "parameterTypes": []
        },
        {
          "name": "getTimestamp",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bson.types.ObjectId$SerializationProxy"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.eclipse.collections.api.list.ImmutableList"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.server.spring.SpringComponentProvider"
    },
    {
      "type": "org.graalvm.nativeimage.ImageInfo",
      "methods": [
        {
          "name": "inImageCode",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
      "methods": [
        {
          "name": "externalClassLoader",
          "parameterTypes": [
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.ConfigurationImpl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_zh"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_zh_CN"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_zh"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_zh_CN"
    },
    {
      "type": "org.ietf.jgss.GSSContext"
    },
    {
      "type": "org.ietf.jgss.GSSCredential"
    },
    {
      "type": "org.ietf.jgss.GSSName"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.jmolecules.ddd.annotation.Identity"
    },
    {
      "type": "org.jmolecules.ddd.types.Association"
    },
    {
      "type": "org.jmolecules.spring.IdentifierToPrimitivesConverter"
    },
    {
      "type": "org.joda.time.ReadableInstant"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.CTNonVisualDrawingProps"
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTGraphicalObjectDataImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTGraphicalObjectImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTGroupShapePropertiesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTNonVisualDrawingPropsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTNonVisualDrawingShapePropsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTOfficeStyleSheetImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTOuterShadowEffectImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTRegularTextRunImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTShapePropertiesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTableStyleListImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextBodyImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextCharacterPropertiesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextParagraphImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.CTTextParagraphPropertiesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.STDrawingElementIdImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.TblStyleLstDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.main.impl.ThemeDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.picture.CTPicture"
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.picture.impl.CTPictureImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.picture.impl.CTPictureNonVisualImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.impl.CTAnchorImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.drawingml.x2006.wordprocessingDrawing.impl.CTInlineImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.officeDocument.x2006.relationships.impl.STRelationshipIdImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.officeDocument.x2006.sharedTypes.impl.STXstringImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.CTGroupShape"
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTCommonSlideDataImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTGroupShapeImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTGroupShapeNonVisualImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTNotesMasterImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTNotesSlideImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTPresentationImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTShapeImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTShapeNonVisualImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideIdListEntryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideIdListImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideLayoutImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideMasterIdListEntryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideMasterIdListImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.CTSlideMasterImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.NotesDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.NotesMasterDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.PresentationDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.SldDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.SldLayoutDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.presentationml.x2006.main.impl.SldMasterDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellType$Enum",
      "fields": [
        {
          "name": "table"
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTBorderImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTBordersImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTCellImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTCellStyleXfsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTCellXfsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTColImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTColsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFillImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFillsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFontImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFontsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTNumFmtsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTRowImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTRstImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTSheetDataImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTSheetImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTSheetsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTSstImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTStylesheetImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTWorkbookImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTWorksheetImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTXfImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.STCellRefImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.STCellTypeImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.SstDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.StyleSheetDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.WorkbookDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.WorksheetDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.STHdrFtr$Enum",
      "fields": [
        {
          "name": "table"
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTBodyImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTBookmarkImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTBrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTCommentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTCommentsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTDocDefaultsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTDocument1Impl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTDrawingImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTEmptyImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTEndnotesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTFootnotesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTFtnEdnImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTHdrFtrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTHdrFtrRefImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTHyperlinkImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTLatentStylesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTMarkupImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTMarkupRangeImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPPrDefaultImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPPrGeneralImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPPrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTPictureImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTProofErrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTRImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTRPrDefaultImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTRPrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTRowImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTSectPrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTSettingsImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTStyleImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTStylesImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTTblImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTTcImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTTcPrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CTTextImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.CommentsDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.DocumentDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.EndnotesDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.FootnotesDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.HdrDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.STHdrFtrImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.SettingsDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.openxmlformats.schemas.wordprocessingml.x2006.main.impl.StylesDocumentImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.xmlbeans.SchemaType"
          ]
        }
      ]
    },
    {
      "type": "org.osgi.framework.FrameworkUtil"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.simpleframework.xml.core.TextLabel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.simpleframework.xml.core.Contact",
            "org.simpleframework.xml.Text",
            "org.simpleframework.xml.stream.Format"
          ]
        }
      ]
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.helpers.Log4jLoggerFactory"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger",
      "methods": [
        {
          "name": "log",
          "parameterTypes": [
            "org.slf4j.Marker",
            "java.lang.String",
            "int",
            "java.lang.String",
            "java.lang.Object[]",
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource$ConditionType"
    },
    {
      "type": "org.springdoc.api.OpenApiResourceNotFoundException"
    },
    {
      "type": "org.springdoc.core.annotations.RouterOperation"
    },
    {
      "type": "org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.SpecPropertiesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "additionalModelsConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "fileSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "globalOpenApiCustomizer",
          "parameterTypes": []
        },
        {
          "name": "initExtraSchemas",
          "parameterTypes": []
        },
        {
          "name": "localSpringDocParameterNameDiscoverer",
          "parameterTypes": []
        },
        {
          "name": "modelConverterRegistrar",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "openAPIBuilder",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "operationBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "parameterBuilder",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider",
            "java.util.Optional"
          ]
        },
        {
          "name": "parameterObjectNamingStrategyCustomizer",
          "parameterTypes": []
        },
        {
          "name": "polymorphicModelConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "propertyResolverUtils",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.context.MessageSource",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "requestBodyBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "responseSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "schemaPropertyDeprecatingConverter",
          "parameterTypes": []
        },
        {
          "name": "securityParser",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springDocCustomizers",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "springDocProviders",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "springdocObjectMapperProvider",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springdoc.core.configuration.SpringDocConfiguration"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "queryDslQuerydslPredicateOperationCustomizer",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "springDataWebPropertiesProvider",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webFluxSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webConversionServiceProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocJacksonKotlinModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "springdocKotlinObjectMapperProvider",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocKotlinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocKotlinConfiguration$KotlinReflectDependingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "kotlinDeprecatedPropertyCustomizer",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "kotlinModelConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocPageableConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dataRestDelegatingMethodParameterCustomizer",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "pageOpenAPIConverter",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "pageableOpenAPIConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocSortConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "sortOpenAPIConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.converters.AdditionalModelsConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.FileSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.KotlinInlineClassUnwrappingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.ModelConverterRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.OAS31ModelConverter"
    },
    {
      "type": "org.springdoc.core.converters.PageOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PageableOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PolymorphicModelConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PolymorphicModelConverter$BeanPropertyBiDefinition"
    },
    {
      "type": "org.springdoc.core.converters.PropertyCustomizingConverter"
    },
    {
      "type": "org.springdoc.core.converters.ResponseSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SortOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.WebFluxSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.DataRestDelegatingMethodParameterCustomizer$DefaultSort"
    },
    {
      "type": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOperationCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.KotlinDeprecatedPropertyCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiBuilderCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiLocaleCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OperationCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OperationIdCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.ParameterCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.ParameterObjectNamingStrategyCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.PropertyCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.SpringDocCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.filters.OpenApiMethodFilter"
    },
    {
      "type": "org.springdoc.core.fn.AbstractRouterFunctionVisitor"
    },
    {
      "type": "org.springdoc.core.fn.RouterFunctionData"
    },
    {
      "type": "org.springdoc.core.fn.RouterOperation"
    },
    {
      "type": "org.springdoc.core.models.ControllerAdviceInfo"
    },
    {
      "type": "org.springdoc.core.models.GroupedOpenApi"
    },
    {
      "type": "org.springdoc.core.models.MethodAttributes"
    },
    {
      "type": "org.springdoc.core.models.ParameterId"
    },
    {
      "type": "org.springdoc.core.models.ParameterInfo"
    },
    {
      "type": "org.springdoc.core.models.RequestBodyInfo"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setDocExpansion",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getApiDocs",
          "parameterTypes": []
        },
        {
          "name": "getPackagesToScan",
          "parameterTypes": []
        },
        {
          "name": "setApiDocs",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs"
          ]
        },
        {
          "name": "setPackagesToScan",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setVersion",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersionEditor"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Cache"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter"
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigParameters"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight"
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.providers.CloudFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.JavadocProvider"
    },
    {
      "type": "org.springdoc.core.providers.ObjectMapperProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.RepositoryRestResourceProvider"
    },
    {
      "type": "org.springdoc.core.providers.RouterFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringDocProviders",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringWebProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.WebConversionServiceProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.AbstractRequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericParameterService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericResponseService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OpenAPIService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OperationService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.RequestBodyService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.SecurityService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.utils.PropertyResolverUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerIndexTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerWelcome",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiWebMvcResource",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "openapiJson",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest",
            "java.lang.String",
            "java.util.Locale"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "openApiResource",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectFactory",
            "org.springdoc.core.service.AbstractRequestService",
            "org.springdoc.core.service.GenericResponseService",
            "org.springdoc.core.service.OperationService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.providers.SpringDocProviders",
            "org.springdoc.core.customizers.SpringDocCustomizers"
          ]
        },
        {
          "name": "requestBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "java.util.Optional",
            "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"
          ]
        },
        {
          "name": "responseBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.OperationService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springWebProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "routerFunctionProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.providers.SpringWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.service.RequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "indexPageTransformer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SwaggerUiOAuthProperties",
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "swaggerConfigResource",
          "parameterTypes": [
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon"
          ]
        },
        {
          "name": "swaggerResourceResolver",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties"
          ]
        },
        {
          "name": "swaggerWebMvcConfigurer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
            "java.util.Optional",
            "org.springdoc.webmvc.ui.SwaggerResourceResolver"
          ]
        },
        {
          "name": "swaggerWelcome",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.providers.SpringWebProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfigResource",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "openapiJson",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexPageTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexTransformer"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerUiHome"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "redirectToUi",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.LdapDataEntry"
    },
    {
      "type": "org.springframework.aop.Advisor"
    },
    {
      "type": "org.springframework.aop.PointcutAdvisor"
    },
    {
      "type": "org.springframework.aop.SpringProxy"
    },
    {
      "type": "org.springframework.aop.TargetClassAware"
    },
    {
      "type": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.Advised"
    },
    {
      "type": "org.springframework.aop.framework.AopConfigException"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler"
    },
    {
      "type": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.support.AbstractPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.aot.generate.GenerationContext"
    },
    {
      "type": "org.springframework.aot.hint.RuntimeHints"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.aot.hint.annotation.ReflectiveRuntimeHintsRegistrar"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflection"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.BeanWrapper"
    },
    {
      "type": "org.springframework.beans.BeansException"
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.ListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.ObjectFactory"
    },
    {
      "type": "org.springframework.beans.factory.ObjectProvider"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanDefinition"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.support.RegisteredBean"
    },
    {
      "type": "org.springframework.boot.ApplicationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setAllowCircularReferences",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.LazyInitializationExcludeFilter"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "cacheAutoConfigurationValidator",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.cache.CacheProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "cacheManagerCustomizers",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getCaffeine",
          "parameterTypes": []
        },
        {
          "name": "setType",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.cache.CacheType"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Caffeine",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setSpec",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Couchbase"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Infinispan"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$JCache"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheProperties$Redis"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheTypeEditor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "cacheManager",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.cache.CacheProperties",
            "org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBooleanProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "messageSource",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.MessageSourceProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$MessageSourceRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getBasename",
          "parameterTypes": []
        },
        {
          "name": "setBasename",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setEncoding",
          "parameterTypes": [
            "java.nio.charset.Charset"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "persistenceExceptionTranslationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.ConditionalOnRepositoryType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.OnRepositoryTypeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.RepositoryType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mongoConnectionDetails",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.mongo.MongoProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "gridFsTemplate",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.mongo.MongoProperties",
            "org.springframework.data.mongodb.MongoDatabaseFactory",
            "org.springframework.data.mongodb.core.MongoTemplate",
            "org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
          ]
        },
        {
          "name": "pageableCustomizer",
          "parameterTypes": []
        },
        {
          "name": "sortCustomizer",
          "parameterTypes": []
        },
        {
          "name": "springDataWebSettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "gson",
          "parameterTypes": [
            "com.google.gson.GsonBuilder"
          ]
        },
        {
          "name": "gsonBuilder",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "standardGsonBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.gson.GsonProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonProperties$Strictness"
    },
    {
      "type": "org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.ConditionalOnPreferredJsonMapper"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.ConditionalOnPreferredJsonMapper$JsonMapper"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "messageConverters",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "stringHttpMessageConverter",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mappingJackson2HttpMessageConverter",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mappingJackson2XmlHttpMessageConverter",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.OnPreferredJsonMapperCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties$Ssl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties$Factory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.ClientHttpRequestFactoryBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.http.client.HttpClientProperties"
          ]
        },
        {
          "name": "clientHttpRequestFactoryBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "clientHttpRequestFactorySettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.AbstractClientHttpConnectorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.AbstractClientHttpConnectorProperties$Connector"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties"
          ]
        },
        {
          "name": "clientHttpConnectorBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "clientHttpConnectorSettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ConditionalOnClientHttpConnectorBuilderDetection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build"
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "ldapContextSource",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ldap.LdapConnectionDetails",
            "org.springframework.boot.autoconfigure.ldap.LdapProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "ldapTemplate",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ldap.LdapProperties",
            "org.springframework.ldap.core.ContextSource",
            "org.springframework.ldap.odm.core.ObjectDirectoryMapper"
          ]
        },
        {
          "name": "objectDirectoryMapper",
          "parameterTypes": []
        },
        {
          "name": "propertiesLdapConnectionDetails",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ldap.LdapProperties",
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ldap.LdapConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ldap.LdapProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ldap.LdapProperties$Referral"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ldap.LdapProperties$Template"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ldap.PropertiesLdapConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails$GridFs"
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setUri",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs"
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoProperties$Ssl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.PropertiesMongoConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode"
    },
    {
      "type": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.ScheduledBeanLazyInitializationExcludeFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Mode"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutorAsyncConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bootstrapExecutorAliasPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$OnExecutorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutor",
          "parameterTypes": [
            "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "scheduledBeanLazyInitializationExcludeFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "taskScheduler",
          "parameterTypes": [
            "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$DefaultTemplateEngineConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "templateEngine",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations$ReactiveTemplateEngineConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "defaultTemplateResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "resourceUrlEncodingFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "thymeleafViewResolver",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
            "org.thymeleaf.spring6.SpringTemplateEngine"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setCache",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setMode",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Reactive"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties$Servlet"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "platformTransactionManagerCustomizers",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "transactionExecutionListeners",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultValidator",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "methodValidationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationConfigurationCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getServlet",
          "parameterTypes": []
        },
        {
          "name": "getTomcat",
          "parameterTypes": []
        },
        {
          "name": "setForwardHeadersStrategy",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        },
        {
          "name": "setShutdown",
          "parameterTypes": [
            "org.springframework.boot.web.server.Shutdown"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategyEditor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getEncoding",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setMaxPartCount",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setMaxPartHeaderSize",
          "parameterTypes": [
            "org.springframework.util.unit.DataSize"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$UseApr"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getResources",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCache",
          "parameterTypes": []
        },
        {
          "name": "getChain",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCachecontrol",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setMaxAge",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setCache",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "httpMessageConvertersRestClientCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientBuilderConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientSsl",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatVirtualThreadsWebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.DateTimeFormatters"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServlet",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "characterEncodingFilter",
          "parameterTypes": []
        },
        {
          "name": "localeCharsetMappingsCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
          ]
        },
        {
          "name": "multipartConfigElement",
          "parameterTypes": []
        },
        {
          "name": "multipartResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMaxFileSize",
          "parameterTypes": [
            "org.springframework.util.unit.DataSize"
          ]
        },
        {
          "name": "setMaxRequestSize",
          "parameterTypes": [
            "org.springframework.util.unit.DataSize"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "tomcatServletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatServletWebServerFactory",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "formContentFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ListableBeanFactory"
          ]
        },
        {
          "name": "flashMapManager",
          "parameterTypes": []
        },
        {
          "name": "mvcContentNegotiationManager",
          "parameterTypes": []
        },
        {
          "name": "mvcConversionService",
          "parameterTypes": []
        },
        {
          "name": "mvcValidator",
          "parameterTypes": []
        },
        {
          "name": "themeResolver",
          "parameterTypes": []
        },
        {
          "name": "viewNameTranslator",
          "parameterTypes": []
        },
        {
          "name": "welcomePageHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "welcomePageNotAcceptableHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "resourceHandlerRegistrationCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "defaultViewResolver",
          "parameterTypes": []
        },
        {
          "name": "requestContextFilter",
          "parameterTypes": []
        },
        {
          "name": "viewResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "error",
          "parameterTypes": [
            "jakarta.servlet.http.HttpServletRequest"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "basicErrorController",
          "parameterTypes": [
            "org.springframework.boot.web.servlet.error.ErrorAttributes",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorPageCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
        },
        {
          "name": "preserveErrorControllerTargetClassPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        },
        {
          "name": "conventionErrorViewResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "beanNameViewResolver",
          "parameterTypes": []
        },
        {
          "name": "defaultErrorView",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "websocketServletWebServerCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityChangeEvent"
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityState"
    },
    {
      "type": "org.springframework.boot.availability.LivenessState"
    },
    {
      "type": "org.springframework.boot.availability.ReadinessState"
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.BindResult"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.http.client.AbstractClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings$Redirects"
    },
    {
      "type": "org.springframework.boot.http.client.HttpClientSettings"
    },
    {
      "type": "org.springframework.boot.http.client.HttpComponentsClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.HttpRedirects"
    },
    {
      "type": "org.springframework.boot.http.client.JdkClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.JettyClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ReactorClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.SimpleClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.reactive.AbstractClientHttpConnectorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ClientHttpConnectorBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ClientHttpConnectorSettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.HttpComponentsClientHttpConnectorBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.reactive.JdkClientHttpConnectorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.JettyClientHttpConnectorBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ReactorClientHttpConnectorBuilder"
    },
    {
      "type": "org.springframework.boot.info.BuildProperties"
    },
    {
      "type": "org.springframework.boot.info.GitProperties"
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ClassPathResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponent$Scope"
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.loader.launch.LaunchedClassLoader"
    },
    {
      "type": "org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader"
    },
    {
      "type": "org.springframework.boot.logging.LogLevelEditor"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationMode"
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.NoSuchSslBundleException"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.RestClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatConnectorCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatContextCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatProtocolHandlerCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatWebServer"
    },
    {
      "type": "org.springframework.boot.web.error.ErrorAttributeOptions"
    },
    {
      "type": "org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Compression"
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPage"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrar"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistry"
    },
    {
      "type": "org.springframework.boot.web.server.Http2"
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings"
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings$Mapping"
    },
    {
      "type": "org.springframework.boot.web.server.Shutdown"
    },
    {
      "type": "org.springframework.boot.web.server.ShutdownEditor"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle"
    },
    {
      "type": "org.springframework.boot.web.server.WebServer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.FilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.RegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletContextInitializer"
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistrar"
    },
    {
      "type": "org.springframework.boot.web.servlet.WebListenerRegistry"
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorController"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.CookieSameSiteSupplier"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Encoding",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setCharset",
          "parameterTypes": [
            "java.nio.charset.Charset"
          ]
        },
        {
          "name": "setForce",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Jsp"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session"
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.annotation.AbstractCachingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cache.annotation.AbstractCachingConfiguration$CachingConfigurerSupplier"
    },
    {
      "type": "org.springframework.cache.annotation.AnnotationCacheOperationSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.annotation.AnnotationCacheOperationSource$CacheOperationProvider"
    },
    {
      "type": "org.springframework.cache.annotation.CacheAnnotationParser"
    },
    {
      "type": "org.springframework.cache.annotation.CachingConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cache.annotation.CachingConfigurer"
    },
    {
      "type": "org.springframework.cache.annotation.EnableCaching"
    },
    {
      "type": "org.springframework.cache.annotation.ProxyCachingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "cacheAdvisor",
          "parameterTypes": [
            "org.springframework.cache.interceptor.CacheOperationSource",
            "org.springframework.cache.interceptor.CacheInterceptor"
          ]
        },
        {
          "name": "cacheInterceptor",
          "parameterTypes": [
            "org.springframework.cache.interceptor.CacheOperationSource"
          ]
        },
        {
          "name": "cacheOperationSource",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.AbstractCacheInvoker",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.CacheInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.CacheOperationSource"
    },
    {
      "type": "org.springframework.cache.jcache.config.ProxyJCacheConfiguration"
    },
    {
      "type": "org.springframework.cglib.proxy.Dispatcher"
    },
    {
      "type": "org.springframework.cglib.proxy.MethodInterceptor"
    },
    {
      "type": "org.springframework.cglib.proxy.NoOp"
    },
    {
      "type": "org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
    },
    {
      "type": "org.springframework.context.ApplicationContext"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationContextException"
    },
    {
      "type": "org.springframework.context.ApplicationContextInitializer"
    },
    {
      "type": "org.springframework.context.ApplicationEvent"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisher"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisherAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener"
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.ConfigurableApplicationContext"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.HierarchicalMessageSource"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.MessageSource"
    },
    {
      "type": "org.springframework.context.MessageSourceAware"
    },
    {
      "type": "org.springframework.context.MessageSourceResolvable"
    },
    {
      "type": "org.springframework.context.NoSuchMessageException"
    },
    {
      "type": "org.springframework.context.PayloadApplicationEvent"
    },
    {
      "type": "org.springframework.context.Phased"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.EnableAspectJAutoProxy"
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportAware"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.PropertySource"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.ContextClosedEvent"
    },
    {
      "type": "org.springframework.context.event.ContextRefreshedEvent"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListener"
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.i18n.LocaleContext"
    },
    {
      "type": "org.springframework.context.support.AbstractMessageSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.AbstractResourceBasedMessageSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
    },
    {
      "type": "org.springframework.context.support.MessageSourceAccessor"
    },
    {
      "type": "org.springframework.context.support.MessageSourceSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.context.support.ResourceBundleMessageSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.DefaultParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.MethodParameter"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.ParameterNameDiscoverer"
    },
    {
      "type": "org.springframework.core.PrioritizedParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.ReactiveAdapterRegistry"
    },
    {
      "type": "org.springframework.core.ResolvableType"
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.MergedAnnotation"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.ConversionService"
    },
    {
      "type": "org.springframework.core.convert.TypeDescriptor"
    },
    {
      "type": "org.springframework.core.convert.converter.Converter"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterFactory"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterRegistry"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService$Converters",
      "fields": [
        {
          "name": "converters"
        }
      ]
    },
    {
      "type": "org.springframework.core.env.ConfigurableEnvironment"
    },
    {
      "type": "org.springframework.core.env.Environment"
    },
    {
      "type": "org.springframework.core.env.EnvironmentCapable"
    },
    {
      "type": "org.springframework.core.io.AbstractFileResolvingResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.AbstractResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.InputStreamResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.InputStreamSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.Resource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.ResourceLoader"
    },
    {
      "type": "org.springframework.core.io.UrlResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.support.ResourcePatternResolver"
    },
    {
      "type": "org.springframework.core.io.support.ResourceRegion"
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.AsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.SimpleAsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.TaskDecorator"
    },
    {
      "type": "org.springframework.core.task.TaskExecutor"
    },
    {
      "type": "org.springframework.core.type.AnnotationMetadata"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.DataAccessException"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.dao.support.PersistenceExceptionTranslator"
    },
    {
      "type": "org.springframework.data.annotation.Id"
    },
    {
      "type": "org.springframework.data.annotation.Persistent"
    },
    {
      "type": "org.springframework.data.annotation.TypeAlias"
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$ConverterRegistration"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$ConverterRegistrationIntent"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$StoreConversions"
    },
    {
      "type": "org.springframework.data.convert.EntityConverter"
    },
    {
      "type": "org.springframework.data.convert.EntityReader"
    },
    {
      "type": "org.springframework.data.convert.EntityWriter"
    },
    {
      "type": "org.springframework.data.convert.PropertyValueConversions"
    },
    {
      "type": "org.springframework.data.convert.ReadingConverter"
    },
    {
      "type": "org.springframework.data.convert.WritingConverter"
    },
    {
      "type": "org.springframework.data.domain.ManagedTypes"
    },
    {
      "type": "org.springframework.data.domain.OffsetScrollPosition"
    },
    {
      "type": "org.springframework.data.domain.Pageable"
    },
    {
      "type": "org.springframework.data.domain.Sort"
    },
    {
      "type": "org.springframework.data.domain.Unpaged"
    },
    {
      "type": "org.springframework.data.domain.Window"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.geo.GeoModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.geo.GeoResults"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.core.mapping.BasicLdapPersistentEntity"
    },
    {
      "type": "org.springframework.data.ldap.core.mapping.LdapMappingContext",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.ldap.core.mapping.LdapPersistentProperty"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.config.EnableLdapRepositories"
    },
    {
      "type": "org.springframework.data.ldap.repository.support.LdapRepositoryFactoryBean"
    },
    {
      "type": "org.springframework.data.mapping.Association"
    },
    {
      "type": "org.springframework.data.mapping.MappingException"
    },
    {
      "type": "org.springframework.data.mapping.PersistentEntity"
    },
    {
      "type": "org.springframework.data.mapping.PersistentProperty"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyAccessor"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPath"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPaths"
    },
    {
      "type": "org.springframework.data.mapping.PropertyPath"
    },
    {
      "type": "org.springframework.data.mapping.callback.EntityCallback"
    },
    {
      "type": "org.springframework.data.mapping.callback.EntityCallbacks"
    },
    {
      "type": "org.springframework.data.mapping.context.AbstractMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mapping.context.MappingContext"
    },
    {
      "type": "org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$ObjectInstantiator"
    },
    {
      "type": "org.springframework.data.mapping.model.EntityInstantiators"
    },
    {
      "type": "org.springframework.data.mapping.model.FieldNamingStrategy"
    },
    {
      "type": "org.springframework.data.mapping.model.MutablePersistentEntity"
    },
    {
      "type": "org.springframework.data.mapping.model.ParameterValueProvider"
    },
    {
      "type": "org.springframework.data.mapping.model.Property"
    },
    {
      "type": "org.springframework.data.mapping.model.SimpleTypeHolder"
    },
    {
      "type": "org.springframework.data.mapping.model.ValueExpressionEvaluator"
    },
    {
      "type": "org.springframework.data.mongodb.CodecRegistryProvider"
    },
    {
      "type": "org.springframework.data.mongodb.MongoDatabaseFactory"
    },
    {
      "type": "org.springframework.data.mongodb.MongoManagedTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.MongoSessionProvider"
    },
    {
      "type": "org.springframework.data.mongodb.SessionSynchronization"
    },
    {
      "type": "org.springframework.data.mongodb.config.AbstractMongoClientConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "mappingMongoConverter",
          "parameterTypes": [
            "org.springframework.data.mongodb.MongoDatabaseFactory",
            "org.springframework.data.mongodb.core.convert.MongoCustomConversions",
            "org.springframework.data.mongodb.core.mapping.MongoMappingContext"
          ]
        },
        {
          "name": "mongoDbFactory",
          "parameterTypes": []
        },
        {
          "name": "mongoTemplate",
          "parameterTypes": [
            "org.springframework.data.mongodb.MongoDatabaseFactory",
            "org.springframework.data.mongodb.core.convert.MappingMongoConverter"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.config.AbstractMongoClientConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.config.GeoJsonConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "geoJsonModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.config.MongoConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "customConversions",
          "parameterTypes": []
        },
        {
          "name": "mongoManagedTypes",
          "parameterTypes": []
        },
        {
          "name": "mongoMappingContext",
          "parameterTypes": [
            "org.springframework.data.mongodb.core.convert.MongoCustomConversions",
            "org.springframework.data.mongodb.MongoManagedTypes"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.config.MongoConfigurationSupport$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.core.BulkOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.BulkOperations$BulkMode"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionOptions$CollectionChangeStreamOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionOptions$TimeSeriesOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionOptions$ValidationOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionPreparer"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionPreparerSupport$CollectionPreparerDelegate"
    },
    {
      "type": "org.springframework.data.mongodb.core.CursorPreparer"
    },
    {
      "type": "org.springframework.data.mongodb.core.DbCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.DocumentCallbackHandler"
    },
    {
      "type": "org.springframework.data.mongodb.core.EntityOperations$AdaptibleEntity"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableAggregationOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableAggregationOperation$ExecutableAggregation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableFindOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableFindOperation$ExecutableFind"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableInsertOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableInsertOperation$ExecutableInsert"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableMapReduceOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableMapReduceOperation$ExecutableMapReduce"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableRemoveOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableRemoveOperation$ExecutableRemove"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableUpdateOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ExecutableUpdateOperation$ExecutableUpdate"
    },
    {
      "type": "org.springframework.data.mongodb.core.FindAndModifyOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.FindAndReplaceOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.FluentMongoOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.MappedDocument"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoAction"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoDatabaseFactorySupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate$DocumentCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.QueryOperations$AggregationDefinition"
    },
    {
      "type": "org.springframework.data.mongodb.core.QueryOperations$DistinctQueryContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.QueryOperations$UpdateContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReadPreferenceAware"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReplaceOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.ScriptOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.SessionScoped"
    },
    {
      "type": "org.springframework.data.mongodb.core.SimpleMongoClientDatabaseFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ViewOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.WriteConcernResolver"
    },
    {
      "type": "org.springframework.data.mongodb.core.WriteResultChecking"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.Aggregation"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationOperationContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationPipeline"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationResults"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.TypedAggregation"
    },
    {
      "type": "org.springframework.data.mongodb.core.annotation.Collation"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.AbstractMongoConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DbRefProxyHandler"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DbRefResolver"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DbRefResolverCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DefaultDbRefResolver"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DocumentAccessor"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MappingMongoConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoConverter"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoCustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoCustomConversions$MongoConverterConfigurationAdapter"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoTypeMapper"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoWriter"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.ObjectPath"
    },
    {
      "type": "org.springframework.data.mongodb.core.geo.GeoJsonModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.index.CompoundIndex"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.CompoundIndexes"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.IndexOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.IndexOperationsProvider"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.Indexed"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.SearchIndexOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.SearchIndexOperationsProvider"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.BasicMongoPersistentEntity"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.Document"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.DocumentPointer"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.MongoMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.MongoPersistentEntity"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.MongoPersistentProperty"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.event.AfterConvertCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.event.AfterSaveCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.event.BeforeConvertCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.event.BeforeSaveCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.event.MongoMappingEvent"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapreduce.MapReduceOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapreduce.MapReduceResults"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.Collation"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.Criteria"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.NearQuery"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.Query"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.Update"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.UpdateDefinition"
    },
    {
      "type": "org.springframework.data.mongodb.core.validation.Validator"
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.GridFsObject"
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.GridFsOperations"
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.GridFsOperationsSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.GridFsResource"
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.GridFsTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.repository.MongoRepository"
    },
    {
      "type": "org.springframework.data.mongodb.repository.aot.AotMongoRepositoryPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.repository.config.EnableMongoRepositories"
    },
    {
      "type": "org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension"
    },
    {
      "type": "org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean"
    },
    {
      "type": "org.springframework.data.projection.EntityProjection"
    },
    {
      "type": "org.springframework.data.projection.ProjectionFactory"
    },
    {
      "type": "org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.repository.config.AotRepositoryContext"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryConfiguration"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryConfigurationSource"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryRegistrationAotContribution"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setConfigMap",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.rest.core.config.RepositoryRestConfiguration"
    },
    {
      "type": "org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.util.CustomCollections$EclipseCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections$VavrCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections.EclipseCollections"
    },
    {
      "type": "org.springframework.data.util.CustomCollections.VavrCollections"
    },
    {
      "type": "org.springframework.data.util.KotlinBeanInfoFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.TypeInformation"
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PageableArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.PageableDefault"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.PagedModel"
    },
    {
      "type": "org.springframework.data.web.SortArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.SortDefault"
    },
    {
      "type": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.SortHandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport"
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$PageSerializationMode"
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebSettingsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.OffsetScrollPositionHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "projectingArgumentResolverBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonGeoModule",
          "parameterTypes": []
        },
        {
          "name": "pageModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonModules"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataWebConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectFactory"
          ]
        },
        {
          "name": "offsetResolver",
          "parameterTypes": []
        },
        {
          "name": "pageableResolver",
          "parameterTypes": []
        },
        {
          "name": "sortResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.SpringDataWebSettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.expression.EvaluationContext"
    },
    {
      "type": "org.springframework.format.AnnotationFormatterFactory"
    },
    {
      "type": "org.springframework.format.Formatter"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.Parser"
    },
    {
      "type": "org.springframework.format.Printer"
    },
    {
      "type": "org.springframework.format.annotation.DateTimeFormat"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.hateoas.Link"
    },
    {
      "type": "org.springframework.hateoas.server.LinkRelationProvider"
    },
    {
      "type": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.CacheControl"
    },
    {
      "type": "org.springframework.http.ContentDisposition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.ContentDisposition$Builder"
    },
    {
      "type": "org.springframework.http.ContentDisposition$BuilderImpl"
    },
    {
      "type": "org.springframework.http.DefaultHttpStatusCode",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpEntity",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpHeaders",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpHeaders$CaseInsensitiveEntrySet"
    },
    {
      "type": "org.springframework.http.HttpInputMessage"
    },
    {
      "type": "org.springframework.http.HttpMethod",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpOutputMessage"
    },
    {
      "type": "org.springframework.http.HttpRange",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpRange$ByteRange"
    },
    {
      "type": "org.springframework.http.HttpRange$SuffixByteRange"
    },
    {
      "type": "org.springframework.http.HttpRequest"
    },
    {
      "type": "org.springframework.http.HttpStatus",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "ACCEPTED"
        },
        {
          "name": "ALREADY_REPORTED"
        },
        {
          "name": "BAD_GATEWAY"
        },
        {
          "name": "BAD_REQUEST"
        },
        {
          "name": "BANDWIDTH_LIMIT_EXCEEDED"
        },
        {
          "name": "CHECKPOINT"
        },
        {
          "name": "CONFLICT"
        },
        {
          "name": "CONTINUE"
        },
        {
          "name": "CREATED"
        },
        {
          "name": "DESTINATION_LOCKED"
        },
        {
          "name": "EARLY_HINTS"
        },
        {
          "name": "EXPECTATION_FAILED"
        },
        {
          "name": "FAILED_DEPENDENCY"
        },
        {
          "name": "FORBIDDEN"
        },
        {
          "name": "FOUND"
        },
        {
          "name": "GATEWAY_TIMEOUT"
        },
        {
          "name": "GONE"
        },
        {
          "name": "HTTP_VERSION_NOT_SUPPORTED"
        },
        {
          "name": "IM_USED"
        },
        {
          "name": "INSUFFICIENT_SPACE_ON_RESOURCE"
        },
        {
          "name": "INSUFFICIENT_STORAGE"
        },
        {
          "name": "INTERNAL_SERVER_ERROR"
        },
        {
          "name": "I_AM_A_TEAPOT"
        },
        {
          "name": "LENGTH_REQUIRED"
        },
        {
          "name": "LOCKED"
        },
        {
          "name": "LOOP_DETECTED"
        },
        {
          "name": "METHOD_FAILURE"
        },
        {
          "name": "METHOD_NOT_ALLOWED"
        },
        {
          "name": "MOVED_PERMANENTLY"
        },
        {
          "name": "MOVED_TEMPORARILY"
        },
        {
          "name": "MULTIPLE_CHOICES"
        },
        {
          "name": "MULTI_STATUS"
        },
        {
          "name": "NETWORK_AUTHENTICATION_REQUIRED"
        },
        {
          "name": "NON_AUTHORITATIVE_INFORMATION"
        },
        {
          "name": "NOT_ACCEPTABLE"
        },
        {
          "name": "NOT_EXTENDED"
        },
        {
          "name": "NOT_FOUND"
        },
        {
          "name": "NOT_IMPLEMENTED"
        },
        {
          "name": "NOT_MODIFIED"
        },
        {
          "name": "NO_CONTENT"
        },
        {
          "name": "OK"
        },
        {
          "name": "PARTIAL_CONTENT"
        },
        {
          "name": "PAYLOAD_TOO_LARGE"
        },
        {
          "name": "PAYMENT_REQUIRED"
        },
        {
          "name": "PERMANENT_REDIRECT"
        },
        {
          "name": "PRECONDITION_FAILED"
        },
        {
          "name": "PRECONDITION_REQUIRED"
        },
        {
          "name": "PROCESSING"
        },
        {
          "name": "PROXY_AUTHENTICATION_REQUIRED"
        },
        {
          "name": "REQUESTED_RANGE_NOT_SATISFIABLE"
        },
        {
          "name": "REQUEST_ENTITY_TOO_LARGE"
        },
        {
          "name": "REQUEST_HEADER_FIELDS_TOO_LARGE"
        },
        {
          "name": "REQUEST_TIMEOUT"
        },
        {
          "name": "REQUEST_URI_TOO_LONG"
        },
        {
          "name": "RESET_CONTENT"
        },
        {
          "name": "SEE_OTHER"
        },
        {
          "name": "SERVICE_UNAVAILABLE"
        },
        {
          "name": "SWITCHING_PROTOCOLS"
        },
        {
          "name": "TEMPORARY_REDIRECT"
        },
        {
          "name": "TOO_EARLY"
        },
        {
          "name": "TOO_MANY_REQUESTS"
        },
        {
          "name": "UNAUTHORIZED"
        },
        {
          "name": "UNAVAILABLE_FOR_LEGAL_REASONS"
        },
        {
          "name": "UNPROCESSABLE_ENTITY"
        },
        {
          "name": "UNSUPPORTED_MEDIA_TYPE"
        },
        {
          "name": "UPGRADE_REQUIRED"
        },
        {
          "name": "URI_TOO_LONG"
        },
        {
          "name": "USE_PROXY"
        },
        {
          "name": "VARIANT_ALSO_NEGOTIATES"
        }
      ]
    },
    {
      "type": "org.springframework.http.HttpStatus$Series"
    },
    {
      "type": "org.springframework.http.HttpStatusCode",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.MediaType",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.ProblemDetail",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getDetail",
          "parameterTypes": []
        },
        {
          "name": "getInstance",
          "parameterTypes": []
        },
        {
          "name": "getProperties",
          "parameterTypes": []
        },
        {
          "name": "getStatus",
          "parameterTypes": []
        },
        {
          "name": "getTitle",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.ResponseEntity",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.ResponseEntity$BodyBuilder"
    },
    {
      "type": "org.springframework.http.ResponseEntity$DefaultBuilder"
    },
    {
      "type": "org.springframework.http.ResponseEntity$HeadersBuilder"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.JdkClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector"
    },
    {
      "type": "org.springframework.http.client.reactive.JdkClientHttpConnector"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.AbstractHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.FormHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.GenericHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageNotReadableException"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageNotWritableException"
    },
    {
      "type": "org.springframework.http.converter.StringHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.GsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.ProblemDetailJacksonXmlMixin",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.PathContainer"
    },
    {
      "type": "org.springframework.http.server.PathContainer$Options"
    },
    {
      "type": "org.springframework.http.server.RequestPath"
    },
    {
      "type": "org.springframework.http.server.ServerHttpResponse"
    },
    {
      "type": "org.springframework.http.server.observation.ServerRequestObservationContext"
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.lang.Nullable"
    },
    {
      "type": "org.springframework.ldap.core.AttributesMapper"
    },
    {
      "type": "org.springframework.ldap.core.AuthenticatedLdapEntryContextCallback"
    },
    {
      "type": "org.springframework.ldap.core.AuthenticatedLdapEntryContextMapper"
    },
    {
      "type": "org.springframework.ldap.core.AuthenticationErrorCallback"
    },
    {
      "type": "org.springframework.ldap.core.AuthenticationSource"
    },
    {
      "type": "org.springframework.ldap.core.ContextExecutor"
    },
    {
      "type": "org.springframework.ldap.core.ContextMapper"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.ldap.core.DirContextOperations"
    },
    {
      "type": "org.springframework.ldap.core.DirContextProcessor"
    },
    {
      "type": "org.springframework.ldap.core.DistinguishedName"
    },
    {
      "type": "org.springframework.ldap.core.LdapOperations"
    },
    {
      "type": "org.springframework.ldap.core.LdapTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ldap.core.LdapTemplate$AuthenticationStatus"
    },
    {
      "type": "org.springframework.ldap.core.LdapTemplate$CheckedSupplier"
    },
    {
      "type": "org.springframework.ldap.core.NameClassPairCallbackHandler"
    },
    {
      "type": "org.springframework.ldap.core.NameClassPairMapper"
    },
    {
      "type": "org.springframework.ldap.core.SearchExecutor"
    },
    {
      "type": "org.springframework.ldap.core.support.AbstractContextSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ldap.core.support.BaseLdapPathContextSource"
    },
    {
      "type": "org.springframework.ldap.core.support.BaseLdapPathSource"
    },
    {
      "type": "org.springframework.ldap.core.support.DirContextAuthenticationStrategy"
    },
    {
      "type": "org.springframework.ldap.core.support.LdapContextSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ldap.filter.Filter"
    },
    {
      "type": "org.springframework.ldap.odm.core.ObjectDirectoryMapper"
    },
    {
      "type": "org.springframework.ldap.odm.core.impl.AttributeMetaData"
    },
    {
      "type": "org.springframework.ldap.odm.core.impl.DefaultObjectDirectoryMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ldap.odm.core.impl.DefaultObjectDirectoryMapper$EntityData"
    },
    {
      "type": "org.springframework.ldap.odm.typeconversion.ConverterManager"
    },
    {
      "type": "org.springframework.ldap.query.LdapQuery"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.TaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.Trigger"
    },
    {
      "type": "org.springframework.scheduling.annotation.AsyncConfigurer"
    },
    {
      "type": "org.springframework.scheduling.annotation.EnableScheduling"
    },
    {
      "type": "org.springframework.scheduling.annotation.Scheduled"
    },
    {
      "type": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.annotation.Schedules"
    },
    {
      "type": "org.springframework.scheduling.annotation.SchedulingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "scheduledAnnotationProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.config.ScheduledTaskHolder"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.HexEncodingTextEncryptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.crypto.encrypt.TextEncryptor"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistration"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.web.SecurityFilterChain"
    },
    {
      "type": "org.springframework.security.web.server.csrf.CsrfToken"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.stereotype.Repository"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.transaction.ConfigurableTransactionManager"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.transaction.ReactiveTransactionManager"
    },
    {
      "type": "org.springframework.transaction.TransactionManager"
    },
    {
      "type": "org.springframework.transaction.annotation.EnableTransactionManagement"
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.aspectj.AbstractTransactionAspect"
    },
    {
      "type": "org.springframework.transaction.reactive.TransactionalOperator"
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager"
    },
    {
      "type": "org.springframework.ui.Model"
    },
    {
      "type": "org.springframework.ui.context.ThemeSource"
    },
    {
      "type": "org.springframework.util.AntPathMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.AntPathMatcher$AntPathStringMatcher"
    },
    {
      "type": "org.springframework.util.Assert"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.ErrorHandler"
    },
    {
      "type": "org.springframework.util.MimeType",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.MultiValueMap",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.PathMatcher"
    },
    {
      "type": "org.springframework.util.StringValueResolver"
    },
    {
      "type": "org.springframework.util.concurrent.ListenableFuture"
    },
    {
      "type": "org.springframework.util.concurrent.ListenableFutureTask"
    },
    {
      "type": "org.springframework.util.unit.DataSize"
    },
    {
      "type": "org.springframework.util.unit.DataSizeEditor"
    },
    {
      "type": "org.springframework.validation.BindException"
    },
    {
      "type": "org.springframework.validation.BindingResult"
    },
    {
      "type": "org.springframework.validation.DefaultMessageCodesResolver$Format"
    },
    {
      "type": "org.springframework.validation.Errors"
    },
    {
      "type": "org.springframework.validation.MessageCodesResolver"
    },
    {
      "type": "org.springframework.validation.SmartValidator"
    },
    {
      "type": "org.springframework.validation.Validator"
    },
    {
      "type": "org.springframework.validation.annotation.Validated"
    },
    {
      "type": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.method.MethodValidationResult"
    },
    {
      "type": "org.springframework.web.ErrorResponse",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.ErrorResponse$Builder"
    },
    {
      "type": "org.springframework.web.ErrorResponse$Interceptor"
    },
    {
      "type": "org.springframework.web.HttpMediaTypeNotAcceptableException"
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationStrategy"
    },
    {
      "type": "org.springframework.web.accept.MediaTypeFileExtensionResolver"
    },
    {
      "type": "org.springframework.web.bind.MethodArgumentNotValidException"
    },
    {
      "type": "org.springframework.web.bind.MissingServletRequestParameterException"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.annotation.CrossOrigin"
    },
    {
      "type": "org.springframework.web.bind.annotation.DeleteMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.ModelAttribute"
    },
    {
      "type": "org.springframework.web.bind.annotation.PathVariable"
    },
    {
      "type": "org.springframework.web.bind.annotation.PostMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.PutMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMethod"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestParam"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.SessionAttributeStore"
    },
    {
      "type": "org.springframework.web.bind.support.WebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.WebDataBinderFactory"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestClientException"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.ServletContextAware"
    },
    {
      "type": "org.springframework.web.context.WebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.request.NativeWebRequest"
    },
    {
      "type": "org.springframework.web.context.request.RequestAttributes"
    },
    {
      "type": "org.springframework.web.context.request.RequestContextListener"
    },
    {
      "type": "org.springframework.web.context.request.ServletRequestAttributes"
    },
    {
      "type": "org.springframework.web.context.request.WebRequest"
    },
    {
      "type": "org.springframework.web.context.request.async.WebAsyncManager"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.ServletContextResource"
    },
    {
      "type": "org.springframework.web.context.support.WebApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.cors.CorsConfiguration"
    },
    {
      "type": "org.springframework.web.cors.CorsConfigurationSource"
    },
    {
      "type": "org.springframework.web.cors.CorsProcessor"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.FormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.GenericFilterBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.OncePerRequestFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.RequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.ControllerAdviceBean"
    },
    {
      "type": "org.springframework.web.method.HandlerMethod"
    },
    {
      "type": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver"
    },
    {
      "type": "org.springframework.web.method.annotation.InitBinderDataBinderFactory"
    },
    {
      "type": "org.springframework.web.method.annotation.ModelFactory"
    },
    {
      "type": "org.springframework.web.method.annotation.SessionAttributesHandler"
    },
    {
      "type": "org.springframework.web.method.support.CompositeUriComponentsContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.support.HandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.web.method.support.InvocableHandlerMethod"
    },
    {
      "type": "org.springframework.web.method.support.ModelAndViewContainer"
    },
    {
      "type": "org.springframework.web.method.support.UriComponentsContributor"
    },
    {
      "type": "org.springframework.web.multipart.MultipartException"
    },
    {
      "type": "org.springframework.web.multipart.MultipartFile",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.multipart.MultipartHttpServletRequest"
    },
    {
      "type": "org.springframework.web.multipart.MultipartResolver"
    },
    {
      "type": "org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile"
    },
    {
      "type": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClientException"
    },
    {
      "type": "org.springframework.web.reactive.result.view.RequestContext"
    },
    {
      "type": "org.springframework.web.reactive.result.view.View"
    },
    {
      "type": "org.springframework.web.server.session.WebSessionManager"
    },
    {
      "type": "org.springframework.web.service.annotation.HttpExchange"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.FlashMap"
    },
    {
      "type": "org.springframework.web.servlet.FlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.FrameworkServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExecutionChain"
    },
    {
      "type": "org.springframework.web.servlet.HandlerInterceptor"
    },
    {
      "type": "org.springframework.web.servlet.HandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.HttpServletBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.LocaleContextResolver"
    },
    {
      "type": "org.springframework.web.servlet.LocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.ModelAndView"
    },
    {
      "type": "org.springframework.web.servlet.RequestToViewNameTranslator"
    },
    {
      "type": "org.springframework.web.servlet.ThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.View",
      "fields": [
        {
          "name": "PATH_VARIABLES"
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.ViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.CorsRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.InterceptorRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceChainRegistration"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "beanNameHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "defaultServletHandlerMapping",
          "parameterTypes": []
        },
        {
          "name": "handlerExceptionResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "httpRequestHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "mvcPathMatcher",
          "parameterTypes": []
        },
        {
          "name": "mvcPatternParser",
          "parameterTypes": []
        },
        {
          "name": "mvcResourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "mvcUriComponentsContributor",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          ]
        },
        {
          "name": "mvcUrlPathHelper",
          "parameterTypes": []
        },
        {
          "name": "mvcViewResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "simpleControllerHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewControllerHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.function.HandlerFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.RouterFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.ServerRequest"
    },
    {
      "type": "org.springframework.web.servlet.function.ServerResponse"
    },
    {
      "type": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"
    },
    {
      "type": "org.springframework.web.servlet.handler.MappedInterceptor"
    },
    {
      "type": "org.springframework.web.servlet.handler.MatchableHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.RequestMatchResult"
    },
    {
      "type": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AbstractLocaleContextResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.CookieLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.LocaleChangeInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.condition.RequestCondition"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfo"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfo$BuilderConfiguration"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$DataWithMediaType"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$DefaultCallback"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$ErrorCallback"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$Handler"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.SseEmitter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.SseEmitter$SseEventBuilder"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.SseEmitter$SseEventBuilderImpl"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.AbstractResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.LiteWebJarsResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolver"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolverChain"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformer"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformerChain"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.AbstractFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.RequestContext"
    },
    {
      "type": "org.springframework.web.servlet.support.SessionFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.WebContentGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.AbstractThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.FixedThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractUrlBasedView"
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractView"
    },
    {
      "type": "org.springframework.web.servlet.view.BeanNameViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.InternalResourceView"
    },
    {
      "type": "org.springframework.web.servlet.view.InternalResourceViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.UrlBasedViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ViewResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.web.util.UriComponentsBuilder"
    },
    {
      "type": "org.springframework.web.util.UrlPathHelper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PathPattern"
    },
    {
      "type": "org.springframework.web.util.pattern.PathPatternParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PatternParseException"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.thymeleaf.IEngineConfiguration"
    },
    {
      "type": "org.thymeleaf.ITemplateEngine"
    },
    {
      "type": "org.thymeleaf.IThrottledTemplateProcessor"
    },
    {
      "type": "org.thymeleaf.TemplateEngine",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.TemplateSpec"
    },
    {
      "type": "org.thymeleaf.cache.ICacheEntryValidity"
    },
    {
      "type": "org.thymeleaf.cache.ICacheManager"
    },
    {
      "type": "org.thymeleaf.context.IContext"
    },
    {
      "type": "org.thymeleaf.context.IEngineContextFactory"
    },
    {
      "type": "org.thymeleaf.dialect.IDialect"
    },
    {
      "type": "org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect"
    },
    {
      "type": "org.thymeleaf.linkbuilder.ILinkBuilder"
    },
    {
      "type": "org.thymeleaf.messageresolver.IMessageResolver"
    },
    {
      "type": "org.thymeleaf.spring5.context.IThymeleafRequestContext"
    },
    {
      "type": "org.thymeleaf.spring5.expression.IThymeleafEvaluationContext"
    },
    {
      "type": "org.thymeleaf.spring6.ISpringTemplateEngine"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.spring6.context.IThymeleafRequestContext"
    },
    {
      "type": "org.thymeleaf.spring6.expression.IThymeleafEvaluationContext"
    },
    {
      "type": "org.thymeleaf.spring6.expression.Mvc$Spring41MvcUriComponentsBuilderDelegate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.spring6.view.AbstractThymeleafView",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.spring6.view.ThymeleafView",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.thymeleaf.spring6.view.ThymeleafViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.standard.expression.AdditionExpression",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.thymeleaf.standard.expression.IStandardExpression",
            "org.thymeleaf.standard.expression.IStandardExpression"
          ]
        }
      ]
    },
    {
      "type": "org.thymeleaf.standard.expression.AdditionSubtractionExpression",
      "methods": [
        {
          "name": "isLeftAllowed",
          "parameterTypes": [
            "org.thymeleaf.standard.expression.IStandardExpression"
          ]
        },
        {
          "name": "isRightAllowed",
          "parameterTypes": [
            "org.thymeleaf.standard.expression.IStandardExpression"
          ]
        }
      ]
    },
    {
      "type": "org.thymeleaf.standard.expression.AndExpression"
    },
    {
      "type": "org.thymeleaf.standard.expression.EqualsNotEqualsExpression"
    },
    {
      "type": "org.thymeleaf.standard.expression.GreaterLesserExpression"
    },
    {
      "type": "org.thymeleaf.standard.expression.IStandardConversionService"
    },
    {
      "type": "org.thymeleaf.standard.expression.IStandardExpressionParser"
    },
    {
      "type": "org.thymeleaf.standard.expression.IStandardVariableExpressionEvaluator"
    },
    {
      "type": "org.thymeleaf.standard.expression.MultiplicationDivisionRemainderExpression",
      "methods": [
        {
          "name": "isLeftAllowed",
          "parameterTypes": [
            "org.thymeleaf.standard.expression.IStandardExpression"
          ]
        }
      ]
    },
    {
      "type": "org.thymeleaf.standard.expression.OrExpression"
    },
    {
      "type": "org.thymeleaf.templatemode.TemplateMode"
    },
    {
      "type": "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver"
    },
    {
      "type": "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.templateresolver.AbstractTemplateResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.thymeleaf.templateresolver.ITemplateResolver"
    },
    {
      "type": "org.thymeleaf.templateresolver.TemplateResolution"
    },
    {
      "type": "org.thymeleaf.templateresource.ITemplateResource"
    },
    {
      "type": "org.thymeleaf.util.PatternSpec"
    },
    {
      "type": "org.w3c.dom.NodeList"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.webjars.WebJarVersionLocator"
    },
    {
      "type": "org.xmlbeam.XBProjector"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "scala.Option"
    },
    {
      "type": "schemaorg_apache_xmlbeans.system.sXMLCONFIG.TypeSystemHolder"
    },
    {
      "type": "schemaorg_apache_xmlbeans.system.sXMLLANG.TypeSystemHolder"
    },
    {
      "type": "schemaorg_apache_xmlbeans.system.sXMLSCHEMA.TypeSystemHolder"
    },
    {
      "type": "schemaorg_apache_xmlbeans.system.sXMLTOOLS.TypeSystemHolder"
    },
    {
      "type": "sun.misc.Unsafe",
      "allDeclaredFields": true
    },
    {
      "type": "sun.reflect.ReflectionFactory",
      "methods": [
        {
          "name": "getReflectionFactory",
          "parameterTypes": []
        },
        {
          "name": "newConstructorForSerialization",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.reflect.Constructor"
          ]
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.util.locale.BaseLocale"
    },
    {
      "type": "sun.util.locale.LocaleExtensions"
    },
    {
      "type": "sun.util.locale.provider.LocaleResources"
    },
    {
      "type": {
        "proxy": [
          "io.methvin.watchservice.jna.CarbonAPI"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.GenericArrayType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "kotlin.internal.IntrinsicConstEvaluation"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.context.event.EventListener"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.mongodb.core.index.CompoundIndex"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.mongodb.core.index.CompoundIndexes"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.mongodb.core.index.Indexed"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.mongodb.core.mapping.Document"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.stereotype.Controller"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.validation.annotation.Validated"
        ]
      },
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ControllerAdvice"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.DeleteMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ExceptionHandler"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.GetMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ModelAttribute"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.PathVariable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.PostMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.PutMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestParam"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ResponseStatus"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RestController"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "META-INF/MANIFEST.MF"
    },
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/log4j-provider.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars.npm/articles/pom.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars.npm/blog/pom.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars.npm/office/pom.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars.npm/swagger-ui/pom.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars/articles/pom.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars/blog/pom.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars/office/pom.properties"
    },
    {
      "glob": "META-INF/maven/org.webjars/swagger-ui/pom.properties"
    },
    {
      "glob": "META-INF/resources/articles/api/public/s/view/thumbnail"
    },
    {
      "glob": "META-INF/resources/articles/css/dark/index-2.15.0.css"
    },
    {
      "glob": "META-INF/resources/articles/css/light/index-2.15.0.css"
    },
    {
      "glob": "META-INF/resources/articles/favicon.ico"
    },
    {
      "glob": "META-INF/resources/articles/font-awesome/free-6.4.2/css/all.min.css"
    },
    {
      "glob": "META-INF/resources/articles/font-awesome/free-6.4.2/webfonts/fa-solid-900.woff2"
    },
    {
      "glob": "META-INF/resources/articles/js/font_2024484_qwtkvngfp5b.js"
    },
    {
      "glob": "META-INF/resources/articles/js/jquery-3.5.1.min.js"
    },
    {
      "glob": "META-INF/resources/articles/js/jquery.pjax.js"
    },
    {
      "glob": "META-INF/resources/articles/layui/css/layui.css"
    },
    {
      "glob": "META-INF/resources/articles/vditor@3.11.1/dist/css/content-theme/custom-dark.css"
    },
    {
      "glob": "META-INF/resources/articles/vditor@3.11.1/dist/css/content-theme/custom-light.css"
    },
    {
      "glob": "META-INF/resources/articles/vditor@3.11.1/dist/index.css"
    },
    {
      "glob": "META-INF/resources/articles/vditor@3.11.1/dist/index.min.js"
    },
    {
      "glob": "META-INF/resources/articles/vditor@3.11.1/dist/js/highlight.js/styles/androidstudio.min.css"
    },
    {
      "glob": "META-INF/resources/articles/vditor@3.11.1/dist/js/highlight.js/styles/github.min.css"
    },
    {
      "glob": "META-INF/resources/articles/viewerjs/viewer.min.css"
    },
    {
      "glob": "META-INF/resources/articles/viewerjs/viewer.min.js"
    },
    {
      "glob": "META-INF/resources/blog/api/public/s/view/thumbnail"
    },
    {
      "glob": "META-INF/resources/favicon.ico"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/resources/null"
    },
    {
      "glob": "META-INF/resources/office/web-apps/apps/api/documents/api.js"
    },
    {
      "glob": "META-INF/resources/webjars-locator.properties"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0/favicon-32x32.png"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0/index.css"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0/index.html"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0/swagger-initializer.js"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0/swagger-ui-bundle.js"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0/swagger-ui-standalone-preset.js"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/5.21.0/swagger-ui.css"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/favicon-32x32.png"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/index.css"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/index.html"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/swagger-initializer.js"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/swagger-ui-bundle.js"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/swagger-ui-standalone-preset.js"
    },
    {
      "glob": "META-INF/resources/webjars/swagger-ui/swagger-ui.css"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/cn.hutool.core.convert.Converter"
    },
    {
      "glob": "META-INF/services/com.mongodb.spi.dns.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "glob": "META-INF/services/jakarta.el.ExpressionFactory"
    },
    {
      "glob": "META-INF/services/jakarta.validation.ConstraintValidator"
    },
    {
      "glob": "META-INF/services/jakarta.validation.spi.ValidationProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.valueextraction.ValueExtractor"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.sql.Driver"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.DocumentBuilderFactory"
    },
    {
      "glob": "META-INF/services/javax.xml.parsers.SAXParserFactory"
    },
    {
      "glob": "META-INF/services/javax.xml.stream.XMLInputFactory"
    },
    {
      "glob": "META-INF/services/javax.xml.stream.XMLOutputFactory"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition"
    },
    {
      "glob": "META-INF/services/kotlin.reflect.jvm.internal.impl.util.ModuleVisibilityHelper"
    },
    {
      "glob": "META-INF/services/org.apache.juli.logging.Log"
    },
    {
      "glob": "META-INF/services/org.apache.logging.log4j.spi.Provider"
    },
    {
      "glob": "META-INF/services/org.apache.logging.log4j.util.PropertySource"
    },
    {
      "glob": "META-INF/services/org.apache.lucene.codecs.Codec"
    },
    {
      "glob": "META-INF/services/org.apache.lucene.codecs.DocValuesFormat"
    },
    {
      "glob": "META-INF/services/org.apache.lucene.codecs.PostingsFormat"
    },
    {
      "glob": "META-INF/services/org.apache.tika.detect.Detector"
    },
    {
      "glob": "META-INF/services/org.apache.tika.detect.EncodingDetector"
    },
    {
      "glob": "META-INF/services/org.apache.tika.parser.Parser"
    },
    {
      "glob": "META-INF/services/org.apache.tika.renderer.Renderer"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.replacements"
    },
    {
      "glob": "META-INF/validation.xml"
    },
    {
      "glob": "application-dev.properties"
    },
    {
      "glob": "application-dev.xml"
    },
    {
      "glob": "application-dev.yaml"
    },
    {
      "glob": "application-dev.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "cn/hutool/extra/spring/SpringUtil.class"
    },
    {
      "glob": "com/jmal/clouddisk"
    },
    {
      "glob": "com/jmal/clouddisk/acpect/LogOperatingAspect.class"
    },
    {
      "glob": "com/jmal/clouddisk/acpect/PermissionAspect.class"
    },
    {
      "glob": "com/jmal/clouddisk/annotation/AnnoManageUtil.class"
    },
    {
      "glob": "com/jmal/clouddisk/annotation/LogOperatingFun.class"
    },
    {
      "glob": "com/jmal/clouddisk/annotation/Permission.class"
    },
    {
      "glob": "com/jmal/clouddisk/config"
    },
    {
      "glob": "com/jmal/clouddisk/config/EncryptionConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/EncryptionKeyProvider.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/ErrorConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/FileProperties.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/GlobalCorsConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/JacksonConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/MongoClientConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/MyTomcatServletWebServerFactoryCustomizer.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/Reflective.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/TotpConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/WebConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/config/WebFilter.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/ArticlesController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/FileViewController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/AuthController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/CategoryController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/CloudSettingController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/DirectLinkController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/FileController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/FileVersionController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/HealthCheckController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/LogController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/LuceneSearchController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/MarkDownController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/MenuController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/MfaController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/OcrController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/RoleController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/ShareController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/TagController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/UserController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/UserSettingController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/VideoController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/rest/WebsiteSettingController.class"
    },
    {
      "glob": "com/jmal/clouddisk/controller/sse/SseController.class"
    },
    {
      "glob": "com/jmal/clouddisk/exception/CommonExceptionHandler.class"
    },
    {
      "glob": "com/jmal/clouddisk/ftp/FTPServerConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/ftp/MyPropertiesUserManager.class"
    },
    {
      "glob": "com/jmal/clouddisk/interceptor/AuthInterceptor.class"
    },
    {
      "glob": "com/jmal/clouddisk/interceptor/DirectFileInterceptor.class"
    },
    {
      "glob": "com/jmal/clouddisk/interceptor/FileInterceptor.class"
    },
    {
      "glob": "com/jmal/clouddisk/interceptor/PreFileInterceptor.class"
    },
    {
      "glob": "com/jmal/clouddisk/interceptor/ShareFileInterceptor.class"
    },
    {
      "glob": "com/jmal/clouddisk/listener/FileListener.class"
    },
    {
      "glob": "com/jmal/clouddisk/listener/FileMonitor.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/CoverFileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/EtagService.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/LuceneConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/LuceneService.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/PopplerPdfReader.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/ReadContentService.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/RebuildIndexTaskService$FileCountVisitor.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/RebuildIndexTaskService$SyncFileVisitor.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/RebuildIndexTaskService.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/SearchFileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/lucene/TaskProgressService.class"
    },
    {
      "glob": "com/jmal/clouddisk/media/ImageMagickProcessor.class"
    },
    {
      "glob": "com/jmal/clouddisk/media/VideoProcessService.class"
    },
    {
      "glob": "com/jmal/clouddisk/model"
    },
    {
      "glob": "com/jmal/clouddisk/model/FileBase.class"
    },
    {
      "glob": "com/jmal/clouddisk/model/MarkdownBaseFile.class"
    },
    {
      "glob": "com/jmal/clouddisk/model/query/QueryBaseDTO.class"
    },
    {
      "glob": "com/jmal/clouddisk/model/rbac/ConsumerBase.class"
    },
    {
      "glob": "com/jmal/clouddisk/ocr/CommonOcrService.class"
    },
    {
      "glob": "com/jmal/clouddisk/ocr/IOcrService.class"
    },
    {
      "glob": "com/jmal/clouddisk/ocr/OcrLiteOnnxService.class"
    },
    {
      "glob": "com/jmal/clouddisk/ocr/OcrService.class"
    },
    {
      "glob": "com/jmal/clouddisk/ocr/TesseractOcrConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/ocr/TesseractService.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/OfficeConfigService.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/OfficeController.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/callbacks/Callback.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/callbacks/CallbackHandler.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/callbacks/implementations/EditCallback.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/callbacks/implementations/EditNothingCallback.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/callbacks/implementations/ForceSaveCallback.class"
    },
    {
      "glob": "com/jmal/clouddisk/office/callbacks/implementations/SaveCallback.class"
    },
    {
      "glob": "com/jmal/clouddisk/oss/AbstractOssObject.class"
    },
    {
      "glob": "com/jmal/clouddisk/oss/IOssService.class"
    },
    {
      "glob": "com/jmal/clouddisk/oss/OssConfigService.class"
    },
    {
      "glob": "com/jmal/clouddisk/oss/web/OssController.class"
    },
    {
      "glob": "com/jmal/clouddisk/oss/web/WebOssCommonService.class"
    },
    {
      "glob": "com/jmal/clouddisk/oss/web/WebOssCopyFileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/oss/web/WebOssService.class"
    },
    {
      "glob": "com/jmal/clouddisk/repository/IAuthDAO.class"
    },
    {
      "glob": "com/jmal/clouddisk/repository/impl/AuthDAOImpl.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/IAuthService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/IFileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/IFileVersionService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/IMarkdownService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/IShareService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/IUserService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/AuthServiceImpl.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/CategoryService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/CommonFileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/CommonUserFileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/CommonUserService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/DirectLinkService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/FileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/FileServiceImpl.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/FileVersionServiceImpl.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/LogService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/MarkdownServiceImpl.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/MenuService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/MessageService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/MultipartUpload.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/PathService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/RoleService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/SettingService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/ShareServiceImpl.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/TagService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/TotpService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/UserFileService.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/UserLoginHolder.class"
    },
    {
      "glob": "com/jmal/clouddisk/service/impl/UserServiceImpl.class"
    },
    {
      "glob": "com/jmal/clouddisk/swagger/OpenApiConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/util/CaffeineUtil.class"
    },
    {
      "glob": "com/jmal/clouddisk/util/MessageUtil.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/BasicAuthenticator$BasicCredentials.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/BasicAuthenticator.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/MyRealm.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/MyTomcatContextCustomizer.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/MyWebdavServlet.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/WebdavAuthenticator.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/WebdavConfig.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/WebdavServlet$LockInfo.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/WebdavServlet$WebdavResolver.class"
    },
    {
      "glob": "com/jmal/clouddisk/webdav/WebdavServlet.class"
    },
    {
      "glob": "com/sun/jna/darwin-aarch64/libjnidispatch.jnilib"
    },
    {
      "glob": "config/application-dev.properties"
    },
    {
      "glob": "config/application-dev.xml"
    },
    {
      "glob": "config/application-dev.yaml"
    },
    {
      "glob": "config/application-dev.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "fastjson2.properties"
    },
    {
      "glob": "file.yml"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "i18n/messages.properties"
    },
    {
      "glob": "i18n/messages_en.properties"
    },
    {
      "glob": "i18n/messages_en_US.properties"
    },
    {
      "glob": "i18n/messages_zh.properties"
    },
    {
      "glob": "i18n/messages_zh_CN.properties"
    },
    {
      "glob": "i18n/messages_zh_Hans.properties"
    },
    {
      "glob": "i18n/messages_zh_Hans_CN.properties"
    },
    {
      "glob": "io/methvin/watcher/DirectoryChangeListener.class"
    },
    {
      "glob": "io/minio/MinioAsyncClient.class"
    },
    {
      "glob": "io/minio/S3Base.class"
    },
    {
      "glob": "io/swagger/v3/oas/annotations/Hidden.class"
    },
    {
      "glob": "io/swagger/v3/oas/annotations/tags/Tag.class"
    },
    {
      "glob": "jakarta/security/auth/message/config/RegistrationListener.class"
    },
    {
      "glob": "jakarta/servlet/Filter.class"
    },
    {
      "glob": "jakarta/servlet/GenericServlet.class"
    },
    {
      "glob": "jakarta/servlet/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_zh.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "jakarta/servlet/Servlet.class"
    },
    {
      "glob": "jakarta/servlet/ServletConfig.class"
    },
    {
      "glob": "jakarta/servlet/http/HttpServlet$NoBodyAsyncContextListener.class"
    },
    {
      "glob": "jakarta/servlet/http/HttpServlet$NoBodyOutputStream.class"
    },
    {
      "glob": "jakarta/servlet/http/HttpServlet$NoBodyPrintWriter.class"
    },
    {
      "glob": "jakarta/servlet/http/HttpServlet$NoBodyResponse.class"
    },
    {
      "glob": "jakarta/servlet/http/HttpServlet$TomcatHack.class"
    },
    {
      "glob": "jakarta/servlet/http/HttpServlet.class"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_zh.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "jndi.properties"
    },
    {
      "glob": "kotlin/Metadata.class"
    },
    {
      "glob": "kotlin/annotation/MustBeDocumented.class"
    },
    {
      "glob": "kotlin/annotation/Retention.class"
    },
    {
      "glob": "kotlin/annotation/Target.class"
    },
    {
      "glob": "log4j2.StatusLogger.properties"
    },
    {
      "glob": "log4j2.component.properties"
    },
    {
      "glob": "log4j2.system.properties"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "org/apache/catalina/Authenticator.class"
    },
    {
      "glob": "org/apache/catalina/Contained.class"
    },
    {
      "glob": "org/apache/catalina/JmxEnabled.class"
    },
    {
      "glob": "org/apache/catalina/Lifecycle.class"
    },
    {
      "glob": "org/apache/catalina/Realm.class"
    },
    {
      "glob": "org/apache/catalina/Valve.class"
    },
    {
      "glob": "org/apache/catalina/WebResource.class"
    },
    {
      "glob": "org/apache/catalina/WebResourceLockSet.class"
    },
    {
      "glob": "org/apache/catalina/WebResourceRoot.class"
    },
    {
      "glob": "org/apache/catalina/WebResourceSet.class"
    },
    {
      "glob": "org/apache/catalina/authenticator/AuthenticatorBase$AllowCorsPreflight.class"
    },
    {
      "glob": "org/apache/catalina/authenticator/AuthenticatorBase$JaspicState.class"
    },
    {
      "glob": "org/apache/catalina/authenticator/AuthenticatorBase.class"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/authenticator/jaspic/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/connector/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/core/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedFilters.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedListeners.properties"
    },
    {
      "glob": "org/apache/catalina/core/RestrictedServlets.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/deploy/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/loader/JdbcLeakPrevention.class"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/loader/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/mapper/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/mbeans/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/realm/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/realm/RealmBase$AllRolesMode.class"
    },
    {
      "glob": "org/apache/catalina/realm/RealmBase.class"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/security/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/servlets/DefaultServlet$BomConfig.class"
    },
    {
      "glob": "org/apache/catalina/servlets/DefaultServlet$CompressionFormat.class"
    },
    {
      "glob": "org/apache/catalina/servlets/DefaultServlet$PrecompressedResource.class"
    },
    {
      "glob": "org/apache/catalina/servlets/DefaultServlet$SecureEntityResolver.class"
    },
    {
      "glob": "org/apache/catalina/servlets/DefaultServlet$SortManager.class"
    },
    {
      "glob": "org/apache/catalina/servlets/DefaultServlet.class"
    },
    {
      "glob": "org/apache/catalina/servlets/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/servlets/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/servlets/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/servlets/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/servlets/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/session/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/startup/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/util/CharsetMapperDefault.properties"
    },
    {
      "glob": "org/apache/catalina/util/LifecycleBase.class"
    },
    {
      "glob": "org/apache/catalina/util/LifecycleMBeanBase.class"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/util/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/util/ServerInfo.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/valves/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/valves/ValveBase.class"
    },
    {
      "glob": "org/apache/catalina/webresources/AbstractFileResourceSet.class"
    },
    {
      "glob": "org/apache/catalina/webresources/AbstractResource.class"
    },
    {
      "glob": "org/apache/catalina/webresources/AbstractResourceSet.class"
    },
    {
      "glob": "org/apache/catalina/webresources/DirResourceSet.class"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/catalina/webresources/StandardRoot.class"
    },
    {
      "glob": "org/apache/commons/io/file/PathVisitor.class"
    },
    {
      "glob": "org/apache/commons/io/file/SimplePathVisitor.class"
    },
    {
      "glob": "org/apache/coyote/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/coyote/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/coyote/http11/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/coyote/http11/filters/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/ftpserver/ftplet/UserManager.class"
    },
    {
      "glob": "org/apache/ftpserver/message/FtpStatus.properties"
    },
    {
      "glob": "org/apache/ftpserver/usermanager/impl/AbstractUserManager.class"
    },
    {
      "glob": "org/apache/lucene/analysis/Analyzer.class"
    },
    {
      "glob": "org/apache/lucene/analysis/cn/smart/hhmm/bigramdict.mem"
    },
    {
      "glob": "org/apache/lucene/analysis/cn/smart/hhmm/coredict.mem"
    },
    {
      "glob": "org/apache/lucene/analysis/cn/smart/stopwords.txt"
    },
    {
      "glob": "org/apache/naming/LocalStrings.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/naming/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/comments3da0doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctanchorff8atype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctbody0f06type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctbookmarkd672type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctborderf935type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctborders0d66type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctbr7dd8type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcell842btype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcellstylexfsa81ftype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcellxfs1322type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcola95ftype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcols627ctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcomment6a93type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcomments7674type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctcommonslidedata8c7ftype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctdocdefaults2ea8type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctdocument64adtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctdrawing8d34type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctempty3fa5type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctendnotescee2type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctfill550ctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctfills2c6ftype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctfont14d8type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctfonts6623type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctfootnotes691ftype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctftnedncad9type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctgraphicalobject1ce3type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctgraphicalobjectdata66adtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctgroupshape5b43type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctgroupshapenonvisual3e44type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctgroupshapeproperties8690type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cthdrftr26datype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cthdrftrref224dtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cthyperlink38actype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctinline5726type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctlatentstyles2e3atype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctmarkup2d80type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctmarkuprangeba3dtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctnonvisualdrawingprops8fb0type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctnonvisualdrawingshapepropsf17btype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctnotesmaster69ectype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctnotesslideab75type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctnumfmtsb58btype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctofficestylesheetce25type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctoutershadoweffect7b5dtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctpa1e2type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctpicture1054type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctpicture1d48type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctpicturenonvisual05adtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctppr01c0type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctpprdefaultf839type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctpprgenerald6f2type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctpresentation56cbtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctprooferr1e07type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctr8120type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctregulartextrun7e3dtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctrow3b78type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctrowdd39type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctrpr097etype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctrprdefault5ebbtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctrsta472type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctsectpr1123type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctsettingsd6a5type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctshapecfcetype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctshapenonvisualb619type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctshapeproperties30e5type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctsheet4dbetype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctsheetdata8408type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctsheets49fdtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctslided7betype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctslideidlist70a5type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctslideidlistentry427dtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctslidelayouteb34type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctslidemasterd8fctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctslidemasteridlist0b63type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctslidemasteridlistentryae7ftype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctsst44f3type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctstyle41c1type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctstyles8506type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctstylesheet4257type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttablestylelist4bdctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttblc014type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttc4019type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttcpree37type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttext7f5btype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttextbodya3catype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttextcharacterproperties76c0type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttextparagraphcaf2type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/cttextparagraphpropertiesdd05type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctworkbook83c3type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctworksheet530dtype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/ctxf97f7type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/document2bd9doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/endnotes960edoctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/footnotes8773doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/hdra530doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/index.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/notes4a02doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/notesmaster8840doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/pic8010doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/picelement.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/presentation02f7doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/settings9dd1doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/sld1b98doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/sldlayout638edoctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/sldmaster5156doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/sstf81fdoctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/stborderd7ectype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/stcellrefe4e0type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/stcelltypebf95type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/stdrawingelementid75a4type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/sthdrftr30catype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/strelationshipid1e94type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/stverticaljc3629type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/stxstringf179type.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/styles2732doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/stylesheet5d8bdoctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/tblstylelst4997doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/themefd26doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/workbookec17doctype.xsb"
    },
    {
      "glob": "org/apache/poi/schemas/ooxml/system/ooxml/worksheetf539doctype.xsb"
    },
    {
      "glob": "org/apache/tika/mime/custom-mimetypes.xml"
    },
    {
      "glob": "org/apache/tika/mime/tika-mimetypes.xml"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/buf/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/compat/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/descriptor/web/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/http/parser/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/modeler/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/net/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/scan/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/security/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/security/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/security/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/security/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/security/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/util/threads/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings_zh.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings_zh_CN.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings_zh_Hans.properties"
    },
    {
      "glob": "org/apache/tomcat/websocket/server/LocalStrings_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/xmlbeans/impl/regex/message.properties"
    },
    {
      "glob": "org/apache/xmlbeans/impl/regex/message_zh.properties"
    },
    {
      "glob": "org/apache/xmlbeans/impl/regex/message_zh_CN.properties"
    },
    {
      "glob": "org/apache/xmlbeans/impl/regex/message_zh_Hans.properties"
    },
    {
      "glob": "org/apache/xmlbeans/impl/regex/message_zh_Hans_CN.properties"
    },
    {
      "glob": "org/apache/xmlbeans/metadata/system/sXMLCONFIG/index.xsb"
    },
    {
      "glob": "org/apache/xmlbeans/metadata/system/sXMLLANG/index.xsb"
    },
    {
      "glob": "org/apache/xmlbeans/metadata/system/sXMLLANG/space9344attrtypetype.xsb"
    },
    {
      "glob": "org/apache/xmlbeans/metadata/system/sXMLLANG/spaceattribute.xsb"
    },
    {
      "glob": "org/apache/xmlbeans/metadata/system/sXMLLANG/spaceb986attrtype.xsb"
    },
    {
      "glob": "org/apache/xmlbeans/metadata/system/sXMLSCHEMA/index.xsb"
    },
    {
      "glob": "org/apache/xmlbeans/metadata/system/sXMLTOOLS/index.xsb"
    },
    {
      "glob": "org/aspectj/lang/annotation/Aspect.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnCacheDisabled.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupConfigProperty.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupedOpenApiBean.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnListGroupedOpenApiBean.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnActuatorDifferentPort.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$OpenApiResourceAdvice.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$QuerydslProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocRepositoryRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocWebFluxSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$WebConversionServiceConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocDataRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocFunctionCatalogConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocGroovyConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocHateoasConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJacksonKotlinModuleConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJavadocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinConfiguration$KotlinReflectDependingConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinxConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocPageableConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSecurityConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSortConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSpecPropertiesConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$Direction.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$SwaggerUrl.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ApiDocs.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Cache.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$GroupConfig.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Groups.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ModelConverters.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$SortConverter.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Webjars.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$Csrf.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$SyntaxHighlight.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiOAuthProperties.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/MultipleOpenApiSupportConfiguration$SpringDocWebMvcActuatorDifferentConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/MultipleOpenApiSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfig$SwaggerActuatorWelcomeConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfig.class"
    },
    {
      "glob": "org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.class"
    },
    {
      "glob": "org/springframework/aot/hint/RuntimeHintsRegistrar.class"
    },
    {
      "glob": "org/springframework/aot/hint/annotation/Reflective.class"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanClassLoaderAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/InitializingBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CaffeineCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBooleanProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnExpression.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnNotWarDeployment.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnResource.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnSingleCandidate.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration$MessageSourceRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration$ResourceBundleCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/AbstractRepositoryConfigurationSourceSupport.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/ConditionalOnRepositoryType.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/ldap/LdapRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/ldap/LdapRepositoriesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration$GridFsMongoDatabaseFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoDatabaseFactoryDependentConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoRepositoriesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/web/SpringDataWebAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration$StandardGsonBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/ConditionalOnPreferredJsonMapper.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition$JacksonAvailable.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition$JsonbPreferred.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition$GsonPreferred.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition$JacksonJsonbUnavailable.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JsonbHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/reactive/ClientHttpConnectorAutoConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/reactive/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ldap/LdapAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration$MongoClientSettingsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$AsyncConfigurerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$BootstrapExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ExecutorBeanCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ModelCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/TemplateEngineConfigurations$DefaultTemplateEngineConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/TemplateEngineConfigurations$ReactiveTemplateEngineConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DataAttributeDialectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafSecurityDialectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebLayoutConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration$ThymeleafViewResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration$ThymeleafWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/thymeleaf/ThymeleafAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$AspectJTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$TransactionTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/PrimaryDefaultValidatorPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/ConditionalOnEnabledResourceChain.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$NotReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$VirtualThreadsExecutorEnabled.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/TomcatServletWebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$StaticView.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$JettyWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$UndertowWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/ConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/env/EnvironmentPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/web/embedded/tomcat/TomcatContextCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/web/server/ErrorPageRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/web/server/WebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/web/server/mime-mappings.properties"
    },
    {
      "glob": "org/springframework/cache/annotation/AbstractCachingConfiguration$CachingConfigurerSupplier.class"
    },
    {
      "glob": "org/springframework/cache/annotation/AbstractCachingConfiguration.class"
    },
    {
      "glob": "org/springframework/cache/annotation/ProxyCachingConfiguration.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextInitializer.class"
    },
    {
      "glob": "org/springframework/context/ApplicationEvent.class"
    },
    {
      "glob": "org/springframework/context/ApplicationListener.class"
    },
    {
      "glob": "org/springframework/context/EnvironmentAware.class"
    },
    {
      "glob": "org/springframework/context/ResourceLoaderAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/AdviceModeImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/AspectJAutoProxyRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/AutoProxyRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/EnableAspectJAutoProxy.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/context/annotation/Lazy.class"
    },
    {
      "glob": "org/springframework/context/annotation/Primary.class"
    },
    {
      "glob": "org/springframework/context/annotation/PropertySource.class"
    },
    {
      "glob": "org/springframework/context/annotation/Role.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/core/io/support/DefaultPropertySourceFactory.class"
    },
    {
      "glob": "org/springframework/core/io/support/PropertySourceFactory.class"
    },
    {
      "glob": "org/springframework/data/mongodb/config/AbstractMongoClientConfiguration.class"
    },
    {
      "glob": "org/springframework/data/mongodb/config/GeoJsonConfiguration.class"
    },
    {
      "glob": "org/springframework/data/mongodb/config/MongoConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport$QuerydslActivator.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport$SpringDataWebSettingsRegistrar.class"
    },
    {
      "glob": "org/springframework/data/web/config/EnableSpringDataWebSupport.class"
    },
    {
      "glob": "org/springframework/data/web/config/ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataJacksonConfiguration.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataJacksonModules.class"
    },
    {
      "glob": "org/springframework/data/web/config/SpringDataWebConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/EnableTransactionManagement.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/TransactionManagementConfigurationSelector.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/Mapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RequestMapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ResponseBody.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestController.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/context/ServletContextAware.class"
    },
    {
      "glob": "org/springframework/web/servlet/HandlerInterceptor.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurer.class"
    },
    {
      "glob": "org/springframework/web/servlet/i18n/LocaleChangeInterceptor.class"
    },
    {
      "glob": "org/thymeleaf/thymeleaf.properties"
    },
    {
      "glob": "org/xml/sax/EntityResolver.class"
    },
    {
      "glob": "public/articles/api/public/s/view/thumbnail"
    },
    {
      "glob": "public/blog/api/public/s/view/thumbnail"
    },
    {
      "glob": "public/favicon.ico"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "public/null"
    },
    {
      "glob": "public/office/web-apps/apps/api/documents/api.js"
    },
    {
      "glob": "resources/articles/api/public/s/view/thumbnail"
    },
    {
      "glob": "resources/articles/css/dark/index-2.15.0.css"
    },
    {
      "glob": "resources/articles/css/light/index-2.15.0.css"
    },
    {
      "glob": "resources/articles/favicon.ico"
    },
    {
      "glob": "resources/articles/font-awesome/free-6.4.2/css/all.min.css"
    },
    {
      "glob": "resources/articles/font-awesome/free-6.4.2/webfonts/fa-solid-900.woff2"
    },
    {
      "glob": "resources/articles/js/font_2024484_qwtkvngfp5b.js"
    },
    {
      "glob": "resources/articles/js/jquery-3.5.1.min.js"
    },
    {
      "glob": "resources/articles/js/jquery.pjax.js"
    },
    {
      "glob": "resources/articles/layui/css/layui.css"
    },
    {
      "glob": "resources/articles/vditor@3.11.1/dist/css/content-theme/custom-dark.css"
    },
    {
      "glob": "resources/articles/vditor@3.11.1/dist/css/content-theme/custom-light.css"
    },
    {
      "glob": "resources/articles/vditor@3.11.1/dist/index.css"
    },
    {
      "glob": "resources/articles/vditor@3.11.1/dist/index.min.js"
    },
    {
      "glob": "resources/articles/vditor@3.11.1/dist/js/highlight.js/styles/androidstudio.min.css"
    },
    {
      "glob": "resources/articles/vditor@3.11.1/dist/js/highlight.js/styles/github.min.css"
    },
    {
      "glob": "resources/articles/viewerjs/viewer.min.css"
    },
    {
      "glob": "resources/articles/viewerjs/viewer.min.js"
    },
    {
      "glob": "resources/blog/api/public/s/view/thumbnail"
    },
    {
      "glob": "resources/favicon.ico"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "resources/null"
    },
    {
      "glob": "resources/office/web-apps/apps/api/documents/api.js"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "springdoc.config.properties"
    },
    {
      "glob": "static/articles/api/public/s/view/thumbnail"
    },
    {
      "glob": "static/articles/css/dark/index-2.15.0.css"
    },
    {
      "glob": "static/articles/css/light/index-2.15.0.css"
    },
    {
      "glob": "static/articles/favicon.ico"
    },
    {
      "glob": "static/articles/font-awesome/free-6.4.2/css/all.min.css"
    },
    {
      "glob": "static/articles/font-awesome/free-6.4.2/webfonts/fa-solid-900.woff2"
    },
    {
      "glob": "static/articles/js/font_2024484_qwtkvngfp5b.js"
    },
    {
      "glob": "static/articles/js/jquery-3.5.1.min.js"
    },
    {
      "glob": "static/articles/js/jquery.pjax.js"
    },
    {
      "glob": "static/articles/layui/css/layui.css"
    },
    {
      "glob": "static/articles/vditor@3.11.1/dist/css/content-theme/custom-dark.css"
    },
    {
      "glob": "static/articles/vditor@3.11.1/dist/css/content-theme/custom-light.css"
    },
    {
      "glob": "static/articles/vditor@3.11.1/dist/index.css"
    },
    {
      "glob": "static/articles/vditor@3.11.1/dist/index.min.js"
    },
    {
      "glob": "static/articles/vditor@3.11.1/dist/js/highlight.js/styles/androidstudio.min.css"
    },
    {
      "glob": "static/articles/vditor@3.11.1/dist/js/highlight.js/styles/github.min.css"
    },
    {
      "glob": "static/articles/viewerjs/viewer.min.css"
    },
    {
      "glob": "static/articles/viewerjs/viewer.min.js"
    },
    {
      "glob": "static/blog/api/public/s/view/thumbnail"
    },
    {
      "glob": "static/favicon.ico"
    },
    {
      "glob": "static/index.html"
    },
    {
      "glob": "static/null"
    },
    {
      "glob": "static/office/web-apps/apps/api/documents/api.js"
    },
    {
      "glob": "templates"
    },
    {
      "glob": "templates/404.html"
    },
    {
      "glob": "templates/archives.html"
    },
    {
      "glob": "templates/article.html"
    },
    {
      "glob": "templates/articles-query.html"
    },
    {
      "glob": "templates/articles.html"
    },
    {
      "glob": "templates/categories.html"
    },
    {
      "glob": "templates/component/article-tail.html"
    },
    {
      "glob": "templates/component/article-top.html"
    },
    {
      "glob": "templates/component/articles-list.html"
    },
    {
      "glob": "templates/component/common-js.html"
    },
    {
      "glob": "templates/component/footer.html"
    },
    {
      "glob": "templates/component/head.html"
    },
    {
      "glob": "templates/component/sidebar.html"
    },
    {
      "glob": "templates/error.html"
    },
    {
      "glob": "templates/index.html"
    },
    {
      "glob": "templates/tags.html"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfkc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/uprops.icu"
    },
    {
      "module": "java.base",
      "glob": "sun/net/idn/uidna.spp"
    },
    {
      "module": "java.base",
      "glob": "sun/text/resources/SentenceBreakIteratorData"
    },
    {
      "module": "java.xml",
      "glob": "com/sun/org/apache/xerces/internal/impl/msg/SAXMessages.properties"
    },
    {
      "module": "java.xml",
      "glob": "com/sun/org/apache/xerces/internal/impl/msg/SAXMessages_zh.properties"
    },
    {
      "module": "java.xml",
      "glob": "com/sun/org/apache/xerces/internal/impl/msg/SAXMessages_zh_CN.properties"
    },
    {
      "module": "java.xml",
      "glob": "com/sun/org/apache/xerces/internal/impl/msg/SAXMessages_zh_Hans.properties"
    },
    {
      "module": "java.xml",
      "glob": "com/sun/org/apache/xerces/internal/impl/msg/SAXMessages_zh_Hans_CN.properties"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    },
    {
      "module": "java.xml",
      "glob": "org/xml/sax/EntityResolver.class"
    }
  ],
  "bundles": [
    {
      "name": "com.sun.org.apache.xerces.internal.impl.msg.SAXMessages",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "i18n/messages",
      "locales": [
        "en-US",
        "zh-CN"
      ]
    },
    {
      "name": "jakarta.servlet.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "jakarta.servlet.http.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.authenticator.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.authenticator.jaspic.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.connector.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.core.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.deploy.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.loader.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.mapper.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.mbeans.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.realm.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.security.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.servlets.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.session.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.startup.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.util.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.valves.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.catalina.webresources.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.coyote.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.coyote.http11.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.coyote.http11.filters.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.naming.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.buf.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.compat.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.descriptor.web.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.http.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.http.parser.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.modeler.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.net.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.scan.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.security.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.util.threads.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.websocket.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.tomcat.websocket.server.LocalStrings",
      "locales": [
        "zh-Hans-CN"
      ]
    },
    {
      "name": "org.apache.xmlbeans.impl.regex.message",
      "locales": [
        "zh-Hans-CN"
      ]
    }
  ],
  "serialization": [
    {
      "type": "char[]"
    },
    {
      "type": "char[][]"
    },
    {
      "type": "char[][][]"
    },
    {
      "type": "int[]"
    },
    {
      "type": "int[][]"
    },
    {
      "type": "long[]"
    },
    {
      "type": "short[]"
    }
  ],
  "jni": [
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "com.sun.jna.Callback"
    },
    {
      "type": "com.sun.jna.CallbackProxy",
      "methods": [
        {
          "name": "callback",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.CallbackReference",
      "methods": [
        {
          "name": "getCallback",
          "parameterTypes": [
            "java.lang.Class",
            "com.sun.jna.Pointer",
            "boolean"
          ]
        },
        {
          "name": "getFunctionPointer",
          "parameterTypes": [
            "com.sun.jna.Callback",
            "boolean"
          ]
        },
        {
          "name": "getNativeString",
          "parameterTypes": [
            "java.lang.Object",
            "boolean"
          ]
        },
        {
          "name": "initializeThread",
          "parameterTypes": [
            "com.sun.jna.Callback",
            "com.sun.jna.CallbackReference$AttachOptions"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.CallbackReference$AttachOptions"
    },
    {
      "type": "com.sun.jna.FromNativeConverter",
      "methods": [
        {
          "name": "nativeType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.IntegerType",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "com.sun.jna.JNIEnv"
    },
    {
      "type": "com.sun.jna.Native",
      "methods": [
        {
          "name": "dispose",
          "parameterTypes": []
        },
        {
          "name": "fromNative",
          "parameterTypes": [
            "com.sun.jna.FromNativeConverter",
            "java.lang.Object",
            "java.lang.reflect.Method"
          ]
        },
        {
          "name": "fromNative",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.Object"
          ]
        },
        {
          "name": "fromNative",
          "parameterTypes": [
            "java.lang.reflect.Method",
            "java.lang.Object"
          ]
        },
        {
          "name": "nativeType",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "toNative",
          "parameterTypes": [
            "com.sun.jna.ToNativeConverter",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.Native$ffi_callback",
      "methods": [
        {
          "name": "invoke",
          "parameterTypes": [
            "long",
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.NativeMapped",
      "methods": [
        {
          "name": "toNative",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jna.Pointer",
      "fields": [
        {
          "name": "peer"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.PointerType",
      "fields": [
        {
          "name": "pointer"
        }
      ]
    },
    {
      "type": "com.sun.jna.Structure",
      "fields": [
        {
          "name": "memory"
        },
        {
          "name": "typeInfo"
        }
      ],
      "methods": [
        {
          "name": "autoRead",
          "parameterTypes": []
        },
        {
          "name": "autoWrite",
          "parameterTypes": []
        },
        {
          "name": "getTypeInfo",
          "parameterTypes": []
        },
        {
          "name": "newInstance",
          "parameterTypes": [
            "java.lang.Class",
            "long"
          ]
        }
      ]
    },
    {
      "type": "com.sun.jna.Structure$ByValue"
    },
    {
      "type": "com.sun.jna.Structure$FFIType$FFITypes",
      "fields": [
        {
          "name": "ffi_type_double"
        },
        {
          "name": "ffi_type_float"
        },
        {
          "name": "ffi_type_longdouble"
        },
        {
          "name": "ffi_type_pointer"
        },
        {
          "name": "ffi_type_sint16"
        },
        {
          "name": "ffi_type_sint32"
        },
        {
          "name": "ffi_type_sint64"
        },
        {
          "name": "ffi_type_sint8"
        },
        {
          "name": "ffi_type_uint16"
        },
        {
          "name": "ffi_type_uint32"
        },
        {
          "name": "ffi_type_uint64"
        },
        {
          "name": "ffi_type_uint8"
        },
        {
          "name": "ffi_type_void"
        }
      ]
    },
    {
      "type": "com.sun.jna.WString",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.VMOption$Origin",
      "fields": [
        {
          "name": "ATTACH_ON_DEMAND"
        },
        {
          "name": "CONFIG_FILE"
        },
        {
          "name": "DEFAULT"
        },
        {
          "name": "ENVIRON_VAR"
        },
        {
          "name": "ERGONOMIC"
        },
        {
          "name": "MANAGEMENT"
        },
        {
          "name": "OTHER"
        },
        {
          "name": "VM_CREATION"
        }
      ]
    },
    {
      "type": "com.sun.management.internal.Flag",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Object",
            "boolean",
            "boolean",
            "com.sun.management.VMOption$Origin"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "char"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "double"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Object",
      "methods": [
        {
          "name": "toString",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        },
        {
          "name": "value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "short"
          ]
        }
      ]
    },
    {
      "type": "java.lang.String",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "java.lang.String"
          ]
        },
        {
          "name": "getBytes",
          "parameterTypes": []
        },
        {
          "name": "getBytes",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "toCharArray",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.UnsatisfiedLinkError",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.reflect.Method",
      "methods": [
        {
          "name": "getParameterTypes",
          "parameterTypes": []
        },
        {
          "name": "getReturnType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "methods": [
        {
          "name": "position",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.CharBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.DoubleBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.FloatBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.IntBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.LongBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.ShortBuffer",
      "methods": [
        {
          "name": "array",
          "parameterTypes": []
        },
        {
          "name": "arrayOffset",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}
